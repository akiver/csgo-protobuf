// @generated by protoc-gen-es v2.6.3 with parameter "target=ts,import_extension=js"
// @generated from file steammessages.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { FieldOptions, MessageOptions } from "./google/protobuf/descriptor_pb.js";
import { file_google_protobuf_descriptor } from "./google/protobuf/descriptor_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages.proto.
 */
export const file_steammessages: GenFile = /*@__PURE__*/
  fileDesc("ChNzdGVhbW1lc3NhZ2VzLnByb3RvIvkCChJDTXNnUHJvdG9CdWZIZWFkZXISFwoPY2xpZW50X3N0ZWFtX2lkGAEgASgGEhkKEWNsaWVudF9zZXNzaW9uX2lkGAIgASgFEhUKDXNvdXJjZV9hcHBfaWQYAyABKA0SKwoNam9iX2lkX3NvdXJjZRgKIAEoBjoUMTg0NDY3NDQwNzM3MDk1NTE2MTUSKwoNam9iX2lkX3RhcmdldBgLIAEoBjoUMTg0NDY3NDQwNzM3MDk1NTE2MTUSFwoPdGFyZ2V0X2pvYl9uYW1lGAwgASgJEhIKB2VyZXN1bHQYDSABKAU6ATISFQoNZXJyb3JfbWVzc2FnZRgOIAEoCRIKCgJpcBgPIAEoDRJECgpnY19tc2dfc3JjGMgBIAEoDjIRLkdDUHJvdG9CdWZNc2dTcmM6HEdDUHJvdG9CdWZNc2dTcmNfVW5zcGVjaWZpZWQSHAoTZ2NfZGlyX2luZGV4X3NvdXJjZRjJASABKA06CoCmHYACiKYdgAgidwo7Q0NoaW5hQWdyZWVtZW50U2Vzc2lvbnNfU3RhcnRBZ3JlZW1lbnRTZXNzaW9uSW5HYW1lX1JlcXVlc3QSDQoFYXBwaWQYASABKA0SDwoHc3RlYW1pZBgCIAEoBhIYChBjbGllbnRfaXBhZGRyZXNzGAMgASgJIlUKPENDaGluYUFncmVlbWVudFNlc3Npb25zX1N0YXJ0QWdyZWVtZW50U2Vzc2lvbkluR2FtZV9SZXNwb25zZRIVCg1hZ3JlZW1lbnRfdXJsGAEgASgJKrYBChBHQ1Byb3RvQnVmTXNnU3JjEiAKHEdDUHJvdG9CdWZNc2dTcmNfVW5zcGVjaWZpZWQQABIfChtHQ1Byb3RvQnVmTXNnU3JjX0Zyb21TeXN0ZW0QARIgChxHQ1Byb3RvQnVmTXNnU3JjX0Zyb21TdGVhbUlEEAISGwoXR0NQcm90b0J1Zk1zZ1NyY19Gcm9tR0MQAxIgChxHQ1Byb3RvQnVmTXNnU3JjX1JlcGx5U3lzdGVtEAQ6QwoJa2V5X2ZpZWxkEh0uZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucxjg1AMgASgIOgVmYWxzZVIIa2V5RmllbGQ6UwoSbXNncG9vbF9zb2Z0X2xpbWl0Eh8uZ29vZ2xlLnByb3RvYnVmLk1lc3NhZ2VPcHRpb25zGODUAyABKAU6AjMyUhBtc2dwb29sU29mdExpbWl0OlQKEm1zZ3Bvb2xfaGFyZF9saW1pdBIfLmdvb2dsZS5wcm90b2J1Zi5NZXNzYWdlT3B0aW9ucxjh1AMgASgFOgMzODRSEG1zZ3Bvb2xIYXJkTGltaXQ", [file_google_protobuf_descriptor]);

/**
 * @generated from message CMsgProtoBufHeader
 */
export type CMsgProtoBufHeader = Message<"CMsgProtoBufHeader"> & {
  /**
   * @generated from field: optional fixed64 client_steam_id = 1;
   */
  clientSteamId: bigint;

  /**
   * @generated from field: optional int32 client_session_id = 2;
   */
  clientSessionId: number;

  /**
   * @generated from field: optional uint32 source_app_id = 3;
   */
  sourceAppId: number;

  /**
   * @generated from field: optional fixed64 job_id_source = 10 [default = 18446744073709551615];
   */
  jobIdSource: bigint;

  /**
   * @generated from field: optional fixed64 job_id_target = 11 [default = 18446744073709551615];
   */
  jobIdTarget: bigint;

  /**
   * @generated from field: optional string target_job_name = 12;
   */
  targetJobName: string;

  /**
   * @generated from field: optional int32 eresult = 13 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional string error_message = 14;
   */
  errorMessage: string;

  /**
   * @generated from field: optional uint32 ip = 15;
   */
  ip: number;

  /**
   * @generated from field: optional GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
   */
  gcMsgSrc: GCProtoBufMsgSrc;

  /**
   * @generated from field: optional uint32 gc_dir_index_source = 201;
   */
  gcDirIndexSource: number;
};

/**
 * Describes the message CMsgProtoBufHeader.
 * Use `create(CMsgProtoBufHeaderSchema)` to create a new message.
 */
export const CMsgProtoBufHeaderSchema: GenMessage<CMsgProtoBufHeader> = /*@__PURE__*/
  messageDesc(file_steammessages, 0);

/**
 * @generated from message CChinaAgreementSessions_StartAgreementSessionInGame_Request
 */
export type CChinaAgreementSessions_StartAgreementSessionInGame_Request = Message<"CChinaAgreementSessions_StartAgreementSessionInGame_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string client_ipaddress = 3;
   */
  clientIpaddress: string;
};

/**
 * Describes the message CChinaAgreementSessions_StartAgreementSessionInGame_Request.
 * Use `create(CChinaAgreementSessions_StartAgreementSessionInGame_RequestSchema)` to create a new message.
 */
export const CChinaAgreementSessions_StartAgreementSessionInGame_RequestSchema: GenMessage<CChinaAgreementSessions_StartAgreementSessionInGame_Request> = /*@__PURE__*/
  messageDesc(file_steammessages, 1);

/**
 * @generated from message CChinaAgreementSessions_StartAgreementSessionInGame_Response
 */
export type CChinaAgreementSessions_StartAgreementSessionInGame_Response = Message<"CChinaAgreementSessions_StartAgreementSessionInGame_Response"> & {
  /**
   * @generated from field: optional string agreement_url = 1;
   */
  agreementUrl: string;
};

/**
 * Describes the message CChinaAgreementSessions_StartAgreementSessionInGame_Response.
 * Use `create(CChinaAgreementSessions_StartAgreementSessionInGame_ResponseSchema)` to create a new message.
 */
export const CChinaAgreementSessions_StartAgreementSessionInGame_ResponseSchema: GenMessage<CChinaAgreementSessions_StartAgreementSessionInGame_Response> = /*@__PURE__*/
  messageDesc(file_steammessages, 2);

/**
 * @generated from enum GCProtoBufMsgSrc
 */
export enum GCProtoBufMsgSrc {
  /**
   * @generated from enum value: GCProtoBufMsgSrc_Unspecified = 0;
   */
  GCProtoBufMsgSrc_Unspecified = 0,

  /**
   * @generated from enum value: GCProtoBufMsgSrc_FromSystem = 1;
   */
  GCProtoBufMsgSrc_FromSystem = 1,

  /**
   * @generated from enum value: GCProtoBufMsgSrc_FromSteamID = 2;
   */
  GCProtoBufMsgSrc_FromSteamID = 2,

  /**
   * @generated from enum value: GCProtoBufMsgSrc_FromGC = 3;
   */
  GCProtoBufMsgSrc_FromGC = 3,

  /**
   * @generated from enum value: GCProtoBufMsgSrc_ReplySystem = 4;
   */
  GCProtoBufMsgSrc_ReplySystem = 4,
}

/**
 * Describes the enum GCProtoBufMsgSrc.
 */
export const GCProtoBufMsgSrcSchema: GenEnum<GCProtoBufMsgSrc> = /*@__PURE__*/
  enumDesc(file_steammessages, 0);

/**
 * @generated from extension: optional bool key_field = 60000 [default = false];
 */
export const key_field: GenExtension<FieldOptions, boolean> = /*@__PURE__*/
  extDesc(file_steammessages, 0);

/**
 * @generated from extension: optional int32 msgpool_soft_limit = 60000 [default = 32];
 */
export const msgpool_soft_limit: GenExtension<MessageOptions, number> = /*@__PURE__*/
  extDesc(file_steammessages, 1);

/**
 * @generated from extension: optional int32 msgpool_hard_limit = 60001 [default = 384];
 */
export const msgpool_hard_limit: GenExtension<MessageOptions, number> = /*@__PURE__*/
  extDesc(file_steammessages, 2);


// @generated by protoc-gen-es v0.2.1 with parameter "target=ts"
// @generated from file netmessages.proto (syntax proto2)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto2} from "@bufbuild/protobuf";

/**
 * @generated from enum NET_Messages
 */
export enum NET_Messages {
  /**
   * @generated from enum value: net_NOP = 0;
   */
  net_NOP = 0,

  /**
   * @generated from enum value: net_Disconnect = 1;
   */
  net_Disconnect = 1,

  /**
   * @generated from enum value: net_File = 2;
   */
  net_File = 2,

  /**
   * @generated from enum value: net_SplitScreenUser = 3;
   */
  net_SplitScreenUser = 3,

  /**
   * @generated from enum value: net_Tick = 4;
   */
  net_Tick = 4,

  /**
   * @generated from enum value: net_StringCmd = 5;
   */
  net_StringCmd = 5,

  /**
   * @generated from enum value: net_SetConVar = 6;
   */
  net_SetConVar = 6,

  /**
   * @generated from enum value: net_SignonState = 7;
   */
  net_SignonState = 7,

  /**
   * @generated from enum value: net_PlayerAvatarData = 100;
   */
  net_PlayerAvatarData = 100,
}
// Retrieve enum metadata with: proto2.getEnumType(NET_Messages)
proto2.util.setEnumType(NET_Messages, "NET_Messages", [
  { no: 0, name: "net_NOP" },
  { no: 1, name: "net_Disconnect" },
  { no: 2, name: "net_File" },
  { no: 3, name: "net_SplitScreenUser" },
  { no: 4, name: "net_Tick" },
  { no: 5, name: "net_StringCmd" },
  { no: 6, name: "net_SetConVar" },
  { no: 7, name: "net_SignonState" },
  { no: 100, name: "net_PlayerAvatarData" },
]);

/**
 * @generated from enum CLC_Messages
 */
export enum CLC_Messages {
  /**
   * @generated from enum value: clc_ClientInfo = 8;
   */
  clc_ClientInfo = 8,

  /**
   * @generated from enum value: clc_Move = 9;
   */
  clc_Move = 9,

  /**
   * @generated from enum value: clc_VoiceData = 10;
   */
  clc_VoiceData = 10,

  /**
   * @generated from enum value: clc_BaselineAck = 11;
   */
  clc_BaselineAck = 11,

  /**
   * @generated from enum value: clc_ListenEvents = 12;
   */
  clc_ListenEvents = 12,

  /**
   * @generated from enum value: clc_RespondCvarValue = 13;
   */
  clc_RespondCvarValue = 13,

  /**
   * @generated from enum value: clc_FileCRCCheck = 14;
   */
  clc_FileCRCCheck = 14,

  /**
   * @generated from enum value: clc_LoadingProgress = 15;
   */
  clc_LoadingProgress = 15,

  /**
   * @generated from enum value: clc_SplitPlayerConnect = 16;
   */
  clc_SplitPlayerConnect = 16,

  /**
   * @generated from enum value: clc_ClientMessage = 17;
   */
  clc_ClientMessage = 17,

  /**
   * @generated from enum value: clc_CmdKeyValues = 18;
   */
  clc_CmdKeyValues = 18,

  /**
   * @generated from enum value: clc_HltvReplay = 20;
   */
  clc_HltvReplay = 20,
}
// Retrieve enum metadata with: proto2.getEnumType(CLC_Messages)
proto2.util.setEnumType(CLC_Messages, "CLC_Messages", [
  { no: 8, name: "clc_ClientInfo" },
  { no: 9, name: "clc_Move" },
  { no: 10, name: "clc_VoiceData" },
  { no: 11, name: "clc_BaselineAck" },
  { no: 12, name: "clc_ListenEvents" },
  { no: 13, name: "clc_RespondCvarValue" },
  { no: 14, name: "clc_FileCRCCheck" },
  { no: 15, name: "clc_LoadingProgress" },
  { no: 16, name: "clc_SplitPlayerConnect" },
  { no: 17, name: "clc_ClientMessage" },
  { no: 18, name: "clc_CmdKeyValues" },
  { no: 20, name: "clc_HltvReplay" },
]);

/**
 * @generated from enum VoiceDataFormat_t
 */
export enum VoiceDataFormat_t {
  /**
   * @generated from enum value: VOICEDATA_FORMAT_STEAM = 0;
   */
  VOICEDATA_FORMAT_STEAM = 0,

  /**
   * @generated from enum value: VOICEDATA_FORMAT_ENGINE = 1;
   */
  VOICEDATA_FORMAT_ENGINE = 1,
}
// Retrieve enum metadata with: proto2.getEnumType(VoiceDataFormat_t)
proto2.util.setEnumType(VoiceDataFormat_t, "VoiceDataFormat_t", [
  { no: 0, name: "VOICEDATA_FORMAT_STEAM" },
  { no: 1, name: "VOICEDATA_FORMAT_ENGINE" },
]);

/**
 * @generated from enum ESplitScreenMessageType
 */
export enum ESplitScreenMessageType {
  /**
   * @generated from enum value: MSG_SPLITSCREEN_ADDUSER = 0;
   */
  MSG_SPLITSCREEN_ADDUSER = 0,

  /**
   * @generated from enum value: MSG_SPLITSCREEN_REMOVEUSER = 1;
   */
  MSG_SPLITSCREEN_REMOVEUSER = 1,

  /**
   * @generated from enum value: MSG_SPLITSCREEN_TYPE_BITS = 1;
   */
  MSG_SPLITSCREEN_TYPE_BITS = 1,
}
// Retrieve enum metadata with: proto2.getEnumType(ESplitScreenMessageType)
proto2.util.setEnumType(ESplitScreenMessageType, "ESplitScreenMessageType", [
  { no: 0, name: "MSG_SPLITSCREEN_ADDUSER" },
  { no: 1, name: "MSG_SPLITSCREEN_REMOVEUSER" },
  { no: 1, name: "MSG_SPLITSCREEN_TYPE_BITS" },
]);

/**
 * @generated from enum SVC_Messages
 */
export enum SVC_Messages {
  /**
   * @generated from enum value: svc_ServerInfo = 8;
   */
  svc_ServerInfo = 8,

  /**
   * @generated from enum value: svc_SendTable = 9;
   */
  svc_SendTable = 9,

  /**
   * @generated from enum value: svc_ClassInfo = 10;
   */
  svc_ClassInfo = 10,

  /**
   * @generated from enum value: svc_SetPause = 11;
   */
  svc_SetPause = 11,

  /**
   * @generated from enum value: svc_CreateStringTable = 12;
   */
  svc_CreateStringTable = 12,

  /**
   * @generated from enum value: svc_UpdateStringTable = 13;
   */
  svc_UpdateStringTable = 13,

  /**
   * @generated from enum value: svc_VoiceInit = 14;
   */
  svc_VoiceInit = 14,

  /**
   * @generated from enum value: svc_VoiceData = 15;
   */
  svc_VoiceData = 15,

  /**
   * @generated from enum value: svc_Print = 16;
   */
  svc_Print = 16,

  /**
   * @generated from enum value: svc_Sounds = 17;
   */
  svc_Sounds = 17,

  /**
   * @generated from enum value: svc_SetView = 18;
   */
  svc_SetView = 18,

  /**
   * @generated from enum value: svc_FixAngle = 19;
   */
  svc_FixAngle = 19,

  /**
   * @generated from enum value: svc_CrosshairAngle = 20;
   */
  svc_CrosshairAngle = 20,

  /**
   * @generated from enum value: svc_BSPDecal = 21;
   */
  svc_BSPDecal = 21,

  /**
   * @generated from enum value: svc_SplitScreen = 22;
   */
  svc_SplitScreen = 22,

  /**
   * @generated from enum value: svc_UserMessage = 23;
   */
  svc_UserMessage = 23,

  /**
   * @generated from enum value: svc_EntityMessage = 24;
   */
  svc_EntityMessage = 24,

  /**
   * @generated from enum value: svc_GameEvent = 25;
   */
  svc_GameEvent = 25,

  /**
   * @generated from enum value: svc_PacketEntities = 26;
   */
  svc_PacketEntities = 26,

  /**
   * @generated from enum value: svc_TempEntities = 27;
   */
  svc_TempEntities = 27,

  /**
   * @generated from enum value: svc_Prefetch = 28;
   */
  svc_Prefetch = 28,

  /**
   * @generated from enum value: svc_Menu = 29;
   */
  svc_Menu = 29,

  /**
   * @generated from enum value: svc_GameEventList = 30;
   */
  svc_GameEventList = 30,

  /**
   * @generated from enum value: svc_GetCvarValue = 31;
   */
  svc_GetCvarValue = 31,

  /**
   * @generated from enum value: svc_PaintmapData = 33;
   */
  svc_PaintmapData = 33,

  /**
   * @generated from enum value: svc_CmdKeyValues = 34;
   */
  svc_CmdKeyValues = 34,

  /**
   * @generated from enum value: svc_EncryptedData = 35;
   */
  svc_EncryptedData = 35,

  /**
   * @generated from enum value: svc_HltvReplay = 36;
   */
  svc_HltvReplay = 36,

  /**
   * @generated from enum value: svc_Broadcast_Command = 38;
   */
  svc_Broadcast_Command = 38,
}
// Retrieve enum metadata with: proto2.getEnumType(SVC_Messages)
proto2.util.setEnumType(SVC_Messages, "SVC_Messages", [
  { no: 8, name: "svc_ServerInfo" },
  { no: 9, name: "svc_SendTable" },
  { no: 10, name: "svc_ClassInfo" },
  { no: 11, name: "svc_SetPause" },
  { no: 12, name: "svc_CreateStringTable" },
  { no: 13, name: "svc_UpdateStringTable" },
  { no: 14, name: "svc_VoiceInit" },
  { no: 15, name: "svc_VoiceData" },
  { no: 16, name: "svc_Print" },
  { no: 17, name: "svc_Sounds" },
  { no: 18, name: "svc_SetView" },
  { no: 19, name: "svc_FixAngle" },
  { no: 20, name: "svc_CrosshairAngle" },
  { no: 21, name: "svc_BSPDecal" },
  { no: 22, name: "svc_SplitScreen" },
  { no: 23, name: "svc_UserMessage" },
  { no: 24, name: "svc_EntityMessage" },
  { no: 25, name: "svc_GameEvent" },
  { no: 26, name: "svc_PacketEntities" },
  { no: 27, name: "svc_TempEntities" },
  { no: 28, name: "svc_Prefetch" },
  { no: 29, name: "svc_Menu" },
  { no: 30, name: "svc_GameEventList" },
  { no: 31, name: "svc_GetCvarValue" },
  { no: 33, name: "svc_PaintmapData" },
  { no: 34, name: "svc_CmdKeyValues" },
  { no: 35, name: "svc_EncryptedData" },
  { no: 36, name: "svc_HltvReplay" },
  { no: 38, name: "svc_Broadcast_Command" },
]);

/**
 * @generated from enum ReplayEventType_t
 */
export enum ReplayEventType_t {
  /**
   * @generated from enum value: REPLAY_EVENT_CANCEL = 0;
   */
  REPLAY_EVENT_CANCEL = 0,

  /**
   * @generated from enum value: REPLAY_EVENT_DEATH = 1;
   */
  REPLAY_EVENT_DEATH = 1,

  /**
   * @generated from enum value: REPLAY_EVENT_GENERIC = 2;
   */
  REPLAY_EVENT_GENERIC = 2,

  /**
   * @generated from enum value: REPLAY_EVENT_STUCK_NEED_FULL_UPDATE = 3;
   */
  REPLAY_EVENT_STUCK_NEED_FULL_UPDATE = 3,
}
// Retrieve enum metadata with: proto2.getEnumType(ReplayEventType_t)
proto2.util.setEnumType(ReplayEventType_t, "ReplayEventType_t", [
  { no: 0, name: "REPLAY_EVENT_CANCEL" },
  { no: 1, name: "REPLAY_EVENT_DEATH" },
  { no: 2, name: "REPLAY_EVENT_GENERIC" },
  { no: 3, name: "REPLAY_EVENT_STUCK_NEED_FULL_UPDATE" },
]);

/**
 * @generated from message CMsgVector
 */
export class CMsgVector extends Message<CMsgVector> {
  /**
   * @generated from field: optional float x = 1;
   */
  x?: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y?: number;

  /**
   * @generated from field: optional float z = 3;
   */
  z?: number;

  constructor(data?: PartialMessage<CMsgVector>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CMsgVector";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "x", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 2, name: "y", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "z", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgVector {
    return new CMsgVector().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgVector {
    return new CMsgVector().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgVector {
    return new CMsgVector().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgVector | PlainMessage<CMsgVector> | undefined, b: CMsgVector | PlainMessage<CMsgVector> | undefined): boolean {
    return proto2.util.equals(CMsgVector, a, b);
  }
}

/**
 * @generated from message CMsgVector2D
 */
export class CMsgVector2D extends Message<CMsgVector2D> {
  /**
   * @generated from field: optional float x = 1;
   */
  x?: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y?: number;

  constructor(data?: PartialMessage<CMsgVector2D>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CMsgVector2D";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "x", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 2, name: "y", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgVector2D {
    return new CMsgVector2D().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgVector2D {
    return new CMsgVector2D().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgVector2D {
    return new CMsgVector2D().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgVector2D | PlainMessage<CMsgVector2D> | undefined, b: CMsgVector2D | PlainMessage<CMsgVector2D> | undefined): boolean {
    return proto2.util.equals(CMsgVector2D, a, b);
  }
}

/**
 * @generated from message CMsgQAngle
 */
export class CMsgQAngle extends Message<CMsgQAngle> {
  /**
   * @generated from field: optional float x = 1;
   */
  x?: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y?: number;

  /**
   * @generated from field: optional float z = 3;
   */
  z?: number;

  constructor(data?: PartialMessage<CMsgQAngle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CMsgQAngle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "x", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 2, name: "y", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "z", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgQAngle {
    return new CMsgQAngle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgQAngle {
    return new CMsgQAngle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgQAngle {
    return new CMsgQAngle().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgQAngle | PlainMessage<CMsgQAngle> | undefined, b: CMsgQAngle | PlainMessage<CMsgQAngle> | undefined): boolean {
    return proto2.util.equals(CMsgQAngle, a, b);
  }
}

/**
 * @generated from message CMsgRGBA
 */
export class CMsgRGBA extends Message<CMsgRGBA> {
  /**
   * @generated from field: optional int32 r = 1;
   */
  r?: number;

  /**
   * @generated from field: optional int32 g = 2;
   */
  g?: number;

  /**
   * @generated from field: optional int32 b = 3;
   */
  b?: number;

  /**
   * @generated from field: optional int32 a = 4;
   */
  a?: number;

  constructor(data?: PartialMessage<CMsgRGBA>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CMsgRGBA";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "r", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "g", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "b", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgRGBA {
    return new CMsgRGBA().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgRGBA {
    return new CMsgRGBA().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgRGBA {
    return new CMsgRGBA().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgRGBA | PlainMessage<CMsgRGBA> | undefined, b: CMsgRGBA | PlainMessage<CMsgRGBA> | undefined): boolean {
    return proto2.util.equals(CMsgRGBA, a, b);
  }
}

/**
 * @generated from message CNETMsg_Tick
 */
export class CNETMsg_Tick extends Message<CNETMsg_Tick> {
  /**
   * @generated from field: optional uint32 tick = 1;
   */
  tick?: number;

  /**
   * @generated from field: optional uint32 host_computationtime = 4;
   */
  hostComputationtime?: number;

  /**
   * @generated from field: optional uint32 host_computationtime_std_deviation = 5;
   */
  hostComputationtimeStdDeviation?: number;

  /**
   * @generated from field: optional uint32 host_framestarttime_std_deviation = 6;
   */
  hostFramestarttimeStdDeviation?: number;

  /**
   * @generated from field: optional uint32 hltv_replay_flags = 7;
   */
  hltvReplayFlags?: number;

  constructor(data?: PartialMessage<CNETMsg_Tick>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CNETMsg_Tick";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "tick", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "host_computationtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "host_computationtime_std_deviation", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "host_framestarttime_std_deviation", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "hltv_replay_flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_Tick {
    return new CNETMsg_Tick().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_Tick {
    return new CNETMsg_Tick().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_Tick {
    return new CNETMsg_Tick().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_Tick | PlainMessage<CNETMsg_Tick> | undefined, b: CNETMsg_Tick | PlainMessage<CNETMsg_Tick> | undefined): boolean {
    return proto2.util.equals(CNETMsg_Tick, a, b);
  }
}

/**
 * @generated from message CNETMsg_StringCmd
 */
export class CNETMsg_StringCmd extends Message<CNETMsg_StringCmd> {
  /**
   * @generated from field: optional string command = 1;
   */
  command?: string;

  constructor(data?: PartialMessage<CNETMsg_StringCmd>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CNETMsg_StringCmd";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "command", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_StringCmd {
    return new CNETMsg_StringCmd().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_StringCmd {
    return new CNETMsg_StringCmd().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_StringCmd {
    return new CNETMsg_StringCmd().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_StringCmd | PlainMessage<CNETMsg_StringCmd> | undefined, b: CNETMsg_StringCmd | PlainMessage<CNETMsg_StringCmd> | undefined): boolean {
    return proto2.util.equals(CNETMsg_StringCmd, a, b);
  }
}

/**
 * @generated from message CNETMsg_SignonState
 */
export class CNETMsg_SignonState extends Message<CNETMsg_SignonState> {
  /**
   * @generated from field: optional uint32 signon_state = 1;
   */
  signonState?: number;

  /**
   * @generated from field: optional uint32 spawn_count = 2;
   */
  spawnCount?: number;

  /**
   * @generated from field: optional uint32 num_server_players = 3;
   */
  numServerPlayers?: number;

  /**
   * @generated from field: repeated string players_networkids = 4;
   */
  playersNetworkids: string[] = [];

  /**
   * @generated from field: optional string map_name = 5;
   */
  mapName?: string;

  constructor(data?: PartialMessage<CNETMsg_SignonState>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CNETMsg_SignonState";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "signon_state", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "spawn_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "num_server_players", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "players_networkids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "map_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SignonState {
    return new CNETMsg_SignonState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SignonState {
    return new CNETMsg_SignonState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SignonState {
    return new CNETMsg_SignonState().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SignonState | PlainMessage<CNETMsg_SignonState> | undefined, b: CNETMsg_SignonState | PlainMessage<CNETMsg_SignonState> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SignonState, a, b);
  }
}

/**
 * @generated from message CMsg_CVars
 */
export class CMsg_CVars extends Message<CMsg_CVars> {
  /**
   * @generated from field: repeated CMsg_CVars.CVar cvars = 1;
   */
  cvars: CMsg_CVars_CVar[] = [];

  constructor(data?: PartialMessage<CMsg_CVars>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CMsg_CVars";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "cvars", kind: "message", T: CMsg_CVars_CVar, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsg_CVars {
    return new CMsg_CVars().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsg_CVars {
    return new CMsg_CVars().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsg_CVars {
    return new CMsg_CVars().fromJsonString(jsonString, options);
  }

  static equals(a: CMsg_CVars | PlainMessage<CMsg_CVars> | undefined, b: CMsg_CVars | PlainMessage<CMsg_CVars> | undefined): boolean {
    return proto2.util.equals(CMsg_CVars, a, b);
  }
}

/**
 * @generated from message CMsg_CVars.CVar
 */
export class CMsg_CVars_CVar extends Message<CMsg_CVars_CVar> {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value?: string;

  /**
   * @generated from field: optional uint32 dictionary_name = 3;
   */
  dictionaryName?: number;

  constructor(data?: PartialMessage<CMsg_CVars_CVar>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CMsg_CVars.CVar";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "dictionary_name", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsg_CVars_CVar {
    return new CMsg_CVars_CVar().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsg_CVars_CVar {
    return new CMsg_CVars_CVar().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsg_CVars_CVar {
    return new CMsg_CVars_CVar().fromJsonString(jsonString, options);
  }

  static equals(a: CMsg_CVars_CVar | PlainMessage<CMsg_CVars_CVar> | undefined, b: CMsg_CVars_CVar | PlainMessage<CMsg_CVars_CVar> | undefined): boolean {
    return proto2.util.equals(CMsg_CVars_CVar, a, b);
  }
}

/**
 * @generated from message CNETMsg_SetConVar
 */
export class CNETMsg_SetConVar extends Message<CNETMsg_SetConVar> {
  /**
   * @generated from field: optional CMsg_CVars convars = 1;
   */
  convars?: CMsg_CVars;

  constructor(data?: PartialMessage<CNETMsg_SetConVar>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CNETMsg_SetConVar";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "convars", kind: "message", T: CMsg_CVars, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SetConVar {
    return new CNETMsg_SetConVar().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SetConVar {
    return new CNETMsg_SetConVar().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SetConVar {
    return new CNETMsg_SetConVar().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SetConVar | PlainMessage<CNETMsg_SetConVar> | undefined, b: CNETMsg_SetConVar | PlainMessage<CNETMsg_SetConVar> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SetConVar, a, b);
  }
}

/**
 * @generated from message CNETMsg_NOP
 */
export class CNETMsg_NOP extends Message<CNETMsg_NOP> {
  constructor(data?: PartialMessage<CNETMsg_NOP>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CNETMsg_NOP";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_NOP {
    return new CNETMsg_NOP().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_NOP {
    return new CNETMsg_NOP().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_NOP {
    return new CNETMsg_NOP().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_NOP | PlainMessage<CNETMsg_NOP> | undefined, b: CNETMsg_NOP | PlainMessage<CNETMsg_NOP> | undefined): boolean {
    return proto2.util.equals(CNETMsg_NOP, a, b);
  }
}

/**
 * @generated from message CNETMsg_Disconnect
 */
export class CNETMsg_Disconnect extends Message<CNETMsg_Disconnect> {
  /**
   * @generated from field: optional string text = 1;
   */
  text?: string;

  constructor(data?: PartialMessage<CNETMsg_Disconnect>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CNETMsg_Disconnect";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_Disconnect {
    return new CNETMsg_Disconnect().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_Disconnect {
    return new CNETMsg_Disconnect().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_Disconnect {
    return new CNETMsg_Disconnect().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_Disconnect | PlainMessage<CNETMsg_Disconnect> | undefined, b: CNETMsg_Disconnect | PlainMessage<CNETMsg_Disconnect> | undefined): boolean {
    return proto2.util.equals(CNETMsg_Disconnect, a, b);
  }
}

/**
 * @generated from message CNETMsg_File
 */
export class CNETMsg_File extends Message<CNETMsg_File> {
  /**
   * @generated from field: optional int32 transfer_id = 1;
   */
  transferId?: number;

  /**
   * @generated from field: optional string file_name = 2;
   */
  fileName?: string;

  /**
   * @generated from field: optional bool is_replay_demo_file = 3;
   */
  isReplayDemoFile?: boolean;

  /**
   * @generated from field: optional bool deny = 4;
   */
  deny?: boolean;

  constructor(data?: PartialMessage<CNETMsg_File>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CNETMsg_File";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "transfer_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "file_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "is_replay_demo_file", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "deny", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_File {
    return new CNETMsg_File().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_File {
    return new CNETMsg_File().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_File {
    return new CNETMsg_File().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_File | PlainMessage<CNETMsg_File> | undefined, b: CNETMsg_File | PlainMessage<CNETMsg_File> | undefined): boolean {
    return proto2.util.equals(CNETMsg_File, a, b);
  }
}

/**
 * @generated from message CNETMsg_SplitScreenUser
 */
export class CNETMsg_SplitScreenUser extends Message<CNETMsg_SplitScreenUser> {
  /**
   * @generated from field: optional int32 slot = 1;
   */
  slot?: number;

  constructor(data?: PartialMessage<CNETMsg_SplitScreenUser>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CNETMsg_SplitScreenUser";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SplitScreenUser {
    return new CNETMsg_SplitScreenUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SplitScreenUser {
    return new CNETMsg_SplitScreenUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SplitScreenUser {
    return new CNETMsg_SplitScreenUser().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SplitScreenUser | PlainMessage<CNETMsg_SplitScreenUser> | undefined, b: CNETMsg_SplitScreenUser | PlainMessage<CNETMsg_SplitScreenUser> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SplitScreenUser, a, b);
  }
}

/**
 * @generated from message CNETMsg_PlayerAvatarData
 */
export class CNETMsg_PlayerAvatarData extends Message<CNETMsg_PlayerAvatarData> {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid?: number;

  /**
   * @generated from field: optional bytes rgb = 2;
   */
  rgb?: Uint8Array;

  constructor(data?: PartialMessage<CNETMsg_PlayerAvatarData>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CNETMsg_PlayerAvatarData";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "accountid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "rgb", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_PlayerAvatarData {
    return new CNETMsg_PlayerAvatarData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_PlayerAvatarData {
    return new CNETMsg_PlayerAvatarData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_PlayerAvatarData {
    return new CNETMsg_PlayerAvatarData().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_PlayerAvatarData | PlainMessage<CNETMsg_PlayerAvatarData> | undefined, b: CNETMsg_PlayerAvatarData | PlainMessage<CNETMsg_PlayerAvatarData> | undefined): boolean {
    return proto2.util.equals(CNETMsg_PlayerAvatarData, a, b);
  }
}

/**
 * @generated from message CCLCMsg_ClientInfo
 */
export class CCLCMsg_ClientInfo extends Message<CCLCMsg_ClientInfo> {
  /**
   * @generated from field: optional fixed32 send_table_crc = 1;
   */
  sendTableCrc?: number;

  /**
   * @generated from field: optional uint32 server_count = 2;
   */
  serverCount?: number;

  /**
   * @generated from field: optional bool is_hltv = 3;
   */
  isHltv?: boolean;

  /**
   * @generated from field: optional bool is_replay = 4;
   */
  isReplay?: boolean;

  /**
   * @generated from field: optional uint32 friends_id = 5;
   */
  friendsId?: number;

  /**
   * @generated from field: optional string friends_name = 6;
   */
  friendsName?: string;

  /**
   * @generated from field: repeated fixed32 custom_files = 7;
   */
  customFiles: number[] = [];

  constructor(data?: PartialMessage<CCLCMsg_ClientInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_ClientInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "send_table_crc", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "server_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "is_hltv", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "is_replay", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "friends_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "friends_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "custom_files", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_ClientInfo {
    return new CCLCMsg_ClientInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_ClientInfo {
    return new CCLCMsg_ClientInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_ClientInfo {
    return new CCLCMsg_ClientInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_ClientInfo | PlainMessage<CCLCMsg_ClientInfo> | undefined, b: CCLCMsg_ClientInfo | PlainMessage<CCLCMsg_ClientInfo> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_ClientInfo, a, b);
  }
}

/**
 * @generated from message CCLCMsg_Move
 */
export class CCLCMsg_Move extends Message<CCLCMsg_Move> {
  /**
   * @generated from field: optional uint32 num_backup_commands = 1;
   */
  numBackupCommands?: number;

  /**
   * @generated from field: optional uint32 num_new_commands = 2;
   */
  numNewCommands?: number;

  /**
   * @generated from field: optional bytes data = 3;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CCLCMsg_Move>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_Move";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "num_backup_commands", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "num_new_commands", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_Move {
    return new CCLCMsg_Move().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_Move {
    return new CCLCMsg_Move().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_Move {
    return new CCLCMsg_Move().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_Move | PlainMessage<CCLCMsg_Move> | undefined, b: CCLCMsg_Move | PlainMessage<CCLCMsg_Move> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_Move, a, b);
  }
}

/**
 * @generated from message CCLCMsg_VoiceData
 */
export class CCLCMsg_VoiceData extends Message<CCLCMsg_VoiceData> {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data?: Uint8Array;

  /**
   * @generated from field: optional fixed64 xuid = 2;
   */
  xuid?: bigint;

  /**
   * @generated from field: optional VoiceDataFormat_t format = 3 [default = VOICEDATA_FORMAT_ENGINE];
   */
  format?: VoiceDataFormat_t;

  /**
   * @generated from field: optional int32 sequence_bytes = 4;
   */
  sequenceBytes?: number;

  /**
   * @generated from field: optional uint32 section_number = 5;
   */
  sectionNumber?: number;

  /**
   * @generated from field: optional uint32 uncompressed_sample_offset = 6;
   */
  uncompressedSampleOffset?: number;

  constructor(data?: PartialMessage<CCLCMsg_VoiceData>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_VoiceData";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 2, name: "xuid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 3, name: "format", kind: "enum", T: proto2.getEnumType(VoiceDataFormat_t), opt: true, default: VoiceDataFormat_t.VOICEDATA_FORMAT_ENGINE },
    { no: 4, name: "sequence_bytes", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "section_number", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "uncompressed_sample_offset", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_VoiceData {
    return new CCLCMsg_VoiceData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_VoiceData {
    return new CCLCMsg_VoiceData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_VoiceData {
    return new CCLCMsg_VoiceData().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_VoiceData | PlainMessage<CCLCMsg_VoiceData> | undefined, b: CCLCMsg_VoiceData | PlainMessage<CCLCMsg_VoiceData> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_VoiceData, a, b);
  }
}

/**
 * @generated from message CCLCMsg_BaselineAck
 */
export class CCLCMsg_BaselineAck extends Message<CCLCMsg_BaselineAck> {
  /**
   * @generated from field: optional int32 baseline_tick = 1;
   */
  baselineTick?: number;

  /**
   * @generated from field: optional int32 baseline_nr = 2;
   */
  baselineNr?: number;

  constructor(data?: PartialMessage<CCLCMsg_BaselineAck>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_BaselineAck";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "baseline_tick", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "baseline_nr", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_BaselineAck {
    return new CCLCMsg_BaselineAck().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_BaselineAck {
    return new CCLCMsg_BaselineAck().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_BaselineAck {
    return new CCLCMsg_BaselineAck().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_BaselineAck | PlainMessage<CCLCMsg_BaselineAck> | undefined, b: CCLCMsg_BaselineAck | PlainMessage<CCLCMsg_BaselineAck> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_BaselineAck, a, b);
  }
}

/**
 * @generated from message CCLCMsg_ListenEvents
 */
export class CCLCMsg_ListenEvents extends Message<CCLCMsg_ListenEvents> {
  /**
   * @generated from field: repeated fixed32 event_mask = 1;
   */
  eventMask: number[] = [];

  constructor(data?: PartialMessage<CCLCMsg_ListenEvents>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_ListenEvents";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "event_mask", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_ListenEvents {
    return new CCLCMsg_ListenEvents().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_ListenEvents {
    return new CCLCMsg_ListenEvents().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_ListenEvents {
    return new CCLCMsg_ListenEvents().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_ListenEvents | PlainMessage<CCLCMsg_ListenEvents> | undefined, b: CCLCMsg_ListenEvents | PlainMessage<CCLCMsg_ListenEvents> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_ListenEvents, a, b);
  }
}

/**
 * @generated from message CCLCMsg_RespondCvarValue
 */
export class CCLCMsg_RespondCvarValue extends Message<CCLCMsg_RespondCvarValue> {
  /**
   * @generated from field: optional int32 cookie = 1;
   */
  cookie?: number;

  /**
   * @generated from field: optional int32 status_code = 2;
   */
  statusCode?: number;

  /**
   * @generated from field: optional string name = 3;
   */
  name?: string;

  /**
   * @generated from field: optional string value = 4;
   */
  value?: string;

  constructor(data?: PartialMessage<CCLCMsg_RespondCvarValue>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_RespondCvarValue";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "cookie", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "status_code", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_RespondCvarValue {
    return new CCLCMsg_RespondCvarValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_RespondCvarValue {
    return new CCLCMsg_RespondCvarValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_RespondCvarValue {
    return new CCLCMsg_RespondCvarValue().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_RespondCvarValue | PlainMessage<CCLCMsg_RespondCvarValue> | undefined, b: CCLCMsg_RespondCvarValue | PlainMessage<CCLCMsg_RespondCvarValue> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_RespondCvarValue, a, b);
  }
}

/**
 * @generated from message CCLCMsg_FileCRCCheck
 */
export class CCLCMsg_FileCRCCheck extends Message<CCLCMsg_FileCRCCheck> {
  /**
   * @generated from field: optional int32 code_path = 1;
   */
  codePath?: number;

  /**
   * @generated from field: optional string path = 2;
   */
  path?: string;

  /**
   * @generated from field: optional int32 code_filename = 3;
   */
  codeFilename?: number;

  /**
   * @generated from field: optional string filename = 4;
   */
  filename?: string;

  /**
   * @generated from field: optional int32 file_fraction = 5;
   */
  fileFraction?: number;

  /**
   * @generated from field: optional bytes md5 = 6;
   */
  md5?: Uint8Array;

  /**
   * @generated from field: optional uint32 crc = 7;
   */
  crc?: number;

  /**
   * @generated from field: optional int32 file_hash_type = 8;
   */
  fileHashType?: number;

  /**
   * @generated from field: optional int32 file_len = 9;
   */
  fileLen?: number;

  /**
   * @generated from field: optional int32 pack_file_id = 10;
   */
  packFileId?: number;

  /**
   * @generated from field: optional int32 pack_file_number = 11;
   */
  packFileNumber?: number;

  constructor(data?: PartialMessage<CCLCMsg_FileCRCCheck>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_FileCRCCheck";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "code_path", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "code_filename", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "filename", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "file_fraction", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "md5", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 7, name: "crc", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "file_hash_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "file_len", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "pack_file_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 11, name: "pack_file_number", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_FileCRCCheck {
    return new CCLCMsg_FileCRCCheck().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_FileCRCCheck {
    return new CCLCMsg_FileCRCCheck().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_FileCRCCheck {
    return new CCLCMsg_FileCRCCheck().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_FileCRCCheck | PlainMessage<CCLCMsg_FileCRCCheck> | undefined, b: CCLCMsg_FileCRCCheck | PlainMessage<CCLCMsg_FileCRCCheck> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_FileCRCCheck, a, b);
  }
}

/**
 * @generated from message CCLCMsg_LoadingProgress
 */
export class CCLCMsg_LoadingProgress extends Message<CCLCMsg_LoadingProgress> {
  /**
   * @generated from field: optional int32 progress = 1;
   */
  progress?: number;

  constructor(data?: PartialMessage<CCLCMsg_LoadingProgress>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_LoadingProgress";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "progress", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_LoadingProgress {
    return new CCLCMsg_LoadingProgress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_LoadingProgress {
    return new CCLCMsg_LoadingProgress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_LoadingProgress {
    return new CCLCMsg_LoadingProgress().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_LoadingProgress | PlainMessage<CCLCMsg_LoadingProgress> | undefined, b: CCLCMsg_LoadingProgress | PlainMessage<CCLCMsg_LoadingProgress> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_LoadingProgress, a, b);
  }
}

/**
 * @generated from message CCLCMsg_SplitPlayerConnect
 */
export class CCLCMsg_SplitPlayerConnect extends Message<CCLCMsg_SplitPlayerConnect> {
  /**
   * @generated from field: optional CMsg_CVars convars = 1;
   */
  convars?: CMsg_CVars;

  constructor(data?: PartialMessage<CCLCMsg_SplitPlayerConnect>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_SplitPlayerConnect";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "convars", kind: "message", T: CMsg_CVars, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_SplitPlayerConnect {
    return new CCLCMsg_SplitPlayerConnect().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_SplitPlayerConnect {
    return new CCLCMsg_SplitPlayerConnect().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_SplitPlayerConnect {
    return new CCLCMsg_SplitPlayerConnect().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_SplitPlayerConnect | PlainMessage<CCLCMsg_SplitPlayerConnect> | undefined, b: CCLCMsg_SplitPlayerConnect | PlainMessage<CCLCMsg_SplitPlayerConnect> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_SplitPlayerConnect, a, b);
  }
}

/**
 * @generated from message CCLCMsg_CmdKeyValues
 */
export class CCLCMsg_CmdKeyValues extends Message<CCLCMsg_CmdKeyValues> {
  /**
   * @generated from field: optional bytes keyvalues = 1;
   */
  keyvalues?: Uint8Array;

  constructor(data?: PartialMessage<CCLCMsg_CmdKeyValues>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_CmdKeyValues";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "keyvalues", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_CmdKeyValues {
    return new CCLCMsg_CmdKeyValues().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_CmdKeyValues {
    return new CCLCMsg_CmdKeyValues().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_CmdKeyValues {
    return new CCLCMsg_CmdKeyValues().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_CmdKeyValues | PlainMessage<CCLCMsg_CmdKeyValues> | undefined, b: CCLCMsg_CmdKeyValues | PlainMessage<CCLCMsg_CmdKeyValues> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_CmdKeyValues, a, b);
  }
}

/**
 * @generated from message CSVCMsg_ServerInfo
 */
export class CSVCMsg_ServerInfo extends Message<CSVCMsg_ServerInfo> {
  /**
   * @generated from field: optional int32 protocol = 1;
   */
  protocol?: number;

  /**
   * @generated from field: optional int32 server_count = 2;
   */
  serverCount?: number;

  /**
   * @generated from field: optional bool is_dedicated = 3;
   */
  isDedicated?: boolean;

  /**
   * @generated from field: optional bool is_official_valve_server = 4;
   */
  isOfficialValveServer?: boolean;

  /**
   * @generated from field: optional bool is_hltv = 5;
   */
  isHltv?: boolean;

  /**
   * @generated from field: optional bool is_replay = 6;
   */
  isReplay?: boolean;

  /**
   * @generated from field: optional bool is_redirecting_to_proxy_relay = 21;
   */
  isRedirectingToProxyRelay?: boolean;

  /**
   * @generated from field: optional int32 c_os = 7;
   */
  cOs?: number;

  /**
   * @generated from field: optional fixed32 map_crc = 8;
   */
  mapCrc?: number;

  /**
   * @generated from field: optional fixed32 client_crc = 9;
   */
  clientCrc?: number;

  /**
   * @generated from field: optional fixed32 string_table_crc = 10;
   */
  stringTableCrc?: number;

  /**
   * @generated from field: optional int32 max_clients = 11;
   */
  maxClients?: number;

  /**
   * @generated from field: optional int32 max_classes = 12;
   */
  maxClasses?: number;

  /**
   * @generated from field: optional int32 player_slot = 13;
   */
  playerSlot?: number;

  /**
   * @generated from field: optional float tick_interval = 14;
   */
  tickInterval?: number;

  /**
   * @generated from field: optional string game_dir = 15;
   */
  gameDir?: string;

  /**
   * @generated from field: optional string map_name = 16;
   */
  mapName?: string;

  /**
   * @generated from field: optional string map_group_name = 17;
   */
  mapGroupName?: string;

  /**
   * @generated from field: optional string sky_name = 18;
   */
  skyName?: string;

  /**
   * @generated from field: optional string host_name = 19;
   */
  hostName?: string;

  /**
   * @generated from field: optional uint32 public_ip = 20;
   */
  publicIp?: number;

  /**
   * @generated from field: optional uint64 ugc_map_id = 22;
   */
  ugcMapId?: bigint;

  constructor(data?: PartialMessage<CSVCMsg_ServerInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_ServerInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "protocol", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "server_count", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "is_dedicated", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "is_official_valve_server", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "is_hltv", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "is_replay", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 21, name: "is_redirecting_to_proxy_relay", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "c_os", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "map_crc", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 9, name: "client_crc", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 10, name: "string_table_crc", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 11, name: "max_clients", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 12, name: "max_classes", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 13, name: "player_slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 14, name: "tick_interval", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 15, name: "game_dir", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 16, name: "map_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 17, name: "map_group_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 18, name: "sky_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 19, name: "host_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 20, name: "public_ip", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 22, name: "ugc_map_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_ServerInfo {
    return new CSVCMsg_ServerInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_ServerInfo {
    return new CSVCMsg_ServerInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_ServerInfo {
    return new CSVCMsg_ServerInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_ServerInfo | PlainMessage<CSVCMsg_ServerInfo> | undefined, b: CSVCMsg_ServerInfo | PlainMessage<CSVCMsg_ServerInfo> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_ServerInfo, a, b);
  }
}

/**
 * @generated from message CSVCMsg_ClassInfo
 */
export class CSVCMsg_ClassInfo extends Message<CSVCMsg_ClassInfo> {
  /**
   * @generated from field: optional bool create_on_client = 1;
   */
  createOnClient?: boolean;

  /**
   * @generated from field: repeated CSVCMsg_ClassInfo.class_t classes = 2;
   */
  classes: CSVCMsg_ClassInfo_class_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_ClassInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_ClassInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "create_on_client", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "classes", kind: "message", T: CSVCMsg_ClassInfo_class_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_ClassInfo {
    return new CSVCMsg_ClassInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_ClassInfo {
    return new CSVCMsg_ClassInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_ClassInfo {
    return new CSVCMsg_ClassInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_ClassInfo | PlainMessage<CSVCMsg_ClassInfo> | undefined, b: CSVCMsg_ClassInfo | PlainMessage<CSVCMsg_ClassInfo> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_ClassInfo, a, b);
  }
}

/**
 * @generated from message CSVCMsg_ClassInfo.class_t
 */
export class CSVCMsg_ClassInfo_class_t extends Message<CSVCMsg_ClassInfo_class_t> {
  /**
   * @generated from field: optional int32 class_id = 1;
   */
  classId?: number;

  /**
   * @generated from field: optional string data_table_name = 2;
   */
  dataTableName?: string;

  /**
   * @generated from field: optional string class_name = 3;
   */
  className?: string;

  constructor(data?: PartialMessage<CSVCMsg_ClassInfo_class_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_ClassInfo.class_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "data_table_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_ClassInfo_class_t {
    return new CSVCMsg_ClassInfo_class_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_ClassInfo_class_t {
    return new CSVCMsg_ClassInfo_class_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_ClassInfo_class_t {
    return new CSVCMsg_ClassInfo_class_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_ClassInfo_class_t | PlainMessage<CSVCMsg_ClassInfo_class_t> | undefined, b: CSVCMsg_ClassInfo_class_t | PlainMessage<CSVCMsg_ClassInfo_class_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_ClassInfo_class_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_SendTable
 */
export class CSVCMsg_SendTable extends Message<CSVCMsg_SendTable> {
  /**
   * @generated from field: optional bool is_end = 1;
   */
  isEnd?: boolean;

  /**
   * @generated from field: optional string net_table_name = 2;
   */
  netTableName?: string;

  /**
   * @generated from field: optional bool needs_decoder = 3;
   */
  needsDecoder?: boolean;

  /**
   * @generated from field: repeated CSVCMsg_SendTable.sendprop_t props = 4;
   */
  props: CSVCMsg_SendTable_sendprop_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_SendTable>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_SendTable";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "is_end", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "net_table_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "needs_decoder", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "props", kind: "message", T: CSVCMsg_SendTable_sendprop_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_SendTable {
    return new CSVCMsg_SendTable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_SendTable {
    return new CSVCMsg_SendTable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_SendTable {
    return new CSVCMsg_SendTable().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_SendTable | PlainMessage<CSVCMsg_SendTable> | undefined, b: CSVCMsg_SendTable | PlainMessage<CSVCMsg_SendTable> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_SendTable, a, b);
  }
}

/**
 * @generated from message CSVCMsg_SendTable.sendprop_t
 */
export class CSVCMsg_SendTable_sendprop_t extends Message<CSVCMsg_SendTable_sendprop_t> {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type?: number;

  /**
   * @generated from field: optional string var_name = 2;
   */
  varName?: string;

  /**
   * @generated from field: optional int32 flags = 3;
   */
  flags?: number;

  /**
   * @generated from field: optional int32 priority = 4;
   */
  priority?: number;

  /**
   * @generated from field: optional string dt_name = 5;
   */
  dtName?: string;

  /**
   * @generated from field: optional int32 num_elements = 6;
   */
  numElements?: number;

  /**
   * @generated from field: optional float low_value = 7;
   */
  lowValue?: number;

  /**
   * @generated from field: optional float high_value = 8;
   */
  highValue?: number;

  /**
   * @generated from field: optional int32 num_bits = 9;
   */
  numBits?: number;

  constructor(data?: PartialMessage<CSVCMsg_SendTable_sendprop_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_SendTable.sendprop_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "var_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "flags", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "priority", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "dt_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "num_elements", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "low_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 8, name: "high_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 9, name: "num_bits", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_SendTable_sendprop_t {
    return new CSVCMsg_SendTable_sendprop_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_SendTable_sendprop_t {
    return new CSVCMsg_SendTable_sendprop_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_SendTable_sendprop_t {
    return new CSVCMsg_SendTable_sendprop_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_SendTable_sendprop_t | PlainMessage<CSVCMsg_SendTable_sendprop_t> | undefined, b: CSVCMsg_SendTable_sendprop_t | PlainMessage<CSVCMsg_SendTable_sendprop_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_SendTable_sendprop_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Print
 */
export class CSVCMsg_Print extends Message<CSVCMsg_Print> {
  /**
   * @generated from field: optional string text = 1;
   */
  text?: string;

  constructor(data?: PartialMessage<CSVCMsg_Print>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_Print";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Print {
    return new CSVCMsg_Print().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Print {
    return new CSVCMsg_Print().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Print {
    return new CSVCMsg_Print().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Print | PlainMessage<CSVCMsg_Print> | undefined, b: CSVCMsg_Print | PlainMessage<CSVCMsg_Print> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Print, a, b);
  }
}

/**
 * @generated from message CSVCMsg_SetPause
 */
export class CSVCMsg_SetPause extends Message<CSVCMsg_SetPause> {
  /**
   * @generated from field: optional bool paused = 1;
   */
  paused?: boolean;

  constructor(data?: PartialMessage<CSVCMsg_SetPause>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_SetPause";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "paused", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_SetPause {
    return new CSVCMsg_SetPause().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_SetPause {
    return new CSVCMsg_SetPause().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_SetPause {
    return new CSVCMsg_SetPause().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_SetPause | PlainMessage<CSVCMsg_SetPause> | undefined, b: CSVCMsg_SetPause | PlainMessage<CSVCMsg_SetPause> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_SetPause, a, b);
  }
}

/**
 * @generated from message CSVCMsg_SetView
 */
export class CSVCMsg_SetView extends Message<CSVCMsg_SetView> {
  /**
   * @generated from field: optional int32 entity_index = 1;
   */
  entityIndex?: number;

  constructor(data?: PartialMessage<CSVCMsg_SetView>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_SetView";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "entity_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_SetView {
    return new CSVCMsg_SetView().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_SetView {
    return new CSVCMsg_SetView().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_SetView {
    return new CSVCMsg_SetView().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_SetView | PlainMessage<CSVCMsg_SetView> | undefined, b: CSVCMsg_SetView | PlainMessage<CSVCMsg_SetView> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_SetView, a, b);
  }
}

/**
 * @generated from message CSVCMsg_CreateStringTable
 */
export class CSVCMsg_CreateStringTable extends Message<CSVCMsg_CreateStringTable> {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional int32 max_entries = 2;
   */
  maxEntries?: number;

  /**
   * @generated from field: optional int32 num_entries = 3;
   */
  numEntries?: number;

  /**
   * @generated from field: optional bool user_data_fixed_size = 4;
   */
  userDataFixedSize?: boolean;

  /**
   * @generated from field: optional int32 user_data_size = 5;
   */
  userDataSize?: number;

  /**
   * @generated from field: optional int32 user_data_size_bits = 6;
   */
  userDataSizeBits?: number;

  /**
   * @generated from field: optional int32 flags = 7;
   */
  flags?: number;

  /**
   * @generated from field: optional bytes string_data = 8;
   */
  stringData?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_CreateStringTable>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_CreateStringTable";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "max_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "num_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "user_data_fixed_size", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "user_data_size", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "user_data_size_bits", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "flags", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "string_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_CreateStringTable {
    return new CSVCMsg_CreateStringTable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_CreateStringTable {
    return new CSVCMsg_CreateStringTable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_CreateStringTable {
    return new CSVCMsg_CreateStringTable().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_CreateStringTable | PlainMessage<CSVCMsg_CreateStringTable> | undefined, b: CSVCMsg_CreateStringTable | PlainMessage<CSVCMsg_CreateStringTable> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_CreateStringTable, a, b);
  }
}

/**
 * @generated from message CSVCMsg_UpdateStringTable
 */
export class CSVCMsg_UpdateStringTable extends Message<CSVCMsg_UpdateStringTable> {
  /**
   * @generated from field: optional int32 table_id = 1;
   */
  tableId?: number;

  /**
   * @generated from field: optional int32 num_changed_entries = 2;
   */
  numChangedEntries?: number;

  /**
   * @generated from field: optional bytes string_data = 3;
   */
  stringData?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_UpdateStringTable>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_UpdateStringTable";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "table_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "num_changed_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "string_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_UpdateStringTable {
    return new CSVCMsg_UpdateStringTable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_UpdateStringTable {
    return new CSVCMsg_UpdateStringTable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_UpdateStringTable {
    return new CSVCMsg_UpdateStringTable().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_UpdateStringTable | PlainMessage<CSVCMsg_UpdateStringTable> | undefined, b: CSVCMsg_UpdateStringTable | PlainMessage<CSVCMsg_UpdateStringTable> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_UpdateStringTable, a, b);
  }
}

/**
 * @generated from message CSVCMsg_VoiceInit
 */
export class CSVCMsg_VoiceInit extends Message<CSVCMsg_VoiceInit> {
  /**
   * @generated from field: optional int32 quality = 1;
   */
  quality?: number;

  /**
   * @generated from field: optional string codec = 2;
   */
  codec?: string;

  /**
   * @generated from field: optional int32 version = 3 [default = 0];
   */
  version?: number;

  constructor(data?: PartialMessage<CSVCMsg_VoiceInit>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_VoiceInit";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "quality", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "codec", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "version", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: 0 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_VoiceInit {
    return new CSVCMsg_VoiceInit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_VoiceInit {
    return new CSVCMsg_VoiceInit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_VoiceInit {
    return new CSVCMsg_VoiceInit().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_VoiceInit | PlainMessage<CSVCMsg_VoiceInit> | undefined, b: CSVCMsg_VoiceInit | PlainMessage<CSVCMsg_VoiceInit> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_VoiceInit, a, b);
  }
}

/**
 * @generated from message CSVCMsg_VoiceData
 */
export class CSVCMsg_VoiceData extends Message<CSVCMsg_VoiceData> {
  /**
   * @generated from field: optional int32 client = 1;
   */
  client?: number;

  /**
   * @generated from field: optional bool proximity = 2;
   */
  proximity?: boolean;

  /**
   * @generated from field: optional fixed64 xuid = 3;
   */
  xuid?: bigint;

  /**
   * @generated from field: optional int32 audible_mask = 4;
   */
  audibleMask?: number;

  /**
   * @generated from field: optional bytes voice_data = 5;
   */
  voiceData?: Uint8Array;

  /**
   * @generated from field: optional bool caster = 6;
   */
  caster?: boolean;

  /**
   * @generated from field: optional VoiceDataFormat_t format = 7 [default = VOICEDATA_FORMAT_ENGINE];
   */
  format?: VoiceDataFormat_t;

  /**
   * @generated from field: optional int32 sequence_bytes = 8;
   */
  sequenceBytes?: number;

  /**
   * @generated from field: optional uint32 section_number = 9;
   */
  sectionNumber?: number;

  /**
   * @generated from field: optional uint32 uncompressed_sample_offset = 10;
   */
  uncompressedSampleOffset?: number;

  constructor(data?: PartialMessage<CSVCMsg_VoiceData>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_VoiceData";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "client", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "proximity", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "xuid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 4, name: "audible_mask", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "voice_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "caster", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "format", kind: "enum", T: proto2.getEnumType(VoiceDataFormat_t), opt: true, default: VoiceDataFormat_t.VOICEDATA_FORMAT_ENGINE },
    { no: 8, name: "sequence_bytes", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "section_number", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 10, name: "uncompressed_sample_offset", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_VoiceData {
    return new CSVCMsg_VoiceData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_VoiceData {
    return new CSVCMsg_VoiceData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_VoiceData {
    return new CSVCMsg_VoiceData().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_VoiceData | PlainMessage<CSVCMsg_VoiceData> | undefined, b: CSVCMsg_VoiceData | PlainMessage<CSVCMsg_VoiceData> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_VoiceData, a, b);
  }
}

/**
 * @generated from message CSVCMsg_FixAngle
 */
export class CSVCMsg_FixAngle extends Message<CSVCMsg_FixAngle> {
  /**
   * @generated from field: optional bool relative = 1;
   */
  relative?: boolean;

  /**
   * @generated from field: optional CMsgQAngle angle = 2;
   */
  angle?: CMsgQAngle;

  constructor(data?: PartialMessage<CSVCMsg_FixAngle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_FixAngle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "relative", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "angle", kind: "message", T: CMsgQAngle, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_FixAngle {
    return new CSVCMsg_FixAngle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_FixAngle {
    return new CSVCMsg_FixAngle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_FixAngle {
    return new CSVCMsg_FixAngle().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_FixAngle | PlainMessage<CSVCMsg_FixAngle> | undefined, b: CSVCMsg_FixAngle | PlainMessage<CSVCMsg_FixAngle> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_FixAngle, a, b);
  }
}

/**
 * @generated from message CSVCMsg_CrosshairAngle
 */
export class CSVCMsg_CrosshairAngle extends Message<CSVCMsg_CrosshairAngle> {
  /**
   * @generated from field: optional CMsgQAngle angle = 1;
   */
  angle?: CMsgQAngle;

  constructor(data?: PartialMessage<CSVCMsg_CrosshairAngle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_CrosshairAngle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "angle", kind: "message", T: CMsgQAngle, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_CrosshairAngle {
    return new CSVCMsg_CrosshairAngle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_CrosshairAngle {
    return new CSVCMsg_CrosshairAngle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_CrosshairAngle {
    return new CSVCMsg_CrosshairAngle().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_CrosshairAngle | PlainMessage<CSVCMsg_CrosshairAngle> | undefined, b: CSVCMsg_CrosshairAngle | PlainMessage<CSVCMsg_CrosshairAngle> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_CrosshairAngle, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Prefetch
 */
export class CSVCMsg_Prefetch extends Message<CSVCMsg_Prefetch> {
  /**
   * @generated from field: optional int32 sound_index = 1;
   */
  soundIndex?: number;

  constructor(data?: PartialMessage<CSVCMsg_Prefetch>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_Prefetch";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "sound_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Prefetch {
    return new CSVCMsg_Prefetch().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Prefetch {
    return new CSVCMsg_Prefetch().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Prefetch {
    return new CSVCMsg_Prefetch().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Prefetch | PlainMessage<CSVCMsg_Prefetch> | undefined, b: CSVCMsg_Prefetch | PlainMessage<CSVCMsg_Prefetch> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Prefetch, a, b);
  }
}

/**
 * @generated from message CSVCMsg_BSPDecal
 */
export class CSVCMsg_BSPDecal extends Message<CSVCMsg_BSPDecal> {
  /**
   * @generated from field: optional CMsgVector pos = 1;
   */
  pos?: CMsgVector;

  /**
   * @generated from field: optional int32 decal_texture_index = 2;
   */
  decalTextureIndex?: number;

  /**
   * @generated from field: optional int32 entity_index = 3;
   */
  entityIndex?: number;

  /**
   * @generated from field: optional int32 model_index = 4;
   */
  modelIndex?: number;

  /**
   * @generated from field: optional bool low_priority = 5;
   */
  lowPriority?: boolean;

  constructor(data?: PartialMessage<CSVCMsg_BSPDecal>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_BSPDecal";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "pos", kind: "message", T: CMsgVector, opt: true },
    { no: 2, name: "decal_texture_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "entity_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "model_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "low_priority", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_BSPDecal {
    return new CSVCMsg_BSPDecal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_BSPDecal {
    return new CSVCMsg_BSPDecal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_BSPDecal {
    return new CSVCMsg_BSPDecal().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_BSPDecal | PlainMessage<CSVCMsg_BSPDecal> | undefined, b: CSVCMsg_BSPDecal | PlainMessage<CSVCMsg_BSPDecal> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_BSPDecal, a, b);
  }
}

/**
 * @generated from message CSVCMsg_SplitScreen
 */
export class CSVCMsg_SplitScreen extends Message<CSVCMsg_SplitScreen> {
  /**
   * @generated from field: optional ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
   */
  type?: ESplitScreenMessageType;

  /**
   * @generated from field: optional int32 slot = 2;
   */
  slot?: number;

  /**
   * @generated from field: optional int32 player_index = 3;
   */
  playerIndex?: number;

  constructor(data?: PartialMessage<CSVCMsg_SplitScreen>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_SplitScreen";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto2.getEnumType(ESplitScreenMessageType), opt: true, default: ESplitScreenMessageType.MSG_SPLITSCREEN_ADDUSER },
    { no: 2, name: "slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "player_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_SplitScreen {
    return new CSVCMsg_SplitScreen().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_SplitScreen {
    return new CSVCMsg_SplitScreen().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_SplitScreen {
    return new CSVCMsg_SplitScreen().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_SplitScreen | PlainMessage<CSVCMsg_SplitScreen> | undefined, b: CSVCMsg_SplitScreen | PlainMessage<CSVCMsg_SplitScreen> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_SplitScreen, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GetCvarValue
 */
export class CSVCMsg_GetCvarValue extends Message<CSVCMsg_GetCvarValue> {
  /**
   * @generated from field: optional int32 cookie = 1;
   */
  cookie?: number;

  /**
   * @generated from field: optional string cvar_name = 2;
   */
  cvarName?: string;

  constructor(data?: PartialMessage<CSVCMsg_GetCvarValue>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_GetCvarValue";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "cookie", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "cvar_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GetCvarValue {
    return new CSVCMsg_GetCvarValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GetCvarValue {
    return new CSVCMsg_GetCvarValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GetCvarValue {
    return new CSVCMsg_GetCvarValue().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GetCvarValue | PlainMessage<CSVCMsg_GetCvarValue> | undefined, b: CSVCMsg_GetCvarValue | PlainMessage<CSVCMsg_GetCvarValue> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GetCvarValue, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Menu
 */
export class CSVCMsg_Menu extends Message<CSVCMsg_Menu> {
  /**
   * @generated from field: optional int32 dialog_type = 1;
   */
  dialogType?: number;

  /**
   * @generated from field: optional bytes menu_key_values = 2;
   */
  menuKeyValues?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_Menu>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_Menu";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "dialog_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "menu_key_values", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Menu {
    return new CSVCMsg_Menu().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Menu {
    return new CSVCMsg_Menu().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Menu {
    return new CSVCMsg_Menu().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Menu | PlainMessage<CSVCMsg_Menu> | undefined, b: CSVCMsg_Menu | PlainMessage<CSVCMsg_Menu> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Menu, a, b);
  }
}

/**
 * @generated from message CSVCMsg_UserMessage
 */
export class CSVCMsg_UserMessage extends Message<CSVCMsg_UserMessage> {
  /**
   * @generated from field: optional int32 msg_type = 1;
   */
  msgType?: number;

  /**
   * @generated from field: optional bytes msg_data = 2;
   */
  msgData?: Uint8Array;

  /**
   * @generated from field: optional int32 passthrough = 3;
   */
  passthrough?: number;

  constructor(data?: PartialMessage<CSVCMsg_UserMessage>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_UserMessage";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "msg_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "msg_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "passthrough", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_UserMessage {
    return new CSVCMsg_UserMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_UserMessage {
    return new CSVCMsg_UserMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_UserMessage {
    return new CSVCMsg_UserMessage().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_UserMessage | PlainMessage<CSVCMsg_UserMessage> | undefined, b: CSVCMsg_UserMessage | PlainMessage<CSVCMsg_UserMessage> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_UserMessage, a, b);
  }
}

/**
 * @generated from message CSVCMsg_PaintmapData
 */
export class CSVCMsg_PaintmapData extends Message<CSVCMsg_PaintmapData> {
  /**
   * @generated from field: optional bytes paintmap = 1;
   */
  paintmap?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_PaintmapData>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_PaintmapData";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "paintmap", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_PaintmapData {
    return new CSVCMsg_PaintmapData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_PaintmapData {
    return new CSVCMsg_PaintmapData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_PaintmapData {
    return new CSVCMsg_PaintmapData().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_PaintmapData | PlainMessage<CSVCMsg_PaintmapData> | undefined, b: CSVCMsg_PaintmapData | PlainMessage<CSVCMsg_PaintmapData> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_PaintmapData, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameEvent
 */
export class CSVCMsg_GameEvent extends Message<CSVCMsg_GameEvent> {
  /**
   * @generated from field: optional string event_name = 1;
   */
  eventName?: string;

  /**
   * @generated from field: optional int32 eventid = 2;
   */
  eventid?: number;

  /**
   * @generated from field: repeated CSVCMsg_GameEvent.key_t keys = 3;
   */
  keys: CSVCMsg_GameEvent_key_t[] = [];

  /**
   * @generated from field: optional int32 passthrough = 4;
   */
  passthrough?: number;

  constructor(data?: PartialMessage<CSVCMsg_GameEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_GameEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "event_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "eventid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "keys", kind: "message", T: CSVCMsg_GameEvent_key_t, repeated: true },
    { no: 4, name: "passthrough", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameEvent {
    return new CSVCMsg_GameEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameEvent {
    return new CSVCMsg_GameEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameEvent {
    return new CSVCMsg_GameEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameEvent | PlainMessage<CSVCMsg_GameEvent> | undefined, b: CSVCMsg_GameEvent | PlainMessage<CSVCMsg_GameEvent> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameEvent, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameEvent.key_t
 */
export class CSVCMsg_GameEvent_key_t extends Message<CSVCMsg_GameEvent_key_t> {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type?: number;

  /**
   * @generated from field: optional string val_string = 2;
   */
  valString?: string;

  /**
   * @generated from field: optional float val_float = 3;
   */
  valFloat?: number;

  /**
   * @generated from field: optional int32 val_long = 4;
   */
  valLong?: number;

  /**
   * @generated from field: optional int32 val_short = 5;
   */
  valShort?: number;

  /**
   * @generated from field: optional int32 val_byte = 6;
   */
  valByte?: number;

  /**
   * @generated from field: optional bool val_bool = 7;
   */
  valBool?: boolean;

  /**
   * @generated from field: optional uint64 val_uint64 = 8;
   */
  valUint64?: bigint;

  /**
   * @generated from field: optional bytes val_wstring = 9;
   */
  valWstring?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_GameEvent_key_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_GameEvent.key_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "val_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "val_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "val_long", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "val_short", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "val_byte", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "val_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 8, name: "val_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 9, name: "val_wstring", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameEvent_key_t {
    return new CSVCMsg_GameEvent_key_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameEvent_key_t {
    return new CSVCMsg_GameEvent_key_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameEvent_key_t {
    return new CSVCMsg_GameEvent_key_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameEvent_key_t | PlainMessage<CSVCMsg_GameEvent_key_t> | undefined, b: CSVCMsg_GameEvent_key_t | PlainMessage<CSVCMsg_GameEvent_key_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameEvent_key_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameEventList
 */
export class CSVCMsg_GameEventList extends Message<CSVCMsg_GameEventList> {
  /**
   * @generated from field: repeated CSVCMsg_GameEventList.descriptor_t descriptors = 1;
   */
  descriptors: CSVCMsg_GameEventList_descriptor_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_GameEventList>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_GameEventList";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "descriptors", kind: "message", T: CSVCMsg_GameEventList_descriptor_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameEventList {
    return new CSVCMsg_GameEventList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList {
    return new CSVCMsg_GameEventList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList {
    return new CSVCMsg_GameEventList().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameEventList | PlainMessage<CSVCMsg_GameEventList> | undefined, b: CSVCMsg_GameEventList | PlainMessage<CSVCMsg_GameEventList> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameEventList, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameEventList.key_t
 */
export class CSVCMsg_GameEventList_key_t extends Message<CSVCMsg_GameEventList_key_t> {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type?: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  constructor(data?: PartialMessage<CSVCMsg_GameEventList_key_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_GameEventList.key_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameEventList_key_t {
    return new CSVCMsg_GameEventList_key_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList_key_t {
    return new CSVCMsg_GameEventList_key_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList_key_t {
    return new CSVCMsg_GameEventList_key_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameEventList_key_t | PlainMessage<CSVCMsg_GameEventList_key_t> | undefined, b: CSVCMsg_GameEventList_key_t | PlainMessage<CSVCMsg_GameEventList_key_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameEventList_key_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameEventList.descriptor_t
 */
export class CSVCMsg_GameEventList_descriptor_t extends Message<CSVCMsg_GameEventList_descriptor_t> {
  /**
   * @generated from field: optional int32 eventid = 1;
   */
  eventid?: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: repeated CSVCMsg_GameEventList.key_t keys = 3;
   */
  keys: CSVCMsg_GameEventList_key_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_GameEventList_descriptor_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_GameEventList.descriptor_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "eventid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "keys", kind: "message", T: CSVCMsg_GameEventList_key_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameEventList_descriptor_t {
    return new CSVCMsg_GameEventList_descriptor_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList_descriptor_t {
    return new CSVCMsg_GameEventList_descriptor_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList_descriptor_t {
    return new CSVCMsg_GameEventList_descriptor_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameEventList_descriptor_t | PlainMessage<CSVCMsg_GameEventList_descriptor_t> | undefined, b: CSVCMsg_GameEventList_descriptor_t | PlainMessage<CSVCMsg_GameEventList_descriptor_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameEventList_descriptor_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_TempEntities
 */
export class CSVCMsg_TempEntities extends Message<CSVCMsg_TempEntities> {
  /**
   * @generated from field: optional bool reliable = 1;
   */
  reliable?: boolean;

  /**
   * @generated from field: optional int32 num_entries = 2;
   */
  numEntries?: number;

  /**
   * @generated from field: optional bytes entity_data = 3;
   */
  entityData?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_TempEntities>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_TempEntities";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "reliable", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "num_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "entity_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_TempEntities {
    return new CSVCMsg_TempEntities().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_TempEntities {
    return new CSVCMsg_TempEntities().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_TempEntities {
    return new CSVCMsg_TempEntities().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_TempEntities | PlainMessage<CSVCMsg_TempEntities> | undefined, b: CSVCMsg_TempEntities | PlainMessage<CSVCMsg_TempEntities> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_TempEntities, a, b);
  }
}

/**
 * @generated from message CSVCMsg_PacketEntities
 */
export class CSVCMsg_PacketEntities extends Message<CSVCMsg_PacketEntities> {
  /**
   * @generated from field: optional int32 max_entries = 1;
   */
  maxEntries?: number;

  /**
   * @generated from field: optional int32 updated_entries = 2;
   */
  updatedEntries?: number;

  /**
   * @generated from field: optional bool is_delta = 3;
   */
  isDelta?: boolean;

  /**
   * @generated from field: optional bool update_baseline = 4;
   */
  updateBaseline?: boolean;

  /**
   * @generated from field: optional int32 baseline = 5;
   */
  baseline?: number;

  /**
   * @generated from field: optional int32 delta_from = 6;
   */
  deltaFrom?: number;

  /**
   * @generated from field: optional bytes entity_data = 7;
   */
  entityData?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_PacketEntities>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_PacketEntities";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "max_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "updated_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "is_delta", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "update_baseline", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "baseline", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "delta_from", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "entity_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_PacketEntities {
    return new CSVCMsg_PacketEntities().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_PacketEntities {
    return new CSVCMsg_PacketEntities().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_PacketEntities {
    return new CSVCMsg_PacketEntities().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_PacketEntities | PlainMessage<CSVCMsg_PacketEntities> | undefined, b: CSVCMsg_PacketEntities | PlainMessage<CSVCMsg_PacketEntities> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_PacketEntities, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Sounds
 */
export class CSVCMsg_Sounds extends Message<CSVCMsg_Sounds> {
  /**
   * @generated from field: optional bool reliable_sound = 1;
   */
  reliableSound?: boolean;

  /**
   * @generated from field: repeated CSVCMsg_Sounds.sounddata_t sounds = 2;
   */
  sounds: CSVCMsg_Sounds_sounddata_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_Sounds>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_Sounds";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "reliable_sound", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "sounds", kind: "message", T: CSVCMsg_Sounds_sounddata_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Sounds {
    return new CSVCMsg_Sounds().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Sounds {
    return new CSVCMsg_Sounds().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Sounds {
    return new CSVCMsg_Sounds().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Sounds | PlainMessage<CSVCMsg_Sounds> | undefined, b: CSVCMsg_Sounds | PlainMessage<CSVCMsg_Sounds> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Sounds, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Sounds.sounddata_t
 */
export class CSVCMsg_Sounds_sounddata_t extends Message<CSVCMsg_Sounds_sounddata_t> {
  /**
   * @generated from field: optional sint32 origin_x = 1;
   */
  originX?: number;

  /**
   * @generated from field: optional sint32 origin_y = 2;
   */
  originY?: number;

  /**
   * @generated from field: optional sint32 origin_z = 3;
   */
  originZ?: number;

  /**
   * @generated from field: optional uint32 volume = 4;
   */
  volume?: number;

  /**
   * @generated from field: optional float delay_value = 5;
   */
  delayValue?: number;

  /**
   * @generated from field: optional int32 sequence_number = 6;
   */
  sequenceNumber?: number;

  /**
   * @generated from field: optional int32 entity_index = 7;
   */
  entityIndex?: number;

  /**
   * @generated from field: optional int32 channel = 8;
   */
  channel?: number;

  /**
   * @generated from field: optional int32 pitch = 9;
   */
  pitch?: number;

  /**
   * @generated from field: optional int32 flags = 10;
   */
  flags?: number;

  /**
   * @generated from field: optional uint32 sound_num = 11;
   */
  soundNum?: number;

  /**
   * @generated from field: optional fixed32 sound_num_handle = 12;
   */
  soundNumHandle?: number;

  /**
   * @generated from field: optional int32 speaker_entity = 13;
   */
  speakerEntity?: number;

  /**
   * @generated from field: optional int32 random_seed = 14;
   */
  randomSeed?: number;

  /**
   * @generated from field: optional int32 sound_level = 15;
   */
  soundLevel?: number;

  /**
   * @generated from field: optional bool is_sentence = 16;
   */
  isSentence?: boolean;

  /**
   * @generated from field: optional bool is_ambient = 17;
   */
  isAmbient?: boolean;

  constructor(data?: PartialMessage<CSVCMsg_Sounds_sounddata_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_Sounds.sounddata_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "origin_x", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true },
    { no: 2, name: "origin_y", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true },
    { no: 3, name: "origin_z", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true },
    { no: 4, name: "volume", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "delay_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 6, name: "sequence_number", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "entity_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "channel", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "pitch", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "flags", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 11, name: "sound_num", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 12, name: "sound_num_handle", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 13, name: "speaker_entity", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 14, name: "random_seed", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 15, name: "sound_level", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 16, name: "is_sentence", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 17, name: "is_ambient", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Sounds_sounddata_t {
    return new CSVCMsg_Sounds_sounddata_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Sounds_sounddata_t {
    return new CSVCMsg_Sounds_sounddata_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Sounds_sounddata_t {
    return new CSVCMsg_Sounds_sounddata_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Sounds_sounddata_t | PlainMessage<CSVCMsg_Sounds_sounddata_t> | undefined, b: CSVCMsg_Sounds_sounddata_t | PlainMessage<CSVCMsg_Sounds_sounddata_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Sounds_sounddata_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_EntityMsg
 */
export class CSVCMsg_EntityMsg extends Message<CSVCMsg_EntityMsg> {
  /**
   * @generated from field: optional int32 ent_index = 1;
   */
  entIndex?: number;

  /**
   * @generated from field: optional int32 class_id = 2;
   */
  classId?: number;

  /**
   * @generated from field: optional bytes ent_data = 3;
   */
  entData?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_EntityMsg>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_EntityMsg";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "ent_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "ent_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_EntityMsg {
    return new CSVCMsg_EntityMsg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_EntityMsg {
    return new CSVCMsg_EntityMsg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_EntityMsg {
    return new CSVCMsg_EntityMsg().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_EntityMsg | PlainMessage<CSVCMsg_EntityMsg> | undefined, b: CSVCMsg_EntityMsg | PlainMessage<CSVCMsg_EntityMsg> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_EntityMsg, a, b);
  }
}

/**
 * @generated from message CSVCMsg_CmdKeyValues
 */
export class CSVCMsg_CmdKeyValues extends Message<CSVCMsg_CmdKeyValues> {
  /**
   * @generated from field: optional bytes keyvalues = 1;
   */
  keyvalues?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_CmdKeyValues>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_CmdKeyValues";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "keyvalues", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_CmdKeyValues {
    return new CSVCMsg_CmdKeyValues().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_CmdKeyValues {
    return new CSVCMsg_CmdKeyValues().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_CmdKeyValues {
    return new CSVCMsg_CmdKeyValues().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_CmdKeyValues | PlainMessage<CSVCMsg_CmdKeyValues> | undefined, b: CSVCMsg_CmdKeyValues | PlainMessage<CSVCMsg_CmdKeyValues> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_CmdKeyValues, a, b);
  }
}

/**
 * @generated from message CSVCMsg_EncryptedData
 */
export class CSVCMsg_EncryptedData extends Message<CSVCMsg_EncryptedData> {
  /**
   * @generated from field: optional bytes encrypted = 1;
   */
  encrypted?: Uint8Array;

  /**
   * @generated from field: optional int32 key_type = 2;
   */
  keyType?: number;

  constructor(data?: PartialMessage<CSVCMsg_EncryptedData>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_EncryptedData";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "encrypted", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 2, name: "key_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_EncryptedData {
    return new CSVCMsg_EncryptedData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_EncryptedData {
    return new CSVCMsg_EncryptedData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_EncryptedData {
    return new CSVCMsg_EncryptedData().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_EncryptedData | PlainMessage<CSVCMsg_EncryptedData> | undefined, b: CSVCMsg_EncryptedData | PlainMessage<CSVCMsg_EncryptedData> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_EncryptedData, a, b);
  }
}

/**
 * @generated from message CSVCMsg_HltvReplay
 */
export class CSVCMsg_HltvReplay extends Message<CSVCMsg_HltvReplay> {
  /**
   * @generated from field: optional int32 delay = 1;
   */
  delay?: number;

  /**
   * @generated from field: optional int32 primary_target = 2;
   */
  primaryTarget?: number;

  /**
   * @generated from field: optional int32 replay_stop_at = 3;
   */
  replayStopAt?: number;

  /**
   * @generated from field: optional int32 replay_start_at = 4;
   */
  replayStartAt?: number;

  /**
   * @generated from field: optional int32 replay_slowdown_begin = 5;
   */
  replaySlowdownBegin?: number;

  /**
   * @generated from field: optional int32 replay_slowdown_end = 6;
   */
  replaySlowdownEnd?: number;

  /**
   * @generated from field: optional float replay_slowdown_rate = 7;
   */
  replaySlowdownRate?: number;

  constructor(data?: PartialMessage<CSVCMsg_HltvReplay>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_HltvReplay";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "delay", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "primary_target", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "replay_stop_at", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "replay_start_at", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "replay_slowdown_begin", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "replay_slowdown_end", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "replay_slowdown_rate", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_HltvReplay {
    return new CSVCMsg_HltvReplay().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_HltvReplay {
    return new CSVCMsg_HltvReplay().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_HltvReplay {
    return new CSVCMsg_HltvReplay().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_HltvReplay | PlainMessage<CSVCMsg_HltvReplay> | undefined, b: CSVCMsg_HltvReplay | PlainMessage<CSVCMsg_HltvReplay> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_HltvReplay, a, b);
  }
}

/**
 * @generated from message CCLCMsg_HltvReplay
 */
export class CCLCMsg_HltvReplay extends Message<CCLCMsg_HltvReplay> {
  /**
   * @generated from field: optional int32 request = 1;
   */
  request?: number;

  /**
   * @generated from field: optional float slowdown_length = 2;
   */
  slowdownLength?: number;

  /**
   * @generated from field: optional float slowdown_rate = 3;
   */
  slowdownRate?: number;

  /**
   * @generated from field: optional int32 primary_target_ent_index = 4;
   */
  primaryTargetEntIndex?: number;

  /**
   * @generated from field: optional float event_time = 5;
   */
  eventTime?: number;

  constructor(data?: PartialMessage<CCLCMsg_HltvReplay>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CCLCMsg_HltvReplay";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "request", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "slowdown_length", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "slowdown_rate", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "primary_target_ent_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "event_time", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_HltvReplay {
    return new CCLCMsg_HltvReplay().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_HltvReplay {
    return new CCLCMsg_HltvReplay().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_HltvReplay {
    return new CCLCMsg_HltvReplay().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_HltvReplay | PlainMessage<CCLCMsg_HltvReplay> | undefined, b: CCLCMsg_HltvReplay | PlainMessage<CCLCMsg_HltvReplay> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_HltvReplay, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Broadcast_Command
 */
export class CSVCMsg_Broadcast_Command extends Message<CSVCMsg_Broadcast_Command> {
  /**
   * @generated from field: optional string cmd = 1;
   */
  cmd?: string;

  constructor(data?: PartialMessage<CSVCMsg_Broadcast_Command>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime = proto2;
  static readonly typeName = "CSVCMsg_Broadcast_Command";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "cmd", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Broadcast_Command {
    return new CSVCMsg_Broadcast_Command().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Broadcast_Command {
    return new CSVCMsg_Broadcast_Command().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Broadcast_Command {
    return new CSVCMsg_Broadcast_Command().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Broadcast_Command | PlainMessage<CSVCMsg_Broadcast_Command> | undefined, b: CSVCMsg_Broadcast_Command | PlainMessage<CSVCMsg_Broadcast_Command> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Broadcast_Command, a, b);
  }
}


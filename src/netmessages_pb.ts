// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file netmessages.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { CMsgQAngle, CMsgVector, CSVCMsg_GameSessionConfiguration } from "./networkbasetypes_pb";
import { file_networkbasetypes } from "./networkbasetypes_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file netmessages.proto.
 */
export const file_netmessages: GenFile = /*@__PURE__*/
  fileDesc("", [file_networkbasetypes]);

/**
 * @generated from message CCLCMsg_ClientInfo
 */
export type CCLCMsg_ClientInfo = Message<"CCLCMsg_ClientInfo"> & {
  /**
   * @generated from field: optional fixed32 send_table_crc = 1;
   */
  sendTableCrc: number;

  /**
   * @generated from field: optional uint32 server_count = 2;
   */
  serverCount: number;

  /**
   * @generated from field: optional bool is_hltv = 3;
   */
  isHltv: boolean;

  /**
   * @generated from field: optional uint32 friends_id = 5;
   */
  friendsId: number;

  /**
   * @generated from field: optional string friends_name = 6;
   */
  friendsName: string;
};

/**
 * Describes the message CCLCMsg_ClientInfo.
 * Use `create(CCLCMsg_ClientInfoSchema)` to create a new message.
 */
export const CCLCMsg_ClientInfoSchema: GenMessage<CCLCMsg_ClientInfo> = /*@__PURE__*/
  messageDesc(file_netmessages, 0);

/**
 * @generated from message CCLCMsg_Move
 */
export type CCLCMsg_Move = Message<"CCLCMsg_Move"> & {
  /**
   * @generated from field: optional bytes data = 3;
   */
  data: Uint8Array;

  /**
   * @generated from field: optional uint32 last_command_number = 4;
   */
  lastCommandNumber: number;
};

/**
 * Describes the message CCLCMsg_Move.
 * Use `create(CCLCMsg_MoveSchema)` to create a new message.
 */
export const CCLCMsg_MoveSchema: GenMessage<CCLCMsg_Move> = /*@__PURE__*/
  messageDesc(file_netmessages, 1);

/**
 * @generated from message CMsgVoiceAudio
 */
export type CMsgVoiceAudio = Message<"CMsgVoiceAudio"> & {
  /**
   * @generated from field: optional VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
   */
  format: VoiceDataFormat_t;

  /**
   * @generated from field: optional bytes voice_data = 2;
   */
  voiceData: Uint8Array;

  /**
   * @generated from field: optional int32 sequence_bytes = 3;
   */
  sequenceBytes: number;

  /**
   * @generated from field: optional uint32 section_number = 4;
   */
  sectionNumber: number;

  /**
   * @generated from field: optional uint32 sample_rate = 5;
   */
  sampleRate: number;

  /**
   * @generated from field: optional uint32 uncompressed_sample_offset = 6;
   */
  uncompressedSampleOffset: number;

  /**
   * @generated from field: optional uint32 num_packets = 7;
   */
  numPackets: number;

  /**
   * @generated from field: repeated uint32 packet_offsets = 8 [packed = true];
   */
  packetOffsets: number[];

  /**
   * @generated from field: optional float voice_level = 9;
   */
  voiceLevel: number;
};

/**
 * Describes the message CMsgVoiceAudio.
 * Use `create(CMsgVoiceAudioSchema)` to create a new message.
 */
export const CMsgVoiceAudioSchema: GenMessage<CMsgVoiceAudio> = /*@__PURE__*/
  messageDesc(file_netmessages, 2);

/**
 * @generated from message CCLCMsg_VoiceData
 */
export type CCLCMsg_VoiceData = Message<"CCLCMsg_VoiceData"> & {
  /**
   * @generated from field: optional CMsgVoiceAudio audio = 1;
   */
  audio?: CMsgVoiceAudio;

  /**
   * @generated from field: optional fixed64 xuid = 2;
   */
  xuid: bigint;

  /**
   * @generated from field: optional uint32 tick = 3;
   */
  tick: number;
};

/**
 * Describes the message CCLCMsg_VoiceData.
 * Use `create(CCLCMsg_VoiceDataSchema)` to create a new message.
 */
export const CCLCMsg_VoiceDataSchema: GenMessage<CCLCMsg_VoiceData> = /*@__PURE__*/
  messageDesc(file_netmessages, 3);

/**
 * @generated from message CCLCMsg_BaselineAck
 */
export type CCLCMsg_BaselineAck = Message<"CCLCMsg_BaselineAck"> & {
  /**
   * @generated from field: optional int32 baseline_tick = 1;
   */
  baselineTick: number;

  /**
   * @generated from field: optional int32 baseline_nr = 2;
   */
  baselineNr: number;
};

/**
 * Describes the message CCLCMsg_BaselineAck.
 * Use `create(CCLCMsg_BaselineAckSchema)` to create a new message.
 */
export const CCLCMsg_BaselineAckSchema: GenMessage<CCLCMsg_BaselineAck> = /*@__PURE__*/
  messageDesc(file_netmessages, 4);

/**
 * @generated from message CCLCMsg_ListenEvents
 */
export type CCLCMsg_ListenEvents = Message<"CCLCMsg_ListenEvents"> & {
  /**
   * @generated from field: repeated fixed32 event_mask = 1;
   */
  eventMask: number[];
};

/**
 * Describes the message CCLCMsg_ListenEvents.
 * Use `create(CCLCMsg_ListenEventsSchema)` to create a new message.
 */
export const CCLCMsg_ListenEventsSchema: GenMessage<CCLCMsg_ListenEvents> = /*@__PURE__*/
  messageDesc(file_netmessages, 5);

/**
 * @generated from message CCLCMsg_RespondCvarValue
 */
export type CCLCMsg_RespondCvarValue = Message<"CCLCMsg_RespondCvarValue"> & {
  /**
   * @generated from field: optional int32 cookie = 1;
   */
  cookie: number;

  /**
   * @generated from field: optional int32 status_code = 2;
   */
  statusCode: number;

  /**
   * @generated from field: optional string name = 3;
   */
  name: string;

  /**
   * @generated from field: optional string value = 4;
   */
  value: string;
};

/**
 * Describes the message CCLCMsg_RespondCvarValue.
 * Use `create(CCLCMsg_RespondCvarValueSchema)` to create a new message.
 */
export const CCLCMsg_RespondCvarValueSchema: GenMessage<CCLCMsg_RespondCvarValue> = /*@__PURE__*/
  messageDesc(file_netmessages, 6);

/**
 * @generated from message CCLCMsg_FileCRCCheck
 */
export type CCLCMsg_FileCRCCheck = Message<"CCLCMsg_FileCRCCheck"> & {
  /**
   * @generated from field: optional int32 code_path = 1;
   */
  codePath: number;

  /**
   * @generated from field: optional string path = 2;
   */
  path: string;

  /**
   * @generated from field: optional int32 code_filename = 3;
   */
  codeFilename: number;

  /**
   * @generated from field: optional string filename = 4;
   */
  filename: string;

  /**
   * @generated from field: optional fixed32 crc = 5;
   */
  crc: number;
};

/**
 * Describes the message CCLCMsg_FileCRCCheck.
 * Use `create(CCLCMsg_FileCRCCheckSchema)` to create a new message.
 */
export const CCLCMsg_FileCRCCheckSchema: GenMessage<CCLCMsg_FileCRCCheck> = /*@__PURE__*/
  messageDesc(file_netmessages, 7);

/**
 * @generated from message CCLCMsg_LoadingProgress
 */
export type CCLCMsg_LoadingProgress = Message<"CCLCMsg_LoadingProgress"> & {
  /**
   * @generated from field: optional int32 progress = 1;
   */
  progress: number;
};

/**
 * Describes the message CCLCMsg_LoadingProgress.
 * Use `create(CCLCMsg_LoadingProgressSchema)` to create a new message.
 */
export const CCLCMsg_LoadingProgressSchema: GenMessage<CCLCMsg_LoadingProgress> = /*@__PURE__*/
  messageDesc(file_netmessages, 8);

/**
 * @generated from message CCLCMsg_SplitPlayerConnect
 */
export type CCLCMsg_SplitPlayerConnect = Message<"CCLCMsg_SplitPlayerConnect"> & {
  /**
   * @generated from field: optional string playername = 1;
   */
  playername: string;
};

/**
 * Describes the message CCLCMsg_SplitPlayerConnect.
 * Use `create(CCLCMsg_SplitPlayerConnectSchema)` to create a new message.
 */
export const CCLCMsg_SplitPlayerConnectSchema: GenMessage<CCLCMsg_SplitPlayerConnect> = /*@__PURE__*/
  messageDesc(file_netmessages, 9);

/**
 * @generated from message CCLCMsg_SplitPlayerDisconnect
 */
export type CCLCMsg_SplitPlayerDisconnect = Message<"CCLCMsg_SplitPlayerDisconnect"> & {
  /**
   * @generated from field: optional int32 slot = 1;
   */
  slot: number;
};

/**
 * Describes the message CCLCMsg_SplitPlayerDisconnect.
 * Use `create(CCLCMsg_SplitPlayerDisconnectSchema)` to create a new message.
 */
export const CCLCMsg_SplitPlayerDisconnectSchema: GenMessage<CCLCMsg_SplitPlayerDisconnect> = /*@__PURE__*/
  messageDesc(file_netmessages, 10);

/**
 * @generated from message CCLCMsg_ServerStatus
 */
export type CCLCMsg_ServerStatus = Message<"CCLCMsg_ServerStatus"> & {
  /**
   * @generated from field: optional bool simplified = 1;
   */
  simplified: boolean;
};

/**
 * Describes the message CCLCMsg_ServerStatus.
 * Use `create(CCLCMsg_ServerStatusSchema)` to create a new message.
 */
export const CCLCMsg_ServerStatusSchema: GenMessage<CCLCMsg_ServerStatus> = /*@__PURE__*/
  messageDesc(file_netmessages, 11);

/**
 * @generated from message CCLCMsg_RequestPause
 */
export type CCLCMsg_RequestPause = Message<"CCLCMsg_RequestPause"> & {
  /**
   * @generated from field: optional RequestPause_t pause_type = 1 [default = RP_PAUSE];
   */
  pauseType: RequestPause_t;

  /**
   * @generated from field: optional int32 pause_group = 2;
   */
  pauseGroup: number;
};

/**
 * Describes the message CCLCMsg_RequestPause.
 * Use `create(CCLCMsg_RequestPauseSchema)` to create a new message.
 */
export const CCLCMsg_RequestPauseSchema: GenMessage<CCLCMsg_RequestPause> = /*@__PURE__*/
  messageDesc(file_netmessages, 12);

/**
 * @generated from message CCLCMsg_CmdKeyValues
 */
export type CCLCMsg_CmdKeyValues = Message<"CCLCMsg_CmdKeyValues"> & {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message CCLCMsg_CmdKeyValues.
 * Use `create(CCLCMsg_CmdKeyValuesSchema)` to create a new message.
 */
export const CCLCMsg_CmdKeyValuesSchema: GenMessage<CCLCMsg_CmdKeyValues> = /*@__PURE__*/
  messageDesc(file_netmessages, 13);

/**
 * @generated from message CCLCMsg_RconServerDetails
 */
export type CCLCMsg_RconServerDetails = Message<"CCLCMsg_RconServerDetails"> & {
  /**
   * @generated from field: optional bytes token = 1;
   */
  token: Uint8Array;
};

/**
 * Describes the message CCLCMsg_RconServerDetails.
 * Use `create(CCLCMsg_RconServerDetailsSchema)` to create a new message.
 */
export const CCLCMsg_RconServerDetailsSchema: GenMessage<CCLCMsg_RconServerDetails> = /*@__PURE__*/
  messageDesc(file_netmessages, 14);

/**
 * @generated from message CMsgSource2SystemSpecs
 */
export type CMsgSource2SystemSpecs = Message<"CMsgSource2SystemSpecs"> & {
  /**
   * @generated from field: optional string cpu_id = 1;
   */
  cpuId: string;

  /**
   * @generated from field: optional string cpu_brand = 2;
   */
  cpuBrand: string;

  /**
   * @generated from field: optional uint32 cpu_model = 3;
   */
  cpuModel: number;

  /**
   * @generated from field: optional uint32 cpu_num_physical = 4;
   */
  cpuNumPhysical: number;

  /**
   * @generated from field: optional uint32 ram_physical_total_mb = 21;
   */
  ramPhysicalTotalMb: number;

  /**
   * @generated from field: optional string gpu_rendersystem_dll_name = 41;
   */
  gpuRendersystemDllName: string;

  /**
   * @generated from field: optional uint32 gpu_vendor_id = 42;
   */
  gpuVendorId: number;

  /**
   * @generated from field: optional string gpu_driver_name = 43;
   */
  gpuDriverName: string;

  /**
   * @generated from field: optional uint32 gpu_driver_version_high = 44;
   */
  gpuDriverVersionHigh: number;

  /**
   * @generated from field: optional uint32 gpu_driver_version_low = 45;
   */
  gpuDriverVersionLow: number;

  /**
   * @generated from field: optional uint32 gpu_dx_support_level = 46;
   */
  gpuDxSupportLevel: number;

  /**
   * @generated from field: optional uint32 gpu_texture_memory_size_mb = 47;
   */
  gpuTextureMemorySizeMb: number;
};

/**
 * Describes the message CMsgSource2SystemSpecs.
 * Use `create(CMsgSource2SystemSpecsSchema)` to create a new message.
 */
export const CMsgSource2SystemSpecsSchema: GenMessage<CMsgSource2SystemSpecs> = /*@__PURE__*/
  messageDesc(file_netmessages, 15);

/**
 * @generated from message CMsgSource2VProfLiteReportItem
 */
export type CMsgSource2VProfLiteReportItem = Message<"CMsgSource2VProfLiteReportItem"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional uint32 active_samples = 2;
   */
  activeSamples: number;

  /**
   * @generated from field: optional uint32 active_samples_1secmax = 4;
   */
  activeSamples1secmax: number;

  /**
   * @generated from field: optional uint32 usec_max = 3;
   */
  usecMax: number;

  /**
   * @generated from field: optional uint32 usec_avg_active = 11;
   */
  usecAvgActive: number;

  /**
   * @generated from field: optional uint32 usec_p50_active = 12;
   */
  usecP50Active: number;

  /**
   * @generated from field: optional uint32 usec_p99_active = 13;
   */
  usecP99Active: number;

  /**
   * @generated from field: optional uint32 usec_avg_all = 21;
   */
  usecAvgAll: number;

  /**
   * @generated from field: optional uint32 usec_p50_all = 22;
   */
  usecP50All: number;

  /**
   * @generated from field: optional uint32 usec_p99_all = 23;
   */
  usecP99All: number;

  /**
   * @generated from field: optional uint32 usec_1secmax_avg_active = 31;
   */
  usec1secmaxAvgActive: number;

  /**
   * @generated from field: optional uint32 usec_1secmax_p50_active = 32;
   */
  usec1secmaxP50Active: number;

  /**
   * @generated from field: optional uint32 usec_1secmax_p95_active = 33;
   */
  usec1secmaxP95Active: number;

  /**
   * @generated from field: optional uint32 usec_1secmax_p99_active = 34;
   */
  usec1secmaxP99Active: number;

  /**
   * @generated from field: optional uint32 usec_1secmax_avg_all = 41;
   */
  usec1secmaxAvgAll: number;

  /**
   * @generated from field: optional uint32 usec_1secmax_p50_all = 42;
   */
  usec1secmaxP50All: number;

  /**
   * @generated from field: optional uint32 usec_1secmax_p95_all = 43;
   */
  usec1secmaxP95All: number;

  /**
   * @generated from field: optional uint32 usec_1secmax_p99_all = 44;
   */
  usec1secmaxP99All: number;
};

/**
 * Describes the message CMsgSource2VProfLiteReportItem.
 * Use `create(CMsgSource2VProfLiteReportItemSchema)` to create a new message.
 */
export const CMsgSource2VProfLiteReportItemSchema: GenMessage<CMsgSource2VProfLiteReportItem> = /*@__PURE__*/
  messageDesc(file_netmessages, 16);

/**
 * @generated from message CMsgSource2VProfLiteReport
 */
export type CMsgSource2VProfLiteReport = Message<"CMsgSource2VProfLiteReport"> & {
  /**
   * @generated from field: optional CMsgSource2VProfLiteReportItem total = 1;
   */
  total?: CMsgSource2VProfLiteReportItem;

  /**
   * @generated from field: repeated CMsgSource2VProfLiteReportItem items = 2;
   */
  items: CMsgSource2VProfLiteReportItem[];

  /**
   * @generated from field: optional uint32 discarded_frames = 3;
   */
  discardedFrames: number;
};

/**
 * Describes the message CMsgSource2VProfLiteReport.
 * Use `create(CMsgSource2VProfLiteReportSchema)` to create a new message.
 */
export const CMsgSource2VProfLiteReportSchema: GenMessage<CMsgSource2VProfLiteReport> = /*@__PURE__*/
  messageDesc(file_netmessages, 17);

/**
 * @generated from message CMsgSource2NetworkFlowQuality
 */
export type CMsgSource2NetworkFlowQuality = Message<"CMsgSource2NetworkFlowQuality"> & {
  /**
   * @generated from field: optional uint32 duration = 1;
   */
  duration: number;

  /**
   * @generated from field: optional uint64 bytes_total = 5;
   */
  bytesTotal: bigint;

  /**
   * @generated from field: optional uint64 bytes_total_reliable = 6;
   */
  bytesTotalReliable: bigint;

  /**
   * @generated from field: optional uint64 bytes_total_voice = 7;
   */
  bytesTotalVoice: bigint;

  /**
   * @generated from field: optional uint32 bytes_sec_p95 = 10;
   */
  bytesSecP95: number;

  /**
   * @generated from field: optional uint32 bytes_sec_p99 = 11;
   */
  bytesSecP99: number;

  /**
   * @generated from field: optional uint32 enginemsgs_total = 20;
   */
  enginemsgsTotal: number;

  /**
   * @generated from field: optional uint32 enginemsgs_sec_p95 = 21;
   */
  enginemsgsSecP95: number;

  /**
   * @generated from field: optional uint32 enginemsgs_sec_p99 = 22;
   */
  enginemsgsSecP99: number;

  /**
   * @generated from field: optional uint32 ticks_total = 40;
   */
  ticksTotal: number;

  /**
   * @generated from field: optional uint32 ticks_good = 41;
   */
  ticksGood: number;

  /**
   * @generated from field: optional uint32 ticks_good_almost_late = 42;
   */
  ticksGoodAlmostLate: number;

  /**
   * @generated from field: optional uint32 ticks_fixed_dropped = 43;
   */
  ticksFixedDropped: number;

  /**
   * @generated from field: optional uint32 ticks_fixed_late = 44;
   */
  ticksFixedLate: number;

  /**
   * @generated from field: optional uint32 ticks_bad_dropped = 45;
   */
  ticksBadDropped: number;

  /**
   * @generated from field: optional uint32 ticks_bad_late = 46;
   */
  ticksBadLate: number;

  /**
   * @generated from field: optional uint32 ticks_bad_other = 47;
   */
  ticksBadOther: number;

  /**
   * @generated from field: optional uint32 tick_missrate_samples_total = 50;
   */
  tickMissrateSamplesTotal: number;

  /**
   * @generated from field: optional uint32 tick_missrate_samples_perfect = 51;
   */
  tickMissrateSamplesPerfect: number;

  /**
   * @generated from field: optional uint32 tick_missrate_samples_perfectnet = 52;
   */
  tickMissrateSamplesPerfectnet: number;

  /**
   * @generated from field: optional uint32 tick_missratenet_p75_x10 = 53;
   */
  tickMissratenetP75X10: number;

  /**
   * @generated from field: optional uint32 tick_missratenet_p95_x10 = 54;
   */
  tickMissratenetP95X10: number;

  /**
   * @generated from field: optional uint32 tick_missratenet_p99_x10 = 55;
   */
  tickMissratenetP99X10: number;

  /**
   * @generated from field: optional sint32 recvmargin_p1 = 61;
   */
  recvmarginP1: number;

  /**
   * @generated from field: optional sint32 recvmargin_p5 = 62;
   */
  recvmarginP5: number;

  /**
   * @generated from field: optional sint32 recvmargin_p25 = 63;
   */
  recvmarginP25: number;

  /**
   * @generated from field: optional sint32 recvmargin_p50 = 64;
   */
  recvmarginP50: number;

  /**
   * @generated from field: optional sint32 recvmargin_p75 = 65;
   */
  recvmarginP75: number;

  /**
   * @generated from field: optional sint32 recvmargin_p95 = 66;
   */
  recvmarginP95: number;
};

/**
 * Describes the message CMsgSource2NetworkFlowQuality.
 * Use `create(CMsgSource2NetworkFlowQualitySchema)` to create a new message.
 */
export const CMsgSource2NetworkFlowQualitySchema: GenMessage<CMsgSource2NetworkFlowQuality> = /*@__PURE__*/
  messageDesc(file_netmessages, 18);

/**
 * @generated from message CCLCMsg_Diagnostic
 */
export type CCLCMsg_Diagnostic = Message<"CCLCMsg_Diagnostic"> & {
  /**
   * @generated from field: optional CMsgSource2SystemSpecs system_specs = 1;
   */
  systemSpecs?: CMsgSource2SystemSpecs;

  /**
   * @generated from field: optional CMsgSource2VProfLiteReport vprof_report = 2;
   */
  vprofReport?: CMsgSource2VProfLiteReport;
};

/**
 * Describes the message CCLCMsg_Diagnostic.
 * Use `create(CCLCMsg_DiagnosticSchema)` to create a new message.
 */
export const CCLCMsg_DiagnosticSchema: GenMessage<CCLCMsg_Diagnostic> = /*@__PURE__*/
  messageDesc(file_netmessages, 19);

/**
 * @generated from message CSource2Metrics_MatchPerfSummary_Notification
 */
export type CSource2Metrics_MatchPerfSummary_Notification = Message<"CSource2Metrics_MatchPerfSummary_Notification"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string game_mode = 2;
   */
  gameMode: string;

  /**
   * @generated from field: optional uint32 server_build_id = 3;
   */
  serverBuildId: number;

  /**
   * @generated from field: optional CMsgSource2VProfLiteReport server_profile = 10;
   */
  serverProfile?: CMsgSource2VProfLiteReport;

  /**
   * @generated from field: repeated CSource2Metrics_MatchPerfSummary_Notification.Client clients = 11;
   */
  clients: CSource2Metrics_MatchPerfSummary_Notification_Client[];

  /**
   * @generated from field: optional string map = 20;
   */
  map: string;
};

/**
 * Describes the message CSource2Metrics_MatchPerfSummary_Notification.
 * Use `create(CSource2Metrics_MatchPerfSummary_NotificationSchema)` to create a new message.
 */
export const CSource2Metrics_MatchPerfSummary_NotificationSchema: GenMessage<CSource2Metrics_MatchPerfSummary_Notification> = /*@__PURE__*/
  messageDesc(file_netmessages, 20);

/**
 * @generated from message CSource2Metrics_MatchPerfSummary_Notification.Client
 */
export type CSource2Metrics_MatchPerfSummary_Notification_Client = Message<"CSource2Metrics_MatchPerfSummary_Notification.Client"> & {
  /**
   * @generated from field: optional CMsgSource2SystemSpecs system_specs = 1;
   */
  systemSpecs?: CMsgSource2SystemSpecs;

  /**
   * @generated from field: optional CMsgSource2VProfLiteReport profile = 2;
   */
  profile?: CMsgSource2VProfLiteReport;

  /**
   * @generated from field: optional uint32 build_id = 3;
   */
  buildId: number;

  /**
   * @generated from field: optional fixed64 steamid = 10;
   */
  steamid: bigint;
};

/**
 * Describes the message CSource2Metrics_MatchPerfSummary_Notification.Client.
 * Use `create(CSource2Metrics_MatchPerfSummary_Notification_ClientSchema)` to create a new message.
 */
export const CSource2Metrics_MatchPerfSummary_Notification_ClientSchema: GenMessage<CSource2Metrics_MatchPerfSummary_Notification_Client> = /*@__PURE__*/
  messageDesc(file_netmessages, 20, 0);

/**
 * @generated from message CSVCMsg_ServerInfo
 */
export type CSVCMsg_ServerInfo = Message<"CSVCMsg_ServerInfo"> & {
  /**
   * @generated from field: optional int32 protocol = 1;
   */
  protocol: number;

  /**
   * @generated from field: optional int32 server_count = 2;
   */
  serverCount: number;

  /**
   * @generated from field: optional bool is_dedicated = 3;
   */
  isDedicated: boolean;

  /**
   * @generated from field: optional bool is_hltv = 4;
   */
  isHltv: boolean;

  /**
   * @generated from field: optional int32 c_os = 6;
   */
  cOs: number;

  /**
   * @generated from field: optional int32 max_clients = 10;
   */
  maxClients: number;

  /**
   * @generated from field: optional int32 max_classes = 11;
   */
  maxClasses: number;

  /**
   * @generated from field: optional int32 player_slot = 12 [default = -1];
   */
  playerSlot: number;

  /**
   * @generated from field: optional float tick_interval = 13;
   */
  tickInterval: number;

  /**
   * @generated from field: optional string game_dir = 14;
   */
  gameDir: string;

  /**
   * @generated from field: optional string map_name = 15;
   */
  mapName: string;

  /**
   * @generated from field: optional string sky_name = 16;
   */
  skyName: string;

  /**
   * @generated from field: optional string host_name = 17;
   */
  hostName: string;

  /**
   * @generated from field: optional string addon_name = 18;
   */
  addonName: string;

  /**
   * @generated from field: optional CSVCMsg_GameSessionConfiguration game_session_config = 19;
   */
  gameSessionConfig?: CSVCMsg_GameSessionConfiguration;

  /**
   * @generated from field: optional bytes game_session_manifest = 20;
   */
  gameSessionManifest: Uint8Array;
};

/**
 * Describes the message CSVCMsg_ServerInfo.
 * Use `create(CSVCMsg_ServerInfoSchema)` to create a new message.
 */
export const CSVCMsg_ServerInfoSchema: GenMessage<CSVCMsg_ServerInfo> = /*@__PURE__*/
  messageDesc(file_netmessages, 21);

/**
 * @generated from message CSVCMsg_ClassInfo
 */
export type CSVCMsg_ClassInfo = Message<"CSVCMsg_ClassInfo"> & {
  /**
   * @generated from field: optional bool create_on_client = 1;
   */
  createOnClient: boolean;

  /**
   * @generated from field: repeated CSVCMsg_ClassInfo.class_t classes = 2;
   */
  classes: CSVCMsg_ClassInfo_class_t[];
};

/**
 * Describes the message CSVCMsg_ClassInfo.
 * Use `create(CSVCMsg_ClassInfoSchema)` to create a new message.
 */
export const CSVCMsg_ClassInfoSchema: GenMessage<CSVCMsg_ClassInfo> = /*@__PURE__*/
  messageDesc(file_netmessages, 22);

/**
 * @generated from message CSVCMsg_ClassInfo.class_t
 */
export type CSVCMsg_ClassInfo_class_t = Message<"CSVCMsg_ClassInfo.class_t"> & {
  /**
   * @generated from field: optional int32 class_id = 1;
   */
  classId: number;

  /**
   * @generated from field: optional string class_name = 3;
   */
  className: string;
};

/**
 * Describes the message CSVCMsg_ClassInfo.class_t.
 * Use `create(CSVCMsg_ClassInfo_class_tSchema)` to create a new message.
 */
export const CSVCMsg_ClassInfo_class_tSchema: GenMessage<CSVCMsg_ClassInfo_class_t> = /*@__PURE__*/
  messageDesc(file_netmessages, 22, 0);

/**
 * @generated from message CSVCMsg_SetPause
 */
export type CSVCMsg_SetPause = Message<"CSVCMsg_SetPause"> & {
  /**
   * @generated from field: optional bool paused = 1;
   */
  paused: boolean;
};

/**
 * Describes the message CSVCMsg_SetPause.
 * Use `create(CSVCMsg_SetPauseSchema)` to create a new message.
 */
export const CSVCMsg_SetPauseSchema: GenMessage<CSVCMsg_SetPause> = /*@__PURE__*/
  messageDesc(file_netmessages, 23);

/**
 * @generated from message CSVCMsg_VoiceInit
 */
export type CSVCMsg_VoiceInit = Message<"CSVCMsg_VoiceInit"> & {
  /**
   * @generated from field: optional int32 quality = 1;
   */
  quality: number;

  /**
   * @generated from field: optional string codec = 2;
   */
  codec: string;

  /**
   * @generated from field: optional int32 version = 3 [default = 0];
   */
  version: number;
};

/**
 * Describes the message CSVCMsg_VoiceInit.
 * Use `create(CSVCMsg_VoiceInitSchema)` to create a new message.
 */
export const CSVCMsg_VoiceInitSchema: GenMessage<CSVCMsg_VoiceInit> = /*@__PURE__*/
  messageDesc(file_netmessages, 24);

/**
 * @generated from message CSVCMsg_Print
 */
export type CSVCMsg_Print = Message<"CSVCMsg_Print"> & {
  /**
   * @generated from field: optional string text = 1;
   */
  text: string;
};

/**
 * Describes the message CSVCMsg_Print.
 * Use `create(CSVCMsg_PrintSchema)` to create a new message.
 */
export const CSVCMsg_PrintSchema: GenMessage<CSVCMsg_Print> = /*@__PURE__*/
  messageDesc(file_netmessages, 25);

/**
 * @generated from message CSVCMsg_Sounds
 */
export type CSVCMsg_Sounds = Message<"CSVCMsg_Sounds"> & {
  /**
   * @generated from field: optional bool reliable_sound = 1;
   */
  reliableSound: boolean;

  /**
   * @generated from field: repeated CSVCMsg_Sounds.sounddata_t sounds = 2;
   */
  sounds: CSVCMsg_Sounds_sounddata_t[];
};

/**
 * Describes the message CSVCMsg_Sounds.
 * Use `create(CSVCMsg_SoundsSchema)` to create a new message.
 */
export const CSVCMsg_SoundsSchema: GenMessage<CSVCMsg_Sounds> = /*@__PURE__*/
  messageDesc(file_netmessages, 26);

/**
 * @generated from message CSVCMsg_Sounds.sounddata_t
 */
export type CSVCMsg_Sounds_sounddata_t = Message<"CSVCMsg_Sounds.sounddata_t"> & {
  /**
   * @generated from field: optional sint32 origin_x = 1;
   */
  originX: number;

  /**
   * @generated from field: optional sint32 origin_y = 2;
   */
  originY: number;

  /**
   * @generated from field: optional sint32 origin_z = 3;
   */
  originZ: number;

  /**
   * @generated from field: optional uint32 volume = 4;
   */
  volume: number;

  /**
   * @generated from field: optional float delay_value = 5;
   */
  delayValue: number;

  /**
   * @generated from field: optional int32 sequence_number = 6;
   */
  sequenceNumber: number;

  /**
   * @generated from field: optional int32 entity_index = 7 [default = -1];
   */
  entityIndex: number;

  /**
   * @generated from field: optional int32 channel = 8;
   */
  channel: number;

  /**
   * @generated from field: optional int32 pitch = 9;
   */
  pitch: number;

  /**
   * @generated from field: optional int32 flags = 10;
   */
  flags: number;

  /**
   * @generated from field: optional uint32 sound_num = 11;
   */
  soundNum: number;

  /**
   * @generated from field: optional fixed32 sound_num_handle = 12;
   */
  soundNumHandle: number;

  /**
   * @generated from field: optional int32 speaker_entity = 13;
   */
  speakerEntity: number;

  /**
   * @generated from field: optional int32 random_seed = 14;
   */
  randomSeed: number;

  /**
   * @generated from field: optional int32 sound_level = 15;
   */
  soundLevel: number;

  /**
   * @generated from field: optional bool is_sentence = 16;
   */
  isSentence: boolean;

  /**
   * @generated from field: optional bool is_ambient = 17;
   */
  isAmbient: boolean;

  /**
   * @generated from field: optional uint32 guid = 18;
   */
  guid: number;

  /**
   * @generated from field: optional fixed64 sound_resource_id = 19;
   */
  soundResourceId: bigint;
};

/**
 * Describes the message CSVCMsg_Sounds.sounddata_t.
 * Use `create(CSVCMsg_Sounds_sounddata_tSchema)` to create a new message.
 */
export const CSVCMsg_Sounds_sounddata_tSchema: GenMessage<CSVCMsg_Sounds_sounddata_t> = /*@__PURE__*/
  messageDesc(file_netmessages, 26, 0);

/**
 * @generated from message CSVCMsg_Prefetch
 */
export type CSVCMsg_Prefetch = Message<"CSVCMsg_Prefetch"> & {
  /**
   * @generated from field: optional int32 sound_index = 1;
   */
  soundIndex: number;

  /**
   * @generated from field: optional PrefetchType resource_type = 2 [default = PFT_SOUND];
   */
  resourceType: PrefetchType;
};

/**
 * Describes the message CSVCMsg_Prefetch.
 * Use `create(CSVCMsg_PrefetchSchema)` to create a new message.
 */
export const CSVCMsg_PrefetchSchema: GenMessage<CSVCMsg_Prefetch> = /*@__PURE__*/
  messageDesc(file_netmessages, 27);

/**
 * @generated from message CSVCMsg_SetView
 */
export type CSVCMsg_SetView = Message<"CSVCMsg_SetView"> & {
  /**
   * @generated from field: optional int32 entity_index = 1 [default = -1];
   */
  entityIndex: number;

  /**
   * @generated from field: optional int32 slot = 2 [default = -1];
   */
  slot: number;
};

/**
 * Describes the message CSVCMsg_SetView.
 * Use `create(CSVCMsg_SetViewSchema)` to create a new message.
 */
export const CSVCMsg_SetViewSchema: GenMessage<CSVCMsg_SetView> = /*@__PURE__*/
  messageDesc(file_netmessages, 28);

/**
 * @generated from message CSVCMsg_FixAngle
 */
export type CSVCMsg_FixAngle = Message<"CSVCMsg_FixAngle"> & {
  /**
   * @generated from field: optional bool relative = 1;
   */
  relative: boolean;

  /**
   * @generated from field: optional CMsgQAngle angle = 2;
   */
  angle?: CMsgQAngle;
};

/**
 * Describes the message CSVCMsg_FixAngle.
 * Use `create(CSVCMsg_FixAngleSchema)` to create a new message.
 */
export const CSVCMsg_FixAngleSchema: GenMessage<CSVCMsg_FixAngle> = /*@__PURE__*/
  messageDesc(file_netmessages, 29);

/**
 * @generated from message CSVCMsg_CrosshairAngle
 */
export type CSVCMsg_CrosshairAngle = Message<"CSVCMsg_CrosshairAngle"> & {
  /**
   * @generated from field: optional CMsgQAngle angle = 1;
   */
  angle?: CMsgQAngle;
};

/**
 * Describes the message CSVCMsg_CrosshairAngle.
 * Use `create(CSVCMsg_CrosshairAngleSchema)` to create a new message.
 */
export const CSVCMsg_CrosshairAngleSchema: GenMessage<CSVCMsg_CrosshairAngle> = /*@__PURE__*/
  messageDesc(file_netmessages, 30);

/**
 * @generated from message CSVCMsg_BSPDecal
 */
export type CSVCMsg_BSPDecal = Message<"CSVCMsg_BSPDecal"> & {
  /**
   * @generated from field: optional CMsgVector pos = 1;
   */
  pos?: CMsgVector;

  /**
   * @generated from field: optional int32 decal_texture_index = 2;
   */
  decalTextureIndex: number;

  /**
   * @generated from field: optional int32 entity_index = 3 [default = -1];
   */
  entityIndex: number;

  /**
   * @generated from field: optional int32 model_index = 4;
   */
  modelIndex: number;

  /**
   * @generated from field: optional bool low_priority = 5;
   */
  lowPriority: boolean;
};

/**
 * Describes the message CSVCMsg_BSPDecal.
 * Use `create(CSVCMsg_BSPDecalSchema)` to create a new message.
 */
export const CSVCMsg_BSPDecalSchema: GenMessage<CSVCMsg_BSPDecal> = /*@__PURE__*/
  messageDesc(file_netmessages, 31);

/**
 * @generated from message CSVCMsg_SplitScreen
 */
export type CSVCMsg_SplitScreen = Message<"CSVCMsg_SplitScreen"> & {
  /**
   * @generated from field: optional ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
   */
  type: ESplitScreenMessageType;

  /**
   * @generated from field: optional int32 slot = 2;
   */
  slot: number;

  /**
   * @generated from field: optional int32 player_index = 3 [default = -1];
   */
  playerIndex: number;
};

/**
 * Describes the message CSVCMsg_SplitScreen.
 * Use `create(CSVCMsg_SplitScreenSchema)` to create a new message.
 */
export const CSVCMsg_SplitScreenSchema: GenMessage<CSVCMsg_SplitScreen> = /*@__PURE__*/
  messageDesc(file_netmessages, 32);

/**
 * @generated from message CSVCMsg_GetCvarValue
 */
export type CSVCMsg_GetCvarValue = Message<"CSVCMsg_GetCvarValue"> & {
  /**
   * @generated from field: optional int32 cookie = 1;
   */
  cookie: number;

  /**
   * @generated from field: optional string cvar_name = 2;
   */
  cvarName: string;
};

/**
 * Describes the message CSVCMsg_GetCvarValue.
 * Use `create(CSVCMsg_GetCvarValueSchema)` to create a new message.
 */
export const CSVCMsg_GetCvarValueSchema: GenMessage<CSVCMsg_GetCvarValue> = /*@__PURE__*/
  messageDesc(file_netmessages, 33);

/**
 * @generated from message CSVCMsg_Menu
 */
export type CSVCMsg_Menu = Message<"CSVCMsg_Menu"> & {
  /**
   * @generated from field: optional int32 dialog_type = 1;
   */
  dialogType: number;

  /**
   * @generated from field: optional bytes menu_key_values = 2;
   */
  menuKeyValues: Uint8Array;
};

/**
 * Describes the message CSVCMsg_Menu.
 * Use `create(CSVCMsg_MenuSchema)` to create a new message.
 */
export const CSVCMsg_MenuSchema: GenMessage<CSVCMsg_Menu> = /*@__PURE__*/
  messageDesc(file_netmessages, 34);

/**
 * @generated from message CSVCMsg_UserMessage
 */
export type CSVCMsg_UserMessage = Message<"CSVCMsg_UserMessage"> & {
  /**
   * @generated from field: optional int32 msg_type = 1;
   */
  msgType: number;

  /**
   * @generated from field: optional bytes msg_data = 2;
   */
  msgData: Uint8Array;

  /**
   * @generated from field: optional int32 passthrough = 3;
   */
  passthrough: number;
};

/**
 * Describes the message CSVCMsg_UserMessage.
 * Use `create(CSVCMsg_UserMessageSchema)` to create a new message.
 */
export const CSVCMsg_UserMessageSchema: GenMessage<CSVCMsg_UserMessage> = /*@__PURE__*/
  messageDesc(file_netmessages, 35);

/**
 * @generated from message CSVCMsg_SendTable
 */
export type CSVCMsg_SendTable = Message<"CSVCMsg_SendTable"> & {
  /**
   * @generated from field: optional bool is_end = 1;
   */
  isEnd: boolean;

  /**
   * @generated from field: optional string net_table_name = 2;
   */
  netTableName: string;

  /**
   * @generated from field: optional bool needs_decoder = 3;
   */
  needsDecoder: boolean;

  /**
   * @generated from field: repeated CSVCMsg_SendTable.sendprop_t props = 4;
   */
  props: CSVCMsg_SendTable_sendprop_t[];
};

/**
 * Describes the message CSVCMsg_SendTable.
 * Use `create(CSVCMsg_SendTableSchema)` to create a new message.
 */
export const CSVCMsg_SendTableSchema: GenMessage<CSVCMsg_SendTable> = /*@__PURE__*/
  messageDesc(file_netmessages, 36);

/**
 * @generated from message CSVCMsg_SendTable.sendprop_t
 */
export type CSVCMsg_SendTable_sendprop_t = Message<"CSVCMsg_SendTable.sendprop_t"> & {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type: number;

  /**
   * @generated from field: optional string var_name = 2;
   */
  varName: string;

  /**
   * @generated from field: optional int32 flags = 3;
   */
  flags: number;

  /**
   * @generated from field: optional int32 priority = 4;
   */
  priority: number;

  /**
   * @generated from field: optional string dt_name = 5;
   */
  dtName: string;

  /**
   * @generated from field: optional int32 num_elements = 6;
   */
  numElements: number;

  /**
   * @generated from field: optional float low_value = 7;
   */
  lowValue: number;

  /**
   * @generated from field: optional float high_value = 8;
   */
  highValue: number;

  /**
   * @generated from field: optional int32 num_bits = 9;
   */
  numBits: number;
};

/**
 * Describes the message CSVCMsg_SendTable.sendprop_t.
 * Use `create(CSVCMsg_SendTable_sendprop_tSchema)` to create a new message.
 */
export const CSVCMsg_SendTable_sendprop_tSchema: GenMessage<CSVCMsg_SendTable_sendprop_t> = /*@__PURE__*/
  messageDesc(file_netmessages, 36, 0);

/**
 * @generated from message CSVCMsg_GameEventList
 */
export type CSVCMsg_GameEventList = Message<"CSVCMsg_GameEventList"> & {
  /**
   * @generated from field: repeated CSVCMsg_GameEventList.descriptor_t descriptors = 1;
   */
  descriptors: CSVCMsg_GameEventList_descriptor_t[];
};

/**
 * Describes the message CSVCMsg_GameEventList.
 * Use `create(CSVCMsg_GameEventListSchema)` to create a new message.
 */
export const CSVCMsg_GameEventListSchema: GenMessage<CSVCMsg_GameEventList> = /*@__PURE__*/
  messageDesc(file_netmessages, 37);

/**
 * @generated from message CSVCMsg_GameEventList.key_t
 */
export type CSVCMsg_GameEventList_key_t = Message<"CSVCMsg_GameEventList.key_t"> & {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;
};

/**
 * Describes the message CSVCMsg_GameEventList.key_t.
 * Use `create(CSVCMsg_GameEventList_key_tSchema)` to create a new message.
 */
export const CSVCMsg_GameEventList_key_tSchema: GenMessage<CSVCMsg_GameEventList_key_t> = /*@__PURE__*/
  messageDesc(file_netmessages, 37, 0);

/**
 * @generated from message CSVCMsg_GameEventList.descriptor_t
 */
export type CSVCMsg_GameEventList_descriptor_t = Message<"CSVCMsg_GameEventList.descriptor_t"> & {
  /**
   * @generated from field: optional int32 eventid = 1;
   */
  eventid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: repeated CSVCMsg_GameEventList.key_t keys = 3;
   */
  keys: CSVCMsg_GameEventList_key_t[];
};

/**
 * Describes the message CSVCMsg_GameEventList.descriptor_t.
 * Use `create(CSVCMsg_GameEventList_descriptor_tSchema)` to create a new message.
 */
export const CSVCMsg_GameEventList_descriptor_tSchema: GenMessage<CSVCMsg_GameEventList_descriptor_t> = /*@__PURE__*/
  messageDesc(file_netmessages, 37, 1);

/**
 * @generated from message CSVCMsg_PacketEntities
 */
export type CSVCMsg_PacketEntities = Message<"CSVCMsg_PacketEntities"> & {
  /**
   * @generated from field: optional int32 max_entries = 1;
   */
  maxEntries: number;

  /**
   * @generated from field: optional int32 updated_entries = 2;
   */
  updatedEntries: number;

  /**
   * @generated from field: optional bool legacy_is_delta = 3;
   */
  legacyIsDelta: boolean;

  /**
   * @generated from field: optional bool update_baseline = 4;
   */
  updateBaseline: boolean;

  /**
   * @generated from field: optional int32 baseline = 5;
   */
  baseline: number;

  /**
   * @generated from field: optional int32 delta_from = 6;
   */
  deltaFrom: number;

  /**
   * @generated from field: optional bytes entity_data = 7;
   */
  entityData: Uint8Array;

  /**
   * @generated from field: optional bool pending_full_frame = 8;
   */
  pendingFullFrame: boolean;

  /**
   * @generated from field: optional uint32 active_spawngroup_handle = 9;
   */
  activeSpawngroupHandle: number;

  /**
   * @generated from field: optional uint32 max_spawngroup_creationsequence = 10;
   */
  maxSpawngroupCreationsequence: number;

  /**
   * @generated from field: optional uint32 last_cmd_number_executed = 11;
   */
  lastCmdNumberExecuted: number;

  /**
   * @generated from field: optional sint32 last_cmd_number_recv_delta = 17;
   */
  lastCmdNumberRecvDelta: number;

  /**
   * @generated from field: optional uint32 server_tick = 12;
   */
  serverTick: number;

  /**
   * @generated from field: optional bytes serialized_entities = 13;
   */
  serializedEntities: Uint8Array;

  /**
   * @generated from field: repeated CSVCMsg_PacketEntities.alternate_baseline_t alternate_baselines = 15;
   */
  alternateBaselines: CSVCMsg_PacketEntities_alternate_baseline_t[];

  /**
   * @generated from field: optional uint32 has_pvs_vis_bits = 16;
   */
  hasPvsVisBits: number;

  /**
   * @generated from field: repeated sint32 cmd_recv_status = 22 [packed = true];
   */
  cmdRecvStatus: number[];

  /**
   * @generated from field: optional CSVCMsg_PacketEntities.non_transmitted_entities_t non_transmitted_entities = 19;
   */
  nonTransmittedEntities?: CSVCMsg_PacketEntities_non_transmitted_entities_t;

  /**
   * @generated from field: optional uint32 cq_starved_command_ticks = 20;
   */
  cqStarvedCommandTicks: number;

  /**
   * @generated from field: optional uint32 cq_discarded_command_ticks = 21;
   */
  cqDiscardedCommandTicks: number;

  /**
   * @generated from field: optional bytes dev_padding = 999;
   */
  devPadding: Uint8Array;
};

/**
 * Describes the message CSVCMsg_PacketEntities.
 * Use `create(CSVCMsg_PacketEntitiesSchema)` to create a new message.
 */
export const CSVCMsg_PacketEntitiesSchema: GenMessage<CSVCMsg_PacketEntities> = /*@__PURE__*/
  messageDesc(file_netmessages, 38);

/**
 * @generated from message CSVCMsg_PacketEntities.alternate_baseline_t
 */
export type CSVCMsg_PacketEntities_alternate_baseline_t = Message<"CSVCMsg_PacketEntities.alternate_baseline_t"> & {
  /**
   * @generated from field: optional int32 entity_index = 1;
   */
  entityIndex: number;

  /**
   * @generated from field: optional int32 baseline_index = 2;
   */
  baselineIndex: number;
};

/**
 * Describes the message CSVCMsg_PacketEntities.alternate_baseline_t.
 * Use `create(CSVCMsg_PacketEntities_alternate_baseline_tSchema)` to create a new message.
 */
export const CSVCMsg_PacketEntities_alternate_baseline_tSchema: GenMessage<CSVCMsg_PacketEntities_alternate_baseline_t> = /*@__PURE__*/
  messageDesc(file_netmessages, 38, 0);

/**
 * @generated from message CSVCMsg_PacketEntities.non_transmitted_entities_t
 */
export type CSVCMsg_PacketEntities_non_transmitted_entities_t = Message<"CSVCMsg_PacketEntities.non_transmitted_entities_t"> & {
  /**
   * @generated from field: optional int32 header_count = 1;
   */
  headerCount: number;

  /**
   * @generated from field: optional bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message CSVCMsg_PacketEntities.non_transmitted_entities_t.
 * Use `create(CSVCMsg_PacketEntities_non_transmitted_entities_tSchema)` to create a new message.
 */
export const CSVCMsg_PacketEntities_non_transmitted_entities_tSchema: GenMessage<CSVCMsg_PacketEntities_non_transmitted_entities_t> = /*@__PURE__*/
  messageDesc(file_netmessages, 38, 1);

/**
 * @generated from message CSVCMsg_TempEntities
 */
export type CSVCMsg_TempEntities = Message<"CSVCMsg_TempEntities"> & {
  /**
   * @generated from field: optional bool reliable = 1;
   */
  reliable: boolean;

  /**
   * @generated from field: optional int32 num_entries = 2;
   */
  numEntries: number;

  /**
   * @generated from field: optional bytes entity_data = 3;
   */
  entityData: Uint8Array;
};

/**
 * Describes the message CSVCMsg_TempEntities.
 * Use `create(CSVCMsg_TempEntitiesSchema)` to create a new message.
 */
export const CSVCMsg_TempEntitiesSchema: GenMessage<CSVCMsg_TempEntities> = /*@__PURE__*/
  messageDesc(file_netmessages, 39);

/**
 * @generated from message CSVCMsg_CreateStringTable
 */
export type CSVCMsg_CreateStringTable = Message<"CSVCMsg_CreateStringTable"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional int32 num_entries = 2;
   */
  numEntries: number;

  /**
   * @generated from field: optional bool user_data_fixed_size = 3;
   */
  userDataFixedSize: boolean;

  /**
   * @generated from field: optional int32 user_data_size = 4;
   */
  userDataSize: number;

  /**
   * @generated from field: optional int32 user_data_size_bits = 5;
   */
  userDataSizeBits: number;

  /**
   * @generated from field: optional int32 flags = 6;
   */
  flags: number;

  /**
   * @generated from field: optional bytes string_data = 7;
   */
  stringData: Uint8Array;

  /**
   * @generated from field: optional int32 uncompressed_size = 8;
   */
  uncompressedSize: number;

  /**
   * @generated from field: optional bool data_compressed = 9;
   */
  dataCompressed: boolean;

  /**
   * @generated from field: optional bool using_varint_bitcounts = 10;
   */
  usingVarintBitcounts: boolean;
};

/**
 * Describes the message CSVCMsg_CreateStringTable.
 * Use `create(CSVCMsg_CreateStringTableSchema)` to create a new message.
 */
export const CSVCMsg_CreateStringTableSchema: GenMessage<CSVCMsg_CreateStringTable> = /*@__PURE__*/
  messageDesc(file_netmessages, 40);

/**
 * @generated from message CSVCMsg_UpdateStringTable
 */
export type CSVCMsg_UpdateStringTable = Message<"CSVCMsg_UpdateStringTable"> & {
  /**
   * @generated from field: optional int32 table_id = 1;
   */
  tableId: number;

  /**
   * @generated from field: optional int32 num_changed_entries = 2;
   */
  numChangedEntries: number;

  /**
   * @generated from field: optional bytes string_data = 3;
   */
  stringData: Uint8Array;
};

/**
 * Describes the message CSVCMsg_UpdateStringTable.
 * Use `create(CSVCMsg_UpdateStringTableSchema)` to create a new message.
 */
export const CSVCMsg_UpdateStringTableSchema: GenMessage<CSVCMsg_UpdateStringTable> = /*@__PURE__*/
  messageDesc(file_netmessages, 41);

/**
 * @generated from message CSVCMsg_VoiceData
 */
export type CSVCMsg_VoiceData = Message<"CSVCMsg_VoiceData"> & {
  /**
   * @generated from field: optional CMsgVoiceAudio audio = 1;
   */
  audio?: CMsgVoiceAudio;

  /**
   * @generated from field: optional int32 client = 2 [default = -1];
   */
  client: number;

  /**
   * @generated from field: optional bool proximity = 3;
   */
  proximity: boolean;

  /**
   * @generated from field: optional fixed64 xuid = 4;
   */
  xuid: bigint;

  /**
   * @generated from field: optional int32 audible_mask = 5;
   */
  audibleMask: number;

  /**
   * @generated from field: optional uint32 tick = 6;
   */
  tick: number;

  /**
   * @generated from field: optional int32 passthrough = 7;
   */
  passthrough: number;
};

/**
 * Describes the message CSVCMsg_VoiceData.
 * Use `create(CSVCMsg_VoiceDataSchema)` to create a new message.
 */
export const CSVCMsg_VoiceDataSchema: GenMessage<CSVCMsg_VoiceData> = /*@__PURE__*/
  messageDesc(file_netmessages, 42);

/**
 * @generated from message CSVCMsg_PacketReliable
 */
export type CSVCMsg_PacketReliable = Message<"CSVCMsg_PacketReliable"> & {
  /**
   * @generated from field: optional int32 tick = 1;
   */
  tick: number;

  /**
   * @generated from field: optional int32 messagessize = 2;
   */
  messagessize: number;

  /**
   * @generated from field: optional bool state = 3;
   */
  state: boolean;
};

/**
 * Describes the message CSVCMsg_PacketReliable.
 * Use `create(CSVCMsg_PacketReliableSchema)` to create a new message.
 */
export const CSVCMsg_PacketReliableSchema: GenMessage<CSVCMsg_PacketReliable> = /*@__PURE__*/
  messageDesc(file_netmessages, 43);

/**
 * @generated from message CSVCMsg_FullFrameSplit
 */
export type CSVCMsg_FullFrameSplit = Message<"CSVCMsg_FullFrameSplit"> & {
  /**
   * @generated from field: optional int32 tick = 1;
   */
  tick: number;

  /**
   * @generated from field: optional int32 section = 2;
   */
  section: number;

  /**
   * @generated from field: optional int32 total = 3;
   */
  total: number;

  /**
   * @generated from field: optional bytes data = 4;
   */
  data: Uint8Array;
};

/**
 * Describes the message CSVCMsg_FullFrameSplit.
 * Use `create(CSVCMsg_FullFrameSplitSchema)` to create a new message.
 */
export const CSVCMsg_FullFrameSplitSchema: GenMessage<CSVCMsg_FullFrameSplit> = /*@__PURE__*/
  messageDesc(file_netmessages, 44);

/**
 * @generated from message CSVCMsg_HLTVStatus
 */
export type CSVCMsg_HLTVStatus = Message<"CSVCMsg_HLTVStatus"> & {
  /**
   * @generated from field: optional string master = 1;
   */
  master: string;

  /**
   * @generated from field: optional int32 clients = 2;
   */
  clients: number;

  /**
   * @generated from field: optional int32 slots = 3;
   */
  slots: number;

  /**
   * @generated from field: optional int32 proxies = 4;
   */
  proxies: number;
};

/**
 * Describes the message CSVCMsg_HLTVStatus.
 * Use `create(CSVCMsg_HLTVStatusSchema)` to create a new message.
 */
export const CSVCMsg_HLTVStatusSchema: GenMessage<CSVCMsg_HLTVStatus> = /*@__PURE__*/
  messageDesc(file_netmessages, 45);

/**
 * @generated from message CSVCMsg_ServerSteamID
 */
export type CSVCMsg_ServerSteamID = Message<"CSVCMsg_ServerSteamID"> & {
  /**
   * @generated from field: optional uint64 steam_id = 1;
   */
  steamId: bigint;
};

/**
 * Describes the message CSVCMsg_ServerSteamID.
 * Use `create(CSVCMsg_ServerSteamIDSchema)` to create a new message.
 */
export const CSVCMsg_ServerSteamIDSchema: GenMessage<CSVCMsg_ServerSteamID> = /*@__PURE__*/
  messageDesc(file_netmessages, 46);

/**
 * @generated from message CSVCMsg_CmdKeyValues
 */
export type CSVCMsg_CmdKeyValues = Message<"CSVCMsg_CmdKeyValues"> & {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message CSVCMsg_CmdKeyValues.
 * Use `create(CSVCMsg_CmdKeyValuesSchema)` to create a new message.
 */
export const CSVCMsg_CmdKeyValuesSchema: GenMessage<CSVCMsg_CmdKeyValues> = /*@__PURE__*/
  messageDesc(file_netmessages, 47);

/**
 * @generated from message CSVCMsg_RconServerDetails
 */
export type CSVCMsg_RconServerDetails = Message<"CSVCMsg_RconServerDetails"> & {
  /**
   * @generated from field: optional bytes token = 1;
   */
  token: Uint8Array;

  /**
   * @generated from field: optional string details = 2;
   */
  details: string;
};

/**
 * Describes the message CSVCMsg_RconServerDetails.
 * Use `create(CSVCMsg_RconServerDetailsSchema)` to create a new message.
 */
export const CSVCMsg_RconServerDetailsSchema: GenMessage<CSVCMsg_RconServerDetails> = /*@__PURE__*/
  messageDesc(file_netmessages, 48);

/**
 * @generated from message CMsgIPCAddress
 */
export type CMsgIPCAddress = Message<"CMsgIPCAddress"> & {
  /**
   * @generated from field: optional fixed64 computer_guid = 1;
   */
  computerGuid: bigint;

  /**
   * @generated from field: optional uint32 process_id = 2;
   */
  processId: number;
};

/**
 * Describes the message CMsgIPCAddress.
 * Use `create(CMsgIPCAddressSchema)` to create a new message.
 */
export const CMsgIPCAddressSchema: GenMessage<CMsgIPCAddress> = /*@__PURE__*/
  messageDesc(file_netmessages, 49);

/**
 * @generated from message CMsgServerPeer
 */
export type CMsgServerPeer = Message<"CMsgServerPeer"> & {
  /**
   * @generated from field: optional int32 player_slot = 1 [default = -1];
   */
  playerSlot: number;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional CMsgIPCAddress ipc = 3;
   */
  ipc?: CMsgIPCAddress;

  /**
   * @generated from field: optional bool they_hear_you = 4;
   */
  theyHearYou: boolean;

  /**
   * @generated from field: optional bool you_hear_them = 5;
   */
  youHearThem: boolean;

  /**
   * @generated from field: optional bool is_listenserver_host = 6;
   */
  isListenserverHost: boolean;
};

/**
 * Describes the message CMsgServerPeer.
 * Use `create(CMsgServerPeerSchema)` to create a new message.
 */
export const CMsgServerPeerSchema: GenMessage<CMsgServerPeer> = /*@__PURE__*/
  messageDesc(file_netmessages, 50);

/**
 * @generated from message CSVCMsg_PeerList
 */
export type CSVCMsg_PeerList = Message<"CSVCMsg_PeerList"> & {
  /**
   * @generated from field: repeated CMsgServerPeer peer = 1;
   */
  peer: CMsgServerPeer[];
};

/**
 * Describes the message CSVCMsg_PeerList.
 * Use `create(CSVCMsg_PeerListSchema)` to create a new message.
 */
export const CSVCMsg_PeerListSchema: GenMessage<CSVCMsg_PeerList> = /*@__PURE__*/
  messageDesc(file_netmessages, 51);

/**
 * @generated from message CSVCMsg_ClearAllStringTables
 */
export type CSVCMsg_ClearAllStringTables = Message<"CSVCMsg_ClearAllStringTables"> & {
  /**
   * @generated from field: optional string mapname = 1;
   */
  mapname: string;

  /**
   * @generated from field: optional bool create_tables_skipped = 3;
   */
  createTablesSkipped: boolean;
};

/**
 * Describes the message CSVCMsg_ClearAllStringTables.
 * Use `create(CSVCMsg_ClearAllStringTablesSchema)` to create a new message.
 */
export const CSVCMsg_ClearAllStringTablesSchema: GenMessage<CSVCMsg_ClearAllStringTables> = /*@__PURE__*/
  messageDesc(file_netmessages, 52);

/**
 * @generated from message ProtoFlattenedSerializerField_t
 */
export type ProtoFlattenedSerializerField_t = Message<"ProtoFlattenedSerializerField_t"> & {
  /**
   * @generated from field: optional int32 var_type_sym = 1;
   */
  varTypeSym: number;

  /**
   * @generated from field: optional int32 var_name_sym = 2;
   */
  varNameSym: number;

  /**
   * @generated from field: optional int32 bit_count = 3;
   */
  bitCount: number;

  /**
   * @generated from field: optional float low_value = 4;
   */
  lowValue: number;

  /**
   * @generated from field: optional float high_value = 5;
   */
  highValue: number;

  /**
   * @generated from field: optional int32 encode_flags = 6;
   */
  encodeFlags: number;

  /**
   * @generated from field: optional int32 field_serializer_name_sym = 7;
   */
  fieldSerializerNameSym: number;

  /**
   * @generated from field: optional int32 field_serializer_version = 8;
   */
  fieldSerializerVersion: number;

  /**
   * @generated from field: optional int32 send_node_sym = 9;
   */
  sendNodeSym: number;

  /**
   * @generated from field: optional int32 var_encoder_sym = 10;
   */
  varEncoderSym: number;

  /**
   * @generated from field: repeated ProtoFlattenedSerializerField_t.polymorphic_field_t polymorphic_types = 11;
   */
  polymorphicTypes: ProtoFlattenedSerializerField_t_polymorphic_field_t[];

  /**
   * @generated from field: optional int32 var_serializer_sym = 12;
   */
  varSerializerSym: number;
};

/**
 * Describes the message ProtoFlattenedSerializerField_t.
 * Use `create(ProtoFlattenedSerializerField_tSchema)` to create a new message.
 */
export const ProtoFlattenedSerializerField_tSchema: GenMessage<ProtoFlattenedSerializerField_t> = /*@__PURE__*/
  messageDesc(file_netmessages, 53);

/**
 * @generated from message ProtoFlattenedSerializerField_t.polymorphic_field_t
 */
export type ProtoFlattenedSerializerField_t_polymorphic_field_t = Message<"ProtoFlattenedSerializerField_t.polymorphic_field_t"> & {
  /**
   * @generated from field: optional int32 polymorphic_field_serializer_name_sym = 1;
   */
  polymorphicFieldSerializerNameSym: number;

  /**
   * @generated from field: optional int32 polymorphic_field_serializer_version = 2;
   */
  polymorphicFieldSerializerVersion: number;
};

/**
 * Describes the message ProtoFlattenedSerializerField_t.polymorphic_field_t.
 * Use `create(ProtoFlattenedSerializerField_t_polymorphic_field_tSchema)` to create a new message.
 */
export const ProtoFlattenedSerializerField_t_polymorphic_field_tSchema: GenMessage<ProtoFlattenedSerializerField_t_polymorphic_field_t> = /*@__PURE__*/
  messageDesc(file_netmessages, 53, 0);

/**
 * @generated from message ProtoFlattenedSerializer_t
 */
export type ProtoFlattenedSerializer_t = Message<"ProtoFlattenedSerializer_t"> & {
  /**
   * @generated from field: optional int32 serializer_name_sym = 1;
   */
  serializerNameSym: number;

  /**
   * @generated from field: optional int32 serializer_version = 2;
   */
  serializerVersion: number;

  /**
   * @generated from field: repeated int32 fields_index = 3;
   */
  fieldsIndex: number[];
};

/**
 * Describes the message ProtoFlattenedSerializer_t.
 * Use `create(ProtoFlattenedSerializer_tSchema)` to create a new message.
 */
export const ProtoFlattenedSerializer_tSchema: GenMessage<ProtoFlattenedSerializer_t> = /*@__PURE__*/
  messageDesc(file_netmessages, 54);

/**
 * @generated from message CSVCMsg_FlattenedSerializer
 */
export type CSVCMsg_FlattenedSerializer = Message<"CSVCMsg_FlattenedSerializer"> & {
  /**
   * @generated from field: repeated ProtoFlattenedSerializer_t serializers = 1;
   */
  serializers: ProtoFlattenedSerializer_t[];

  /**
   * @generated from field: repeated string symbols = 2;
   */
  symbols: string[];

  /**
   * @generated from field: repeated ProtoFlattenedSerializerField_t fields = 3;
   */
  fields: ProtoFlattenedSerializerField_t[];
};

/**
 * Describes the message CSVCMsg_FlattenedSerializer.
 * Use `create(CSVCMsg_FlattenedSerializerSchema)` to create a new message.
 */
export const CSVCMsg_FlattenedSerializerSchema: GenMessage<CSVCMsg_FlattenedSerializer> = /*@__PURE__*/
  messageDesc(file_netmessages, 55);

/**
 * @generated from message CSVCMsg_StopSound
 */
export type CSVCMsg_StopSound = Message<"CSVCMsg_StopSound"> & {
  /**
   * @generated from field: optional fixed32 guid = 1;
   */
  guid: number;
};

/**
 * Describes the message CSVCMsg_StopSound.
 * Use `create(CSVCMsg_StopSoundSchema)` to create a new message.
 */
export const CSVCMsg_StopSoundSchema: GenMessage<CSVCMsg_StopSound> = /*@__PURE__*/
  messageDesc(file_netmessages, 56);

/**
 * @generated from message CBidirMsg_RebroadcastGameEvent
 */
export type CBidirMsg_RebroadcastGameEvent = Message<"CBidirMsg_RebroadcastGameEvent"> & {
  /**
   * @generated from field: optional bool posttoserver = 1;
   */
  posttoserver: boolean;

  /**
   * @generated from field: optional int32 buftype = 2;
   */
  buftype: number;

  /**
   * @generated from field: optional uint32 clientbitcount = 3;
   */
  clientbitcount: number;

  /**
   * @generated from field: optional uint64 receivingclients = 4;
   */
  receivingclients: bigint;
};

/**
 * Describes the message CBidirMsg_RebroadcastGameEvent.
 * Use `create(CBidirMsg_RebroadcastGameEventSchema)` to create a new message.
 */
export const CBidirMsg_RebroadcastGameEventSchema: GenMessage<CBidirMsg_RebroadcastGameEvent> = /*@__PURE__*/
  messageDesc(file_netmessages, 57);

/**
 * @generated from message CBidirMsg_RebroadcastSource
 */
export type CBidirMsg_RebroadcastSource = Message<"CBidirMsg_RebroadcastSource"> & {
  /**
   * @generated from field: optional int32 eventsource = 1;
   */
  eventsource: number;
};

/**
 * Describes the message CBidirMsg_RebroadcastSource.
 * Use `create(CBidirMsg_RebroadcastSourceSchema)` to create a new message.
 */
export const CBidirMsg_RebroadcastSourceSchema: GenMessage<CBidirMsg_RebroadcastSource> = /*@__PURE__*/
  messageDesc(file_netmessages, 58);

/**
 * @generated from message CMsgServerNetworkStats
 */
export type CMsgServerNetworkStats = Message<"CMsgServerNetworkStats"> & {
  /**
   * @generated from field: optional bool dedicated = 1;
   */
  dedicated: boolean;

  /**
   * @generated from field: optional int32 cpu_usage = 2;
   */
  cpuUsage: number;

  /**
   * @generated from field: optional int32 memory_used_mb = 3;
   */
  memoryUsedMb: number;

  /**
   * @generated from field: optional int32 memory_free_mb = 4;
   */
  memoryFreeMb: number;

  /**
   * @generated from field: optional int32 uptime = 5;
   */
  uptime: number;

  /**
   * @generated from field: optional int32 spawn_count = 6;
   */
  spawnCount: number;

  /**
   * @generated from field: optional int32 num_clients = 8;
   */
  numClients: number;

  /**
   * @generated from field: optional int32 num_bots = 9;
   */
  numBots: number;

  /**
   * @generated from field: optional int32 num_spectators = 10;
   */
  numSpectators: number;

  /**
   * @generated from field: optional int32 num_tv_relays = 11;
   */
  numTvRelays: number;

  /**
   * @generated from field: optional float fps = 12;
   */
  fps: number;

  /**
   * @generated from field: repeated CMsgServerNetworkStats.Port ports = 17;
   */
  ports: CMsgServerNetworkStats_Port[];

  /**
   * @generated from field: optional float avg_ping_ms = 18;
   */
  avgPingMs: number;

  /**
   * @generated from field: optional float avg_engine_latency_out = 19;
   */
  avgEngineLatencyOut: number;

  /**
   * @generated from field: optional float avg_packets_out = 20;
   */
  avgPacketsOut: number;

  /**
   * @generated from field: optional float avg_packets_in = 21;
   */
  avgPacketsIn: number;

  /**
   * @generated from field: optional float avg_loss_out = 22;
   */
  avgLossOut: number;

  /**
   * @generated from field: optional float avg_loss_in = 23;
   */
  avgLossIn: number;

  /**
   * @generated from field: optional float avg_data_out = 24;
   */
  avgDataOut: number;

  /**
   * @generated from field: optional float avg_data_in = 25;
   */
  avgDataIn: number;

  /**
   * @generated from field: optional uint64 total_data_in = 26;
   */
  totalDataIn: bigint;

  /**
   * @generated from field: optional uint64 total_packets_in = 27;
   */
  totalPacketsIn: bigint;

  /**
   * @generated from field: optional uint64 total_data_out = 28;
   */
  totalDataOut: bigint;

  /**
   * @generated from field: optional uint64 total_packets_out = 29;
   */
  totalPacketsOut: bigint;

  /**
   * @generated from field: repeated CMsgServerNetworkStats.Player players = 30;
   */
  players: CMsgServerNetworkStats_Player[];
};

/**
 * Describes the message CMsgServerNetworkStats.
 * Use `create(CMsgServerNetworkStatsSchema)` to create a new message.
 */
export const CMsgServerNetworkStatsSchema: GenMessage<CMsgServerNetworkStats> = /*@__PURE__*/
  messageDesc(file_netmessages, 59);

/**
 * @generated from message CMsgServerNetworkStats.Port
 */
export type CMsgServerNetworkStats_Port = Message<"CMsgServerNetworkStats.Port"> & {
  /**
   * @generated from field: optional int32 port = 1;
   */
  port: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;
};

/**
 * Describes the message CMsgServerNetworkStats.Port.
 * Use `create(CMsgServerNetworkStats_PortSchema)` to create a new message.
 */
export const CMsgServerNetworkStats_PortSchema: GenMessage<CMsgServerNetworkStats_Port> = /*@__PURE__*/
  messageDesc(file_netmessages, 59, 0);

/**
 * @generated from message CMsgServerNetworkStats.Player
 */
export type CMsgServerNetworkStats_Player = Message<"CMsgServerNetworkStats.Player"> & {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string remote_addr = 2;
   */
  remoteAddr: string;

  /**
   * @generated from field: optional int32 ping_avg_ms = 4;
   */
  pingAvgMs: number;

  /**
   * @generated from field: optional float packet_loss_pct = 5;
   */
  packetLossPct: number;

  /**
   * @generated from field: optional bool is_bot = 6;
   */
  isBot: boolean;

  /**
   * @generated from field: optional float loss_in = 7;
   */
  lossIn: number;

  /**
   * @generated from field: optional float loss_out = 8;
   */
  lossOut: number;

  /**
   * @generated from field: optional int32 engine_latency_ms = 9;
   */
  engineLatencyMs: number;
};

/**
 * Describes the message CMsgServerNetworkStats.Player.
 * Use `create(CMsgServerNetworkStats_PlayerSchema)` to create a new message.
 */
export const CMsgServerNetworkStats_PlayerSchema: GenMessage<CMsgServerNetworkStats_Player> = /*@__PURE__*/
  messageDesc(file_netmessages, 59, 1);

/**
 * @generated from message CSVCMsg_HltvReplay
 */
export type CSVCMsg_HltvReplay = Message<"CSVCMsg_HltvReplay"> & {
  /**
   * @generated from field: optional int32 delay = 1;
   */
  delay: number;

  /**
   * @generated from field: optional int32 primary_target = 2 [default = -1];
   */
  primaryTarget: number;

  /**
   * @generated from field: optional int32 replay_stop_at = 3;
   */
  replayStopAt: number;

  /**
   * @generated from field: optional int32 replay_start_at = 4;
   */
  replayStartAt: number;

  /**
   * @generated from field: optional int32 replay_slowdown_begin = 5;
   */
  replaySlowdownBegin: number;

  /**
   * @generated from field: optional int32 replay_slowdown_end = 6;
   */
  replaySlowdownEnd: number;

  /**
   * @generated from field: optional float replay_slowdown_rate = 7;
   */
  replaySlowdownRate: number;

  /**
   * @generated from field: optional int32 reason = 8;
   */
  reason: number;
};

/**
 * Describes the message CSVCMsg_HltvReplay.
 * Use `create(CSVCMsg_HltvReplaySchema)` to create a new message.
 */
export const CSVCMsg_HltvReplaySchema: GenMessage<CSVCMsg_HltvReplay> = /*@__PURE__*/
  messageDesc(file_netmessages, 60);

/**
 * @generated from message CCLCMsg_HltvReplay
 */
export type CCLCMsg_HltvReplay = Message<"CCLCMsg_HltvReplay"> & {
  /**
   * @generated from field: optional int32 request = 1;
   */
  request: number;

  /**
   * @generated from field: optional float slowdown_length = 2;
   */
  slowdownLength: number;

  /**
   * @generated from field: optional float slowdown_rate = 3;
   */
  slowdownRate: number;

  /**
   * @generated from field: optional int32 primary_target = 4 [default = -1];
   */
  primaryTarget: number;

  /**
   * @generated from field: optional float event_time = 5;
   */
  eventTime: number;
};

/**
 * Describes the message CCLCMsg_HltvReplay.
 * Use `create(CCLCMsg_HltvReplaySchema)` to create a new message.
 */
export const CCLCMsg_HltvReplaySchema: GenMessage<CCLCMsg_HltvReplay> = /*@__PURE__*/
  messageDesc(file_netmessages, 61);

/**
 * @generated from message CSVCMsg_Broadcast_Command
 */
export type CSVCMsg_Broadcast_Command = Message<"CSVCMsg_Broadcast_Command"> & {
  /**
   * @generated from field: optional string cmd = 1;
   */
  cmd: string;
};

/**
 * Describes the message CSVCMsg_Broadcast_Command.
 * Use `create(CSVCMsg_Broadcast_CommandSchema)` to create a new message.
 */
export const CSVCMsg_Broadcast_CommandSchema: GenMessage<CSVCMsg_Broadcast_Command> = /*@__PURE__*/
  messageDesc(file_netmessages, 62);

/**
 * @generated from message CCLCMsg_HltvFixupOperatorTick
 */
export type CCLCMsg_HltvFixupOperatorTick = Message<"CCLCMsg_HltvFixupOperatorTick"> & {
  /**
   * @generated from field: optional int32 tick = 1;
   */
  tick: number;

  /**
   * @generated from field: optional bytes props_data = 2;
   */
  propsData: Uint8Array;

  /**
   * @generated from field: optional CMsgVector origin = 3;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle eye_angles = 4;
   */
  eyeAngles?: CMsgQAngle;

  /**
   * @generated from field: optional int32 observer_mode = 5;
   */
  observerMode: number;

  /**
   * @generated from field: optional bool cameraman_scoreboard = 6;
   */
  cameramanScoreboard: boolean;

  /**
   * @generated from field: optional int32 observer_target = 7;
   */
  observerTarget: number;

  /**
   * @generated from field: optional CMsgVector view_offset = 8;
   */
  viewOffset?: CMsgVector;
};

/**
 * Describes the message CCLCMsg_HltvFixupOperatorTick.
 * Use `create(CCLCMsg_HltvFixupOperatorTickSchema)` to create a new message.
 */
export const CCLCMsg_HltvFixupOperatorTickSchema: GenMessage<CCLCMsg_HltvFixupOperatorTick> = /*@__PURE__*/
  messageDesc(file_netmessages, 63);

/**
 * @generated from message CSVCMsg_HltvFixupOperatorStatus
 */
export type CSVCMsg_HltvFixupOperatorStatus = Message<"CSVCMsg_HltvFixupOperatorStatus"> & {
  /**
   * @generated from field: optional uint32 mode = 1;
   */
  mode: number;

  /**
   * @generated from field: optional string override_operator_name = 2;
   */
  overrideOperatorName: string;
};

/**
 * Describes the message CSVCMsg_HltvFixupOperatorStatus.
 * Use `create(CSVCMsg_HltvFixupOperatorStatusSchema)` to create a new message.
 */
export const CSVCMsg_HltvFixupOperatorStatusSchema: GenMessage<CSVCMsg_HltvFixupOperatorStatus> = /*@__PURE__*/
  messageDesc(file_netmessages, 64);

/**
 * @generated from message CMsgServerUserCmd
 */
export type CMsgServerUserCmd = Message<"CMsgServerUserCmd"> & {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data: Uint8Array;

  /**
   * @generated from field: optional int32 cmd_number = 2;
   */
  cmdNumber: number;

  /**
   * @generated from field: optional int32 player_slot = 3 [default = -1];
   */
  playerSlot: number;

  /**
   * @generated from field: optional int32 server_tick_executed = 4;
   */
  serverTickExecuted: number;

  /**
   * @generated from field: optional int32 client_tick = 5;
   */
  clientTick: number;
};

/**
 * Describes the message CMsgServerUserCmd.
 * Use `create(CMsgServerUserCmdSchema)` to create a new message.
 */
export const CMsgServerUserCmdSchema: GenMessage<CMsgServerUserCmd> = /*@__PURE__*/
  messageDesc(file_netmessages, 65);

/**
 * @generated from message CSVCMsg_UserCommands
 */
export type CSVCMsg_UserCommands = Message<"CSVCMsg_UserCommands"> & {
  /**
   * @generated from field: repeated CMsgServerUserCmd commands = 1;
   */
  commands: CMsgServerUserCmd[];
};

/**
 * Describes the message CSVCMsg_UserCommands.
 * Use `create(CSVCMsg_UserCommandsSchema)` to create a new message.
 */
export const CSVCMsg_UserCommandsSchema: GenMessage<CSVCMsg_UserCommands> = /*@__PURE__*/
  messageDesc(file_netmessages, 66);

/**
 * @generated from enum CLC_Messages
 */
export enum CLC_Messages {
  /**
   * @generated from enum value: clc_ClientInfo = 20;
   */
  clc_ClientInfo = 20,

  /**
   * @generated from enum value: clc_Move = 21;
   */
  clc_Move = 21,

  /**
   * @generated from enum value: clc_VoiceData = 22;
   */
  clc_VoiceData = 22,

  /**
   * @generated from enum value: clc_BaselineAck = 23;
   */
  clc_BaselineAck = 23,

  /**
   * @generated from enum value: clc_RespondCvarValue = 25;
   */
  clc_RespondCvarValue = 25,

  /**
   * @generated from enum value: clc_FileCRCCheck = 26;
   */
  clc_FileCRCCheck = 26,

  /**
   * @generated from enum value: clc_LoadingProgress = 27;
   */
  clc_LoadingProgress = 27,

  /**
   * @generated from enum value: clc_SplitPlayerConnect = 28;
   */
  clc_SplitPlayerConnect = 28,

  /**
   * @generated from enum value: clc_SplitPlayerDisconnect = 30;
   */
  clc_SplitPlayerDisconnect = 30,

  /**
   * @generated from enum value: clc_ServerStatus = 31;
   */
  clc_ServerStatus = 31,

  /**
   * @generated from enum value: clc_RequestPause = 33;
   */
  clc_RequestPause = 33,

  /**
   * @generated from enum value: clc_CmdKeyValues = 34;
   */
  clc_CmdKeyValues = 34,

  /**
   * @generated from enum value: clc_RconServerDetails = 35;
   */
  clc_RconServerDetails = 35,

  /**
   * @generated from enum value: clc_HltvReplay = 36;
   */
  clc_HltvReplay = 36,

  /**
   * @generated from enum value: clc_Diagnostic = 37;
   */
  clc_Diagnostic = 37,
}

/**
 * Describes the enum CLC_Messages.
 */
export const CLC_MessagesSchema: GenEnum<CLC_Messages> = /*@__PURE__*/
  enumDesc(file_netmessages, 0);

/**
 * @generated from enum SVC_Messages
 */
export enum SVC_Messages {
  /**
   * @generated from enum value: svc_ServerInfo = 40;
   */
  svc_ServerInfo = 40,

  /**
   * @generated from enum value: svc_FlattenedSerializer = 41;
   */
  svc_FlattenedSerializer = 41,

  /**
   * @generated from enum value: svc_ClassInfo = 42;
   */
  svc_ClassInfo = 42,

  /**
   * @generated from enum value: svc_SetPause = 43;
   */
  svc_SetPause = 43,

  /**
   * @generated from enum value: svc_CreateStringTable = 44;
   */
  svc_CreateStringTable = 44,

  /**
   * @generated from enum value: svc_UpdateStringTable = 45;
   */
  svc_UpdateStringTable = 45,

  /**
   * @generated from enum value: svc_VoiceInit = 46;
   */
  svc_VoiceInit = 46,

  /**
   * @generated from enum value: svc_VoiceData = 47;
   */
  svc_VoiceData = 47,

  /**
   * @generated from enum value: svc_Print = 48;
   */
  svc_Print = 48,

  /**
   * @generated from enum value: svc_Sounds = 49;
   */
  svc_Sounds = 49,

  /**
   * @generated from enum value: svc_SetView = 50;
   */
  svc_SetView = 50,

  /**
   * @generated from enum value: svc_ClearAllStringTables = 51;
   */
  svc_ClearAllStringTables = 51,

  /**
   * @generated from enum value: svc_CmdKeyValues = 52;
   */
  svc_CmdKeyValues = 52,

  /**
   * @generated from enum value: svc_BSPDecal = 53;
   */
  svc_BSPDecal = 53,

  /**
   * @generated from enum value: svc_SplitScreen = 54;
   */
  svc_SplitScreen = 54,

  /**
   * @generated from enum value: svc_PacketEntities = 55;
   */
  svc_PacketEntities = 55,

  /**
   * @generated from enum value: svc_Prefetch = 56;
   */
  svc_Prefetch = 56,

  /**
   * @generated from enum value: svc_Menu = 57;
   */
  svc_Menu = 57,

  /**
   * @generated from enum value: svc_GetCvarValue = 58;
   */
  svc_GetCvarValue = 58,

  /**
   * @generated from enum value: svc_StopSound = 59;
   */
  svc_StopSound = 59,

  /**
   * @generated from enum value: svc_PeerList = 60;
   */
  svc_PeerList = 60,

  /**
   * @generated from enum value: svc_PacketReliable = 61;
   */
  svc_PacketReliable = 61,

  /**
   * @generated from enum value: svc_HLTVStatus = 62;
   */
  svc_HLTVStatus = 62,

  /**
   * @generated from enum value: svc_ServerSteamID = 63;
   */
  svc_ServerSteamID = 63,

  /**
   * @generated from enum value: svc_FullFrameSplit = 70;
   */
  svc_FullFrameSplit = 70,

  /**
   * @generated from enum value: svc_RconServerDetails = 71;
   */
  svc_RconServerDetails = 71,

  /**
   * @generated from enum value: svc_UserMessage = 72;
   */
  svc_UserMessage = 72,

  /**
   * @generated from enum value: svc_Broadcast_Command = 74;
   */
  svc_Broadcast_Command = 74,

  /**
   * @generated from enum value: svc_HltvFixupOperatorStatus = 75;
   */
  svc_HltvFixupOperatorStatus = 75,

  /**
   * @generated from enum value: svc_UserCmds = 76;
   */
  svc_UserCmds = 76,
}

/**
 * Describes the enum SVC_Messages.
 */
export const SVC_MessagesSchema: GenEnum<SVC_Messages> = /*@__PURE__*/
  enumDesc(file_netmessages, 1);

/**
 * @generated from enum VoiceDataFormat_t
 */
export enum VoiceDataFormat_t {
  /**
   * @generated from enum value: VOICEDATA_FORMAT_STEAM = 0;
   */
  VOICEDATA_FORMAT_STEAM = 0,

  /**
   * @generated from enum value: VOICEDATA_FORMAT_ENGINE = 1;
   */
  VOICEDATA_FORMAT_ENGINE = 1,

  /**
   * @generated from enum value: VOICEDATA_FORMAT_OPUS = 2;
   */
  VOICEDATA_FORMAT_OPUS = 2,
}

/**
 * Describes the enum VoiceDataFormat_t.
 */
export const VoiceDataFormat_tSchema: GenEnum<VoiceDataFormat_t> = /*@__PURE__*/
  enumDesc(file_netmessages, 2);

/**
 * @generated from enum RequestPause_t
 */
export enum RequestPause_t {
  /**
   * @generated from enum value: RP_PAUSE = 0;
   */
  RP_PAUSE = 0,

  /**
   * @generated from enum value: RP_UNPAUSE = 1;
   */
  RP_UNPAUSE = 1,

  /**
   * @generated from enum value: RP_TOGGLEPAUSE = 2;
   */
  RP_TOGGLEPAUSE = 2,
}

/**
 * Describes the enum RequestPause_t.
 */
export const RequestPause_tSchema: GenEnum<RequestPause_t> = /*@__PURE__*/
  enumDesc(file_netmessages, 3);

/**
 * @generated from enum PrefetchType
 */
export enum PrefetchType {
  /**
   * @generated from enum value: PFT_SOUND = 0;
   */
  PFT_SOUND = 0,
}

/**
 * Describes the enum PrefetchType.
 */
export const PrefetchTypeSchema: GenEnum<PrefetchType> = /*@__PURE__*/
  enumDesc(file_netmessages, 4);

/**
 * @generated from enum ESplitScreenMessageType
 */
export enum ESplitScreenMessageType {
  /**
   * @generated from enum value: MSG_SPLITSCREEN_ADDUSER = 0;
   */
  MSG_SPLITSCREEN_ADDUSER = 0,

  /**
   * @generated from enum value: MSG_SPLITSCREEN_REMOVEUSER = 1;
   */
  MSG_SPLITSCREEN_REMOVEUSER = 1,
}

/**
 * Describes the enum ESplitScreenMessageType.
 */
export const ESplitScreenMessageTypeSchema: GenEnum<ESplitScreenMessageType> = /*@__PURE__*/
  enumDesc(file_netmessages, 5);

/**
 * @generated from enum EQueryCvarValueStatus
 */
export enum EQueryCvarValueStatus {
  /**
   * @generated from enum value: eQueryCvarValueStatus_ValueIntact = 0;
   */
  eQueryCvarValueStatus_ValueIntact = 0,

  /**
   * @generated from enum value: eQueryCvarValueStatus_CvarNotFound = 1;
   */
  eQueryCvarValueStatus_CvarNotFound = 1,

  /**
   * @generated from enum value: eQueryCvarValueStatus_NotACvar = 2;
   */
  eQueryCvarValueStatus_NotACvar = 2,

  /**
   * @generated from enum value: eQueryCvarValueStatus_CvarProtected = 3;
   */
  eQueryCvarValueStatus_CvarProtected = 3,
}

/**
 * Describes the enum EQueryCvarValueStatus.
 */
export const EQueryCvarValueStatusSchema: GenEnum<EQueryCvarValueStatus> = /*@__PURE__*/
  enumDesc(file_netmessages, 6);

/**
 * @generated from enum DIALOG_TYPE
 */
export enum DIALOG_TYPE {
  /**
   * @generated from enum value: DIALOG_MSG = 0;
   */
  DIALOG_MSG = 0,

  /**
   * @generated from enum value: DIALOG_MENU = 1;
   */
  DIALOG_MENU = 1,

  /**
   * @generated from enum value: DIALOG_TEXT = 2;
   */
  DIALOG_TEXT = 2,

  /**
   * @generated from enum value: DIALOG_ENTRY = 3;
   */
  DIALOG_ENTRY = 3,

  /**
   * @generated from enum value: DIALOG_ASKCONNECT = 4;
   */
  DIALOG_ASKCONNECT = 4,
}

/**
 * Describes the enum DIALOG_TYPE.
 */
export const DIALOG_TYPESchema: GenEnum<DIALOG_TYPE> = /*@__PURE__*/
  enumDesc(file_netmessages, 7);

/**
 * @generated from enum SVC_Messages_LowFrequency
 */
export enum SVC_Messages_LowFrequency {
  /**
   * @generated from enum value: svc_dummy = 600;
   */
  svc_dummy = 600,
}

/**
 * Describes the enum SVC_Messages_LowFrequency.
 */
export const SVC_Messages_LowFrequencySchema: GenEnum<SVC_Messages_LowFrequency> = /*@__PURE__*/
  enumDesc(file_netmessages, 8);

/**
 * @generated from enum Bidirectional_Messages
 */
export enum Bidirectional_Messages {
  /**
   * @generated from enum value: bi_RebroadcastGameEvent = 16;
   */
  bi_RebroadcastGameEvent = 16,

  /**
   * @generated from enum value: bi_RebroadcastSource = 17;
   */
  bi_RebroadcastSource = 17,

  /**
   * @generated from enum value: bi_GameEvent = 18;
   */
  bi_GameEvent = 18,
}

/**
 * Describes the enum Bidirectional_Messages.
 */
export const Bidirectional_MessagesSchema: GenEnum<Bidirectional_Messages> = /*@__PURE__*/
  enumDesc(file_netmessages, 9);

/**
 * @generated from enum Bidirectional_Messages_LowFrequency
 */
export enum Bidirectional_Messages_LowFrequency {
  /**
   * @generated from enum value: bi_RelayInfo = 700;
   */
  bi_RelayInfo = 700,

  /**
   * @generated from enum value: bi_RelayPacket = 701;
   */
  bi_RelayPacket = 701,
}

/**
 * Describes the enum Bidirectional_Messages_LowFrequency.
 */
export const Bidirectional_Messages_LowFrequencySchema: GenEnum<Bidirectional_Messages_LowFrequency> = /*@__PURE__*/
  enumDesc(file_netmessages, 10);

/**
 * @generated from enum ReplayEventType_t
 */
export enum ReplayEventType_t {
  /**
   * @generated from enum value: REPLAY_EVENT_CANCEL = 0;
   */
  REPLAY_EVENT_CANCEL = 0,

  /**
   * @generated from enum value: REPLAY_EVENT_DEATH = 1;
   */
  REPLAY_EVENT_DEATH = 1,

  /**
   * @generated from enum value: REPLAY_EVENT_GENERIC = 2;
   */
  REPLAY_EVENT_GENERIC = 2,

  /**
   * @generated from enum value: REPLAY_EVENT_STUCK_NEED_FULL_UPDATE = 3;
   */
  REPLAY_EVENT_STUCK_NEED_FULL_UPDATE = 3,

  /**
   * @generated from enum value: REPLAY_EVENT_VICTORY = 4;
   */
  REPLAY_EVENT_VICTORY = 4,
}

/**
 * Describes the enum ReplayEventType_t.
 */
export const ReplayEventType_tSchema: GenEnum<ReplayEventType_t> = /*@__PURE__*/
  enumDesc(file_netmessages, 11);


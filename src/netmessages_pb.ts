// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file netmessages.proto (syntax proto2)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";
import { CMsgQAngle, CMsgVector, CSVCMsg_GameSessionConfiguration } from "./networkbasetypes_pb.js";

/**
 * @generated from enum CLC_Messages
 */
export enum CLC_Messages {
  /**
   * @generated from enum value: clc_ClientInfo = 20;
   */
  clc_ClientInfo = 20,

  /**
   * @generated from enum value: clc_Move = 21;
   */
  clc_Move = 21,

  /**
   * @generated from enum value: clc_VoiceData = 22;
   */
  clc_VoiceData = 22,

  /**
   * @generated from enum value: clc_BaselineAck = 23;
   */
  clc_BaselineAck = 23,

  /**
   * @generated from enum value: clc_ListenEvents = 24;
   */
  clc_ListenEvents = 24,

  /**
   * @generated from enum value: clc_RespondCvarValue = 25;
   */
  clc_RespondCvarValue = 25,

  /**
   * @generated from enum value: clc_FileCRCCheck = 26;
   */
  clc_FileCRCCheck = 26,

  /**
   * @generated from enum value: clc_LoadingProgress = 27;
   */
  clc_LoadingProgress = 27,

  /**
   * @generated from enum value: clc_SplitPlayerConnect = 28;
   */
  clc_SplitPlayerConnect = 28,

  /**
   * @generated from enum value: clc_ClientMessage = 29;
   */
  clc_ClientMessage = 29,

  /**
   * @generated from enum value: clc_SplitPlayerDisconnect = 30;
   */
  clc_SplitPlayerDisconnect = 30,

  /**
   * @generated from enum value: clc_ServerStatus = 31;
   */
  clc_ServerStatus = 31,

  /**
   * @generated from enum value: clc_ServerPing = 32;
   */
  clc_ServerPing = 32,

  /**
   * @generated from enum value: clc_RequestPause = 33;
   */
  clc_RequestPause = 33,

  /**
   * @generated from enum value: clc_CmdKeyValues = 34;
   */
  clc_CmdKeyValues = 34,

  /**
   * @generated from enum value: clc_RconServerDetails = 35;
   */
  clc_RconServerDetails = 35,

  /**
   * @generated from enum value: clc_HltvReplay = 36;
   */
  clc_HltvReplay = 36,
}
// Retrieve enum metadata with: proto2.getEnumType(CLC_Messages)
proto2.util.setEnumType(CLC_Messages, "CLC_Messages", [
  { no: 20, name: "clc_ClientInfo" },
  { no: 21, name: "clc_Move" },
  { no: 22, name: "clc_VoiceData" },
  { no: 23, name: "clc_BaselineAck" },
  { no: 24, name: "clc_ListenEvents" },
  { no: 25, name: "clc_RespondCvarValue" },
  { no: 26, name: "clc_FileCRCCheck" },
  { no: 27, name: "clc_LoadingProgress" },
  { no: 28, name: "clc_SplitPlayerConnect" },
  { no: 29, name: "clc_ClientMessage" },
  { no: 30, name: "clc_SplitPlayerDisconnect" },
  { no: 31, name: "clc_ServerStatus" },
  { no: 32, name: "clc_ServerPing" },
  { no: 33, name: "clc_RequestPause" },
  { no: 34, name: "clc_CmdKeyValues" },
  { no: 35, name: "clc_RconServerDetails" },
  { no: 36, name: "clc_HltvReplay" },
]);

/**
 * @generated from enum SVC_Messages
 */
export enum SVC_Messages {
  /**
   * @generated from enum value: svc_ServerInfo = 40;
   */
  svc_ServerInfo = 40,

  /**
   * @generated from enum value: svc_FlattenedSerializer = 41;
   */
  svc_FlattenedSerializer = 41,

  /**
   * @generated from enum value: svc_ClassInfo = 42;
   */
  svc_ClassInfo = 42,

  /**
   * @generated from enum value: svc_SetPause = 43;
   */
  svc_SetPause = 43,

  /**
   * @generated from enum value: svc_CreateStringTable = 44;
   */
  svc_CreateStringTable = 44,

  /**
   * @generated from enum value: svc_UpdateStringTable = 45;
   */
  svc_UpdateStringTable = 45,

  /**
   * @generated from enum value: svc_VoiceInit = 46;
   */
  svc_VoiceInit = 46,

  /**
   * @generated from enum value: svc_VoiceData = 47;
   */
  svc_VoiceData = 47,

  /**
   * @generated from enum value: svc_Print = 48;
   */
  svc_Print = 48,

  /**
   * @generated from enum value: svc_Sounds = 49;
   */
  svc_Sounds = 49,

  /**
   * @generated from enum value: svc_SetView = 50;
   */
  svc_SetView = 50,

  /**
   * @generated from enum value: svc_ClearAllStringTables = 51;
   */
  svc_ClearAllStringTables = 51,

  /**
   * @generated from enum value: svc_CmdKeyValues = 52;
   */
  svc_CmdKeyValues = 52,

  /**
   * @generated from enum value: svc_BSPDecal = 53;
   */
  svc_BSPDecal = 53,

  /**
   * @generated from enum value: svc_SplitScreen = 54;
   */
  svc_SplitScreen = 54,

  /**
   * @generated from enum value: svc_PacketEntities = 55;
   */
  svc_PacketEntities = 55,

  /**
   * @generated from enum value: svc_Prefetch = 56;
   */
  svc_Prefetch = 56,

  /**
   * @generated from enum value: svc_Menu = 57;
   */
  svc_Menu = 57,

  /**
   * @generated from enum value: svc_GetCvarValue = 58;
   */
  svc_GetCvarValue = 58,

  /**
   * @generated from enum value: svc_StopSound = 59;
   */
  svc_StopSound = 59,

  /**
   * @generated from enum value: svc_PeerList = 60;
   */
  svc_PeerList = 60,

  /**
   * @generated from enum value: svc_PacketReliable = 61;
   */
  svc_PacketReliable = 61,

  /**
   * @generated from enum value: svc_HLTVStatus = 62;
   */
  svc_HLTVStatus = 62,

  /**
   * @generated from enum value: svc_ServerSteamID = 63;
   */
  svc_ServerSteamID = 63,

  /**
   * @generated from enum value: svc_FullFrameSplit = 70;
   */
  svc_FullFrameSplit = 70,

  /**
   * @generated from enum value: svc_RconServerDetails = 71;
   */
  svc_RconServerDetails = 71,

  /**
   * @generated from enum value: svc_UserMessage = 72;
   */
  svc_UserMessage = 72,

  /**
   * @generated from enum value: svc_HltvReplay = 73;
   */
  svc_HltvReplay = 73,

  /**
   * @generated from enum value: svc_Broadcast_Command = 74;
   */
  svc_Broadcast_Command = 74,

  /**
   * @generated from enum value: svc_HltvFixupOperatorStatus = 75;
   */
  svc_HltvFixupOperatorStatus = 75,
}
// Retrieve enum metadata with: proto2.getEnumType(SVC_Messages)
proto2.util.setEnumType(SVC_Messages, "SVC_Messages", [
  { no: 40, name: "svc_ServerInfo" },
  { no: 41, name: "svc_FlattenedSerializer" },
  { no: 42, name: "svc_ClassInfo" },
  { no: 43, name: "svc_SetPause" },
  { no: 44, name: "svc_CreateStringTable" },
  { no: 45, name: "svc_UpdateStringTable" },
  { no: 46, name: "svc_VoiceInit" },
  { no: 47, name: "svc_VoiceData" },
  { no: 48, name: "svc_Print" },
  { no: 49, name: "svc_Sounds" },
  { no: 50, name: "svc_SetView" },
  { no: 51, name: "svc_ClearAllStringTables" },
  { no: 52, name: "svc_CmdKeyValues" },
  { no: 53, name: "svc_BSPDecal" },
  { no: 54, name: "svc_SplitScreen" },
  { no: 55, name: "svc_PacketEntities" },
  { no: 56, name: "svc_Prefetch" },
  { no: 57, name: "svc_Menu" },
  { no: 58, name: "svc_GetCvarValue" },
  { no: 59, name: "svc_StopSound" },
  { no: 60, name: "svc_PeerList" },
  { no: 61, name: "svc_PacketReliable" },
  { no: 62, name: "svc_HLTVStatus" },
  { no: 63, name: "svc_ServerSteamID" },
  { no: 70, name: "svc_FullFrameSplit" },
  { no: 71, name: "svc_RconServerDetails" },
  { no: 72, name: "svc_UserMessage" },
  { no: 73, name: "svc_HltvReplay" },
  { no: 74, name: "svc_Broadcast_Command" },
  { no: 75, name: "svc_HltvFixupOperatorStatus" },
]);

/**
 * @generated from enum VoiceDataFormat_t
 */
export enum VoiceDataFormat_t {
  /**
   * @generated from enum value: VOICEDATA_FORMAT_STEAM = 0;
   */
  VOICEDATA_FORMAT_STEAM = 0,

  /**
   * @generated from enum value: VOICEDATA_FORMAT_ENGINE = 1;
   */
  VOICEDATA_FORMAT_ENGINE = 1,

  /**
   * @generated from enum value: VOICEDATA_FORMAT_OPUS = 2;
   */
  VOICEDATA_FORMAT_OPUS = 2,
}
// Retrieve enum metadata with: proto2.getEnumType(VoiceDataFormat_t)
proto2.util.setEnumType(VoiceDataFormat_t, "VoiceDataFormat_t", [
  { no: 0, name: "VOICEDATA_FORMAT_STEAM" },
  { no: 1, name: "VOICEDATA_FORMAT_ENGINE" },
  { no: 2, name: "VOICEDATA_FORMAT_OPUS" },
]);

/**
 * @generated from enum RequestPause_t
 */
export enum RequestPause_t {
  /**
   * @generated from enum value: RP_PAUSE = 0;
   */
  RP_PAUSE = 0,

  /**
   * @generated from enum value: RP_UNPAUSE = 1;
   */
  RP_UNPAUSE = 1,

  /**
   * @generated from enum value: RP_TOGGLEPAUSE = 2;
   */
  RP_TOGGLEPAUSE = 2,
}
// Retrieve enum metadata with: proto2.getEnumType(RequestPause_t)
proto2.util.setEnumType(RequestPause_t, "RequestPause_t", [
  { no: 0, name: "RP_PAUSE" },
  { no: 1, name: "RP_UNPAUSE" },
  { no: 2, name: "RP_TOGGLEPAUSE" },
]);

/**
 * @generated from enum PrefetchType
 */
export enum PrefetchType {
  /**
   * @generated from enum value: PFT_SOUND = 0;
   */
  PFT_SOUND = 0,
}
// Retrieve enum metadata with: proto2.getEnumType(PrefetchType)
proto2.util.setEnumType(PrefetchType, "PrefetchType", [
  { no: 0, name: "PFT_SOUND" },
]);

/**
 * @generated from enum ESplitScreenMessageType
 */
export enum ESplitScreenMessageType {
  /**
   * @generated from enum value: MSG_SPLITSCREEN_ADDUSER = 0;
   */
  MSG_SPLITSCREEN_ADDUSER = 0,

  /**
   * @generated from enum value: MSG_SPLITSCREEN_REMOVEUSER = 1;
   */
  MSG_SPLITSCREEN_REMOVEUSER = 1,
}
// Retrieve enum metadata with: proto2.getEnumType(ESplitScreenMessageType)
proto2.util.setEnumType(ESplitScreenMessageType, "ESplitScreenMessageType", [
  { no: 0, name: "MSG_SPLITSCREEN_ADDUSER" },
  { no: 1, name: "MSG_SPLITSCREEN_REMOVEUSER" },
]);

/**
 * @generated from enum EQueryCvarValueStatus
 */
export enum EQueryCvarValueStatus {
  /**
   * @generated from enum value: eQueryCvarValueStatus_ValueIntact = 0;
   */
  eQueryCvarValueStatus_ValueIntact = 0,

  /**
   * @generated from enum value: eQueryCvarValueStatus_CvarNotFound = 1;
   */
  eQueryCvarValueStatus_CvarNotFound = 1,

  /**
   * @generated from enum value: eQueryCvarValueStatus_NotACvar = 2;
   */
  eQueryCvarValueStatus_NotACvar = 2,

  /**
   * @generated from enum value: eQueryCvarValueStatus_CvarProtected = 3;
   */
  eQueryCvarValueStatus_CvarProtected = 3,
}
// Retrieve enum metadata with: proto2.getEnumType(EQueryCvarValueStatus)
proto2.util.setEnumType(EQueryCvarValueStatus, "EQueryCvarValueStatus", [
  { no: 0, name: "eQueryCvarValueStatus_ValueIntact" },
  { no: 1, name: "eQueryCvarValueStatus_CvarNotFound" },
  { no: 2, name: "eQueryCvarValueStatus_NotACvar" },
  { no: 3, name: "eQueryCvarValueStatus_CvarProtected" },
]);

/**
 * @generated from enum DIALOG_TYPE
 */
export enum DIALOG_TYPE {
  /**
   * @generated from enum value: DIALOG_MSG = 0;
   */
  DIALOG_MSG = 0,

  /**
   * @generated from enum value: DIALOG_MENU = 1;
   */
  DIALOG_MENU = 1,

  /**
   * @generated from enum value: DIALOG_TEXT = 2;
   */
  DIALOG_TEXT = 2,

  /**
   * @generated from enum value: DIALOG_ENTRY = 3;
   */
  DIALOG_ENTRY = 3,

  /**
   * @generated from enum value: DIALOG_ASKCONNECT = 4;
   */
  DIALOG_ASKCONNECT = 4,
}
// Retrieve enum metadata with: proto2.getEnumType(DIALOG_TYPE)
proto2.util.setEnumType(DIALOG_TYPE, "DIALOG_TYPE", [
  { no: 0, name: "DIALOG_MSG" },
  { no: 1, name: "DIALOG_MENU" },
  { no: 2, name: "DIALOG_TEXT" },
  { no: 3, name: "DIALOG_ENTRY" },
  { no: 4, name: "DIALOG_ASKCONNECT" },
]);

/**
 * @generated from enum SVC_Messages_LowFrequency
 */
export enum SVC_Messages_LowFrequency {
  /**
   * @generated from enum value: svc_dummy = 600;
   */
  svc_dummy = 600,
}
// Retrieve enum metadata with: proto2.getEnumType(SVC_Messages_LowFrequency)
proto2.util.setEnumType(SVC_Messages_LowFrequency, "SVC_Messages_LowFrequency", [
  { no: 600, name: "svc_dummy" },
]);

/**
 * @generated from enum Bidirectional_Messages
 */
export enum Bidirectional_Messages {
  /**
   * @generated from enum value: bi_RebroadcastGameEvent = 16;
   */
  bi_RebroadcastGameEvent = 16,

  /**
   * @generated from enum value: bi_RebroadcastSource = 17;
   */
  bi_RebroadcastSource = 17,

  /**
   * @generated from enum value: bi_GameEvent = 18;
   */
  bi_GameEvent = 18,
}
// Retrieve enum metadata with: proto2.getEnumType(Bidirectional_Messages)
proto2.util.setEnumType(Bidirectional_Messages, "Bidirectional_Messages", [
  { no: 16, name: "bi_RebroadcastGameEvent" },
  { no: 17, name: "bi_RebroadcastSource" },
  { no: 18, name: "bi_GameEvent" },
]);

/**
 * @generated from enum Bidirectional_Messages_LowFrequency
 */
export enum Bidirectional_Messages_LowFrequency {
  /**
   * @generated from enum value: bi_RelayInfo = 700;
   */
  bi_RelayInfo = 700,

  /**
   * @generated from enum value: bi_RelayPacket = 701;
   */
  bi_RelayPacket = 701,
}
// Retrieve enum metadata with: proto2.getEnumType(Bidirectional_Messages_LowFrequency)
proto2.util.setEnumType(Bidirectional_Messages_LowFrequency, "Bidirectional_Messages_LowFrequency", [
  { no: 700, name: "bi_RelayInfo" },
  { no: 701, name: "bi_RelayPacket" },
]);

/**
 * @generated from enum ReplayEventType_t
 */
export enum ReplayEventType_t {
  /**
   * @generated from enum value: REPLAY_EVENT_CANCEL = 0;
   */
  REPLAY_EVENT_CANCEL = 0,

  /**
   * @generated from enum value: REPLAY_EVENT_DEATH = 1;
   */
  REPLAY_EVENT_DEATH = 1,

  /**
   * @generated from enum value: REPLAY_EVENT_GENERIC = 2;
   */
  REPLAY_EVENT_GENERIC = 2,

  /**
   * @generated from enum value: REPLAY_EVENT_STUCK_NEED_FULL_UPDATE = 3;
   */
  REPLAY_EVENT_STUCK_NEED_FULL_UPDATE = 3,

  /**
   * @generated from enum value: REPLAY_EVENT_VICTORY = 4;
   */
  REPLAY_EVENT_VICTORY = 4,
}
// Retrieve enum metadata with: proto2.getEnumType(ReplayEventType_t)
proto2.util.setEnumType(ReplayEventType_t, "ReplayEventType_t", [
  { no: 0, name: "REPLAY_EVENT_CANCEL" },
  { no: 1, name: "REPLAY_EVENT_DEATH" },
  { no: 2, name: "REPLAY_EVENT_GENERIC" },
  { no: 3, name: "REPLAY_EVENT_STUCK_NEED_FULL_UPDATE" },
  { no: 4, name: "REPLAY_EVENT_VICTORY" },
]);

/**
 * @generated from message CCLCMsg_ClientInfo
 */
export class CCLCMsg_ClientInfo extends Message<CCLCMsg_ClientInfo> {
  /**
   * @generated from field: optional fixed32 send_table_crc = 1;
   */
  sendTableCrc?: number;

  /**
   * @generated from field: optional uint32 server_count = 2;
   */
  serverCount?: number;

  /**
   * @generated from field: optional bool is_hltv = 3;
   */
  isHltv?: boolean;

  /**
   * @generated from field: optional uint32 friends_id = 5;
   */
  friendsId?: number;

  /**
   * @generated from field: optional string friends_name = 6;
   */
  friendsName?: string;

  constructor(data?: PartialMessage<CCLCMsg_ClientInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_ClientInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "send_table_crc", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "server_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "is_hltv", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "friends_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "friends_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_ClientInfo {
    return new CCLCMsg_ClientInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_ClientInfo {
    return new CCLCMsg_ClientInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_ClientInfo {
    return new CCLCMsg_ClientInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_ClientInfo | PlainMessage<CCLCMsg_ClientInfo> | undefined, b: CCLCMsg_ClientInfo | PlainMessage<CCLCMsg_ClientInfo> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_ClientInfo, a, b);
  }
}

/**
 * @generated from message CCLCMsg_Move
 */
export class CCLCMsg_Move extends Message<CCLCMsg_Move> {
  /**
   * @generated from field: optional bytes data = 3;
   */
  data?: Uint8Array;

  /**
   * @generated from field: optional uint32 command_number = 4;
   */
  commandNumber?: number;

  /**
   * @generated from field: optional uint32 num_commands = 5;
   */
  numCommands?: number;

  constructor(data?: PartialMessage<CCLCMsg_Move>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_Move";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 3, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 4, name: "command_number", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "num_commands", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_Move {
    return new CCLCMsg_Move().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_Move {
    return new CCLCMsg_Move().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_Move {
    return new CCLCMsg_Move().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_Move | PlainMessage<CCLCMsg_Move> | undefined, b: CCLCMsg_Move | PlainMessage<CCLCMsg_Move> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_Move, a, b);
  }
}

/**
 * @generated from message CMsgVoiceAudio
 */
export class CMsgVoiceAudio extends Message<CMsgVoiceAudio> {
  /**
   * @generated from field: optional VoiceDataFormat_t format = 1 [default = VOICEDATA_FORMAT_STEAM];
   */
  format?: VoiceDataFormat_t;

  /**
   * @generated from field: optional bytes voice_data = 2;
   */
  voiceData?: Uint8Array;

  /**
   * @generated from field: optional int32 sequence_bytes = 3;
   */
  sequenceBytes?: number;

  /**
   * @generated from field: optional uint32 section_number = 4;
   */
  sectionNumber?: number;

  /**
   * @generated from field: optional uint32 sample_rate = 5;
   */
  sampleRate?: number;

  /**
   * @generated from field: optional uint32 uncompressed_sample_offset = 6;
   */
  uncompressedSampleOffset?: number;

  /**
   * @generated from field: optional uint32 num_packets = 7;
   */
  numPackets?: number;

  /**
   * @generated from field: repeated uint32 packet_offsets = 8 [packed = true];
   */
  packetOffsets: number[] = [];

  /**
   * @generated from field: optional float voice_level = 9;
   */
  voiceLevel?: number;

  constructor(data?: PartialMessage<CMsgVoiceAudio>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgVoiceAudio";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "format", kind: "enum", T: proto2.getEnumType(VoiceDataFormat_t), opt: true, default: VoiceDataFormat_t.VOICEDATA_FORMAT_STEAM },
    { no: 2, name: "voice_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "sequence_bytes", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "section_number", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "sample_rate", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "uncompressed_sample_offset", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "num_packets", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "packet_offsets", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true, packed: true },
    { no: 9, name: "voice_level", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgVoiceAudio {
    return new CMsgVoiceAudio().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgVoiceAudio {
    return new CMsgVoiceAudio().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgVoiceAudio {
    return new CMsgVoiceAudio().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgVoiceAudio | PlainMessage<CMsgVoiceAudio> | undefined, b: CMsgVoiceAudio | PlainMessage<CMsgVoiceAudio> | undefined): boolean {
    return proto2.util.equals(CMsgVoiceAudio, a, b);
  }
}

/**
 * @generated from message CCLCMsg_VoiceData
 */
export class CCLCMsg_VoiceData extends Message<CCLCMsg_VoiceData> {
  /**
   * @generated from field: optional CMsgVoiceAudio audio = 1;
   */
  audio?: CMsgVoiceAudio;

  /**
   * @generated from field: optional fixed64 xuid = 2;
   */
  xuid?: bigint;

  /**
   * @generated from field: optional uint32 tick = 3;
   */
  tick?: number;

  constructor(data?: PartialMessage<CCLCMsg_VoiceData>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_VoiceData";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "audio", kind: "message", T: CMsgVoiceAudio, opt: true },
    { no: 2, name: "xuid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 3, name: "tick", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_VoiceData {
    return new CCLCMsg_VoiceData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_VoiceData {
    return new CCLCMsg_VoiceData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_VoiceData {
    return new CCLCMsg_VoiceData().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_VoiceData | PlainMessage<CCLCMsg_VoiceData> | undefined, b: CCLCMsg_VoiceData | PlainMessage<CCLCMsg_VoiceData> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_VoiceData, a, b);
  }
}

/**
 * @generated from message CCLCMsg_BaselineAck
 */
export class CCLCMsg_BaselineAck extends Message<CCLCMsg_BaselineAck> {
  /**
   * @generated from field: optional int32 baseline_tick = 1;
   */
  baselineTick?: number;

  /**
   * @generated from field: optional int32 baseline_nr = 2;
   */
  baselineNr?: number;

  constructor(data?: PartialMessage<CCLCMsg_BaselineAck>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_BaselineAck";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "baseline_tick", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "baseline_nr", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_BaselineAck {
    return new CCLCMsg_BaselineAck().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_BaselineAck {
    return new CCLCMsg_BaselineAck().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_BaselineAck {
    return new CCLCMsg_BaselineAck().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_BaselineAck | PlainMessage<CCLCMsg_BaselineAck> | undefined, b: CCLCMsg_BaselineAck | PlainMessage<CCLCMsg_BaselineAck> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_BaselineAck, a, b);
  }
}

/**
 * @generated from message CCLCMsg_ListenEvents
 */
export class CCLCMsg_ListenEvents extends Message<CCLCMsg_ListenEvents> {
  /**
   * @generated from field: repeated fixed32 event_mask = 1;
   */
  eventMask: number[] = [];

  constructor(data?: PartialMessage<CCLCMsg_ListenEvents>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_ListenEvents";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "event_mask", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_ListenEvents {
    return new CCLCMsg_ListenEvents().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_ListenEvents {
    return new CCLCMsg_ListenEvents().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_ListenEvents {
    return new CCLCMsg_ListenEvents().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_ListenEvents | PlainMessage<CCLCMsg_ListenEvents> | undefined, b: CCLCMsg_ListenEvents | PlainMessage<CCLCMsg_ListenEvents> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_ListenEvents, a, b);
  }
}

/**
 * @generated from message CCLCMsg_RespondCvarValue
 */
export class CCLCMsg_RespondCvarValue extends Message<CCLCMsg_RespondCvarValue> {
  /**
   * @generated from field: optional int32 cookie = 1;
   */
  cookie?: number;

  /**
   * @generated from field: optional int32 status_code = 2;
   */
  statusCode?: number;

  /**
   * @generated from field: optional string name = 3;
   */
  name?: string;

  /**
   * @generated from field: optional string value = 4;
   */
  value?: string;

  constructor(data?: PartialMessage<CCLCMsg_RespondCvarValue>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_RespondCvarValue";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "cookie", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "status_code", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_RespondCvarValue {
    return new CCLCMsg_RespondCvarValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_RespondCvarValue {
    return new CCLCMsg_RespondCvarValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_RespondCvarValue {
    return new CCLCMsg_RespondCvarValue().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_RespondCvarValue | PlainMessage<CCLCMsg_RespondCvarValue> | undefined, b: CCLCMsg_RespondCvarValue | PlainMessage<CCLCMsg_RespondCvarValue> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_RespondCvarValue, a, b);
  }
}

/**
 * @generated from message CCLCMsg_FileCRCCheck
 */
export class CCLCMsg_FileCRCCheck extends Message<CCLCMsg_FileCRCCheck> {
  /**
   * @generated from field: optional int32 code_path = 1;
   */
  codePath?: number;

  /**
   * @generated from field: optional string path = 2;
   */
  path?: string;

  /**
   * @generated from field: optional int32 code_filename = 3;
   */
  codeFilename?: number;

  /**
   * @generated from field: optional string filename = 4;
   */
  filename?: string;

  /**
   * @generated from field: optional fixed32 crc = 5;
   */
  crc?: number;

  constructor(data?: PartialMessage<CCLCMsg_FileCRCCheck>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_FileCRCCheck";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "code_path", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "code_filename", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "filename", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "crc", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_FileCRCCheck {
    return new CCLCMsg_FileCRCCheck().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_FileCRCCheck {
    return new CCLCMsg_FileCRCCheck().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_FileCRCCheck {
    return new CCLCMsg_FileCRCCheck().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_FileCRCCheck | PlainMessage<CCLCMsg_FileCRCCheck> | undefined, b: CCLCMsg_FileCRCCheck | PlainMessage<CCLCMsg_FileCRCCheck> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_FileCRCCheck, a, b);
  }
}

/**
 * @generated from message CCLCMsg_LoadingProgress
 */
export class CCLCMsg_LoadingProgress extends Message<CCLCMsg_LoadingProgress> {
  /**
   * @generated from field: optional int32 progress = 1;
   */
  progress?: number;

  constructor(data?: PartialMessage<CCLCMsg_LoadingProgress>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_LoadingProgress";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "progress", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_LoadingProgress {
    return new CCLCMsg_LoadingProgress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_LoadingProgress {
    return new CCLCMsg_LoadingProgress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_LoadingProgress {
    return new CCLCMsg_LoadingProgress().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_LoadingProgress | PlainMessage<CCLCMsg_LoadingProgress> | undefined, b: CCLCMsg_LoadingProgress | PlainMessage<CCLCMsg_LoadingProgress> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_LoadingProgress, a, b);
  }
}

/**
 * @generated from message CCLCMsg_SplitPlayerConnect
 */
export class CCLCMsg_SplitPlayerConnect extends Message<CCLCMsg_SplitPlayerConnect> {
  /**
   * @generated from field: optional string playername = 1;
   */
  playername?: string;

  constructor(data?: PartialMessage<CCLCMsg_SplitPlayerConnect>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_SplitPlayerConnect";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "playername", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_SplitPlayerConnect {
    return new CCLCMsg_SplitPlayerConnect().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_SplitPlayerConnect {
    return new CCLCMsg_SplitPlayerConnect().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_SplitPlayerConnect {
    return new CCLCMsg_SplitPlayerConnect().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_SplitPlayerConnect | PlainMessage<CCLCMsg_SplitPlayerConnect> | undefined, b: CCLCMsg_SplitPlayerConnect | PlainMessage<CCLCMsg_SplitPlayerConnect> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_SplitPlayerConnect, a, b);
  }
}

/**
 * @generated from message CCLCMsg_ClientMessage
 */
export class CCLCMsg_ClientMessage extends Message<CCLCMsg_ClientMessage> {
  /**
   * @generated from field: optional int32 msg_type = 1;
   */
  msgType?: number;

  /**
   * @generated from field: optional bytes data = 2;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CCLCMsg_ClientMessage>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_ClientMessage";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "msg_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_ClientMessage {
    return new CCLCMsg_ClientMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_ClientMessage {
    return new CCLCMsg_ClientMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_ClientMessage {
    return new CCLCMsg_ClientMessage().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_ClientMessage | PlainMessage<CCLCMsg_ClientMessage> | undefined, b: CCLCMsg_ClientMessage | PlainMessage<CCLCMsg_ClientMessage> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_ClientMessage, a, b);
  }
}

/**
 * @generated from message CCLCMsg_SplitPlayerDisconnect
 */
export class CCLCMsg_SplitPlayerDisconnect extends Message<CCLCMsg_SplitPlayerDisconnect> {
  /**
   * @generated from field: optional int32 slot = 1;
   */
  slot?: number;

  constructor(data?: PartialMessage<CCLCMsg_SplitPlayerDisconnect>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_SplitPlayerDisconnect";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_SplitPlayerDisconnect {
    return new CCLCMsg_SplitPlayerDisconnect().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_SplitPlayerDisconnect {
    return new CCLCMsg_SplitPlayerDisconnect().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_SplitPlayerDisconnect {
    return new CCLCMsg_SplitPlayerDisconnect().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_SplitPlayerDisconnect | PlainMessage<CCLCMsg_SplitPlayerDisconnect> | undefined, b: CCLCMsg_SplitPlayerDisconnect | PlainMessage<CCLCMsg_SplitPlayerDisconnect> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_SplitPlayerDisconnect, a, b);
  }
}

/**
 * @generated from message CCLCMsg_ServerStatus
 */
export class CCLCMsg_ServerStatus extends Message<CCLCMsg_ServerStatus> {
  /**
   * @generated from field: optional bool simplified = 1;
   */
  simplified?: boolean;

  constructor(data?: PartialMessage<CCLCMsg_ServerStatus>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_ServerStatus";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "simplified", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_ServerStatus {
    return new CCLCMsg_ServerStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_ServerStatus {
    return new CCLCMsg_ServerStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_ServerStatus {
    return new CCLCMsg_ServerStatus().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_ServerStatus | PlainMessage<CCLCMsg_ServerStatus> | undefined, b: CCLCMsg_ServerStatus | PlainMessage<CCLCMsg_ServerStatus> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_ServerStatus, a, b);
  }
}

/**
 * @generated from message CCLCMsg_RequestPause
 */
export class CCLCMsg_RequestPause extends Message<CCLCMsg_RequestPause> {
  /**
   * @generated from field: optional RequestPause_t pause_type = 1 [default = RP_PAUSE];
   */
  pauseType?: RequestPause_t;

  /**
   * @generated from field: optional int32 pause_group = 2;
   */
  pauseGroup?: number;

  constructor(data?: PartialMessage<CCLCMsg_RequestPause>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_RequestPause";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "pause_type", kind: "enum", T: proto2.getEnumType(RequestPause_t), opt: true, default: RequestPause_t.RP_PAUSE },
    { no: 2, name: "pause_group", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_RequestPause {
    return new CCLCMsg_RequestPause().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_RequestPause {
    return new CCLCMsg_RequestPause().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_RequestPause {
    return new CCLCMsg_RequestPause().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_RequestPause | PlainMessage<CCLCMsg_RequestPause> | undefined, b: CCLCMsg_RequestPause | PlainMessage<CCLCMsg_RequestPause> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_RequestPause, a, b);
  }
}

/**
 * @generated from message CCLCMsg_CmdKeyValues
 */
export class CCLCMsg_CmdKeyValues extends Message<CCLCMsg_CmdKeyValues> {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CCLCMsg_CmdKeyValues>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_CmdKeyValues";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_CmdKeyValues {
    return new CCLCMsg_CmdKeyValues().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_CmdKeyValues {
    return new CCLCMsg_CmdKeyValues().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_CmdKeyValues {
    return new CCLCMsg_CmdKeyValues().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_CmdKeyValues | PlainMessage<CCLCMsg_CmdKeyValues> | undefined, b: CCLCMsg_CmdKeyValues | PlainMessage<CCLCMsg_CmdKeyValues> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_CmdKeyValues, a, b);
  }
}

/**
 * @generated from message CCLCMsg_RconServerDetails
 */
export class CCLCMsg_RconServerDetails extends Message<CCLCMsg_RconServerDetails> {
  /**
   * @generated from field: optional bytes token = 1;
   */
  token?: Uint8Array;

  constructor(data?: PartialMessage<CCLCMsg_RconServerDetails>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_RconServerDetails";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "token", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_RconServerDetails {
    return new CCLCMsg_RconServerDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_RconServerDetails {
    return new CCLCMsg_RconServerDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_RconServerDetails {
    return new CCLCMsg_RconServerDetails().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_RconServerDetails | PlainMessage<CCLCMsg_RconServerDetails> | undefined, b: CCLCMsg_RconServerDetails | PlainMessage<CCLCMsg_RconServerDetails> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_RconServerDetails, a, b);
  }
}

/**
 * @generated from message CSVCMsg_ServerInfo
 */
export class CSVCMsg_ServerInfo extends Message<CSVCMsg_ServerInfo> {
  /**
   * @generated from field: optional int32 protocol = 1;
   */
  protocol?: number;

  /**
   * @generated from field: optional int32 server_count = 2;
   */
  serverCount?: number;

  /**
   * @generated from field: optional bool is_dedicated = 3;
   */
  isDedicated?: boolean;

  /**
   * @generated from field: optional bool is_hltv = 4;
   */
  isHltv?: boolean;

  /**
   * @generated from field: optional int32 c_os = 6;
   */
  cOs?: number;

  /**
   * @generated from field: optional int32 max_clients = 10;
   */
  maxClients?: number;

  /**
   * @generated from field: optional int32 max_classes = 11;
   */
  maxClasses?: number;

  /**
   * @generated from field: optional int32 player_slot = 12 [default = -1];
   */
  playerSlot?: number;

  /**
   * @generated from field: optional float tick_interval = 13;
   */
  tickInterval?: number;

  /**
   * @generated from field: optional string game_dir = 14;
   */
  gameDir?: string;

  /**
   * @generated from field: optional string map_name = 15;
   */
  mapName?: string;

  /**
   * @generated from field: optional string sky_name = 16;
   */
  skyName?: string;

  /**
   * @generated from field: optional string host_name = 17;
   */
  hostName?: string;

  /**
   * @generated from field: optional string addon_name = 18;
   */
  addonName?: string;

  /**
   * @generated from field: optional CSVCMsg_GameSessionConfiguration game_session_config = 19;
   */
  gameSessionConfig?: CSVCMsg_GameSessionConfiguration;

  /**
   * @generated from field: optional bytes game_session_manifest = 20;
   */
  gameSessionManifest?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_ServerInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_ServerInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "protocol", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "server_count", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "is_dedicated", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "is_hltv", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "c_os", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "max_clients", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 11, name: "max_classes", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 12, name: "player_slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 13, name: "tick_interval", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 14, name: "game_dir", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 15, name: "map_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 16, name: "sky_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 17, name: "host_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 18, name: "addon_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 19, name: "game_session_config", kind: "message", T: CSVCMsg_GameSessionConfiguration, opt: true },
    { no: 20, name: "game_session_manifest", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_ServerInfo {
    return new CSVCMsg_ServerInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_ServerInfo {
    return new CSVCMsg_ServerInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_ServerInfo {
    return new CSVCMsg_ServerInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_ServerInfo | PlainMessage<CSVCMsg_ServerInfo> | undefined, b: CSVCMsg_ServerInfo | PlainMessage<CSVCMsg_ServerInfo> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_ServerInfo, a, b);
  }
}

/**
 * @generated from message CSVCMsg_ClassInfo
 */
export class CSVCMsg_ClassInfo extends Message<CSVCMsg_ClassInfo> {
  /**
   * @generated from field: optional bool create_on_client = 1;
   */
  createOnClient?: boolean;

  /**
   * @generated from field: repeated CSVCMsg_ClassInfo.class_t classes = 2;
   */
  classes: CSVCMsg_ClassInfo_class_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_ClassInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_ClassInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "create_on_client", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "classes", kind: "message", T: CSVCMsg_ClassInfo_class_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_ClassInfo {
    return new CSVCMsg_ClassInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_ClassInfo {
    return new CSVCMsg_ClassInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_ClassInfo {
    return new CSVCMsg_ClassInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_ClassInfo | PlainMessage<CSVCMsg_ClassInfo> | undefined, b: CSVCMsg_ClassInfo | PlainMessage<CSVCMsg_ClassInfo> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_ClassInfo, a, b);
  }
}

/**
 * @generated from message CSVCMsg_ClassInfo.class_t
 */
export class CSVCMsg_ClassInfo_class_t extends Message<CSVCMsg_ClassInfo_class_t> {
  /**
   * @generated from field: optional int32 class_id = 1;
   */
  classId?: number;

  /**
   * @generated from field: optional string class_name = 3;
   */
  className?: string;

  constructor(data?: PartialMessage<CSVCMsg_ClassInfo_class_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_ClassInfo.class_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "class_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_ClassInfo_class_t {
    return new CSVCMsg_ClassInfo_class_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_ClassInfo_class_t {
    return new CSVCMsg_ClassInfo_class_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_ClassInfo_class_t {
    return new CSVCMsg_ClassInfo_class_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_ClassInfo_class_t | PlainMessage<CSVCMsg_ClassInfo_class_t> | undefined, b: CSVCMsg_ClassInfo_class_t | PlainMessage<CSVCMsg_ClassInfo_class_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_ClassInfo_class_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_SetPause
 */
export class CSVCMsg_SetPause extends Message<CSVCMsg_SetPause> {
  /**
   * @generated from field: optional bool paused = 1;
   */
  paused?: boolean;

  constructor(data?: PartialMessage<CSVCMsg_SetPause>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_SetPause";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "paused", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_SetPause {
    return new CSVCMsg_SetPause().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_SetPause {
    return new CSVCMsg_SetPause().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_SetPause {
    return new CSVCMsg_SetPause().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_SetPause | PlainMessage<CSVCMsg_SetPause> | undefined, b: CSVCMsg_SetPause | PlainMessage<CSVCMsg_SetPause> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_SetPause, a, b);
  }
}

/**
 * @generated from message CSVCMsg_VoiceInit
 */
export class CSVCMsg_VoiceInit extends Message<CSVCMsg_VoiceInit> {
  /**
   * @generated from field: optional int32 quality = 1;
   */
  quality?: number;

  /**
   * @generated from field: optional string codec = 2;
   */
  codec?: string;

  /**
   * @generated from field: optional int32 version = 3 [default = 0];
   */
  version?: number;

  constructor(data?: PartialMessage<CSVCMsg_VoiceInit>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_VoiceInit";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "quality", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "codec", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "version", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: 0 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_VoiceInit {
    return new CSVCMsg_VoiceInit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_VoiceInit {
    return new CSVCMsg_VoiceInit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_VoiceInit {
    return new CSVCMsg_VoiceInit().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_VoiceInit | PlainMessage<CSVCMsg_VoiceInit> | undefined, b: CSVCMsg_VoiceInit | PlainMessage<CSVCMsg_VoiceInit> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_VoiceInit, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Print
 */
export class CSVCMsg_Print extends Message<CSVCMsg_Print> {
  /**
   * @generated from field: optional string text = 1;
   */
  text?: string;

  constructor(data?: PartialMessage<CSVCMsg_Print>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_Print";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Print {
    return new CSVCMsg_Print().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Print {
    return new CSVCMsg_Print().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Print {
    return new CSVCMsg_Print().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Print | PlainMessage<CSVCMsg_Print> | undefined, b: CSVCMsg_Print | PlainMessage<CSVCMsg_Print> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Print, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Sounds
 */
export class CSVCMsg_Sounds extends Message<CSVCMsg_Sounds> {
  /**
   * @generated from field: optional bool reliable_sound = 1;
   */
  reliableSound?: boolean;

  /**
   * @generated from field: repeated CSVCMsg_Sounds.sounddata_t sounds = 2;
   */
  sounds: CSVCMsg_Sounds_sounddata_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_Sounds>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_Sounds";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "reliable_sound", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "sounds", kind: "message", T: CSVCMsg_Sounds_sounddata_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Sounds {
    return new CSVCMsg_Sounds().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Sounds {
    return new CSVCMsg_Sounds().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Sounds {
    return new CSVCMsg_Sounds().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Sounds | PlainMessage<CSVCMsg_Sounds> | undefined, b: CSVCMsg_Sounds | PlainMessage<CSVCMsg_Sounds> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Sounds, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Sounds.sounddata_t
 */
export class CSVCMsg_Sounds_sounddata_t extends Message<CSVCMsg_Sounds_sounddata_t> {
  /**
   * @generated from field: optional sint32 origin_x = 1;
   */
  originX?: number;

  /**
   * @generated from field: optional sint32 origin_y = 2;
   */
  originY?: number;

  /**
   * @generated from field: optional sint32 origin_z = 3;
   */
  originZ?: number;

  /**
   * @generated from field: optional uint32 volume = 4;
   */
  volume?: number;

  /**
   * @generated from field: optional float delay_value = 5;
   */
  delayValue?: number;

  /**
   * @generated from field: optional int32 sequence_number = 6;
   */
  sequenceNumber?: number;

  /**
   * @generated from field: optional int32 entity_index = 7 [default = -1];
   */
  entityIndex?: number;

  /**
   * @generated from field: optional int32 channel = 8;
   */
  channel?: number;

  /**
   * @generated from field: optional int32 pitch = 9;
   */
  pitch?: number;

  /**
   * @generated from field: optional int32 flags = 10;
   */
  flags?: number;

  /**
   * @generated from field: optional uint32 sound_num = 11;
   */
  soundNum?: number;

  /**
   * @generated from field: optional fixed32 sound_num_handle = 12;
   */
  soundNumHandle?: number;

  /**
   * @generated from field: optional int32 speaker_entity = 13;
   */
  speakerEntity?: number;

  /**
   * @generated from field: optional int32 random_seed = 14;
   */
  randomSeed?: number;

  /**
   * @generated from field: optional int32 sound_level = 15;
   */
  soundLevel?: number;

  /**
   * @generated from field: optional bool is_sentence = 16;
   */
  isSentence?: boolean;

  /**
   * @generated from field: optional bool is_ambient = 17;
   */
  isAmbient?: boolean;

  /**
   * @generated from field: optional uint32 guid = 18;
   */
  guid?: number;

  /**
   * @generated from field: optional fixed64 sound_resource_id = 19;
   */
  soundResourceId?: bigint;

  constructor(data?: PartialMessage<CSVCMsg_Sounds_sounddata_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_Sounds.sounddata_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "origin_x", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true },
    { no: 2, name: "origin_y", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true },
    { no: 3, name: "origin_z", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true },
    { no: 4, name: "volume", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "delay_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 6, name: "sequence_number", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "entity_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 8, name: "channel", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "pitch", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "flags", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 11, name: "sound_num", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 12, name: "sound_num_handle", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 13, name: "speaker_entity", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 14, name: "random_seed", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 15, name: "sound_level", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 16, name: "is_sentence", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 17, name: "is_ambient", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 18, name: "guid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 19, name: "sound_resource_id", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Sounds_sounddata_t {
    return new CSVCMsg_Sounds_sounddata_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Sounds_sounddata_t {
    return new CSVCMsg_Sounds_sounddata_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Sounds_sounddata_t {
    return new CSVCMsg_Sounds_sounddata_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Sounds_sounddata_t | PlainMessage<CSVCMsg_Sounds_sounddata_t> | undefined, b: CSVCMsg_Sounds_sounddata_t | PlainMessage<CSVCMsg_Sounds_sounddata_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Sounds_sounddata_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Prefetch
 */
export class CSVCMsg_Prefetch extends Message<CSVCMsg_Prefetch> {
  /**
   * @generated from field: optional int32 sound_index = 1;
   */
  soundIndex?: number;

  /**
   * @generated from field: optional PrefetchType resource_type = 2 [default = PFT_SOUND];
   */
  resourceType?: PrefetchType;

  constructor(data?: PartialMessage<CSVCMsg_Prefetch>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_Prefetch";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "sound_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "resource_type", kind: "enum", T: proto2.getEnumType(PrefetchType), opt: true, default: PrefetchType.PFT_SOUND },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Prefetch {
    return new CSVCMsg_Prefetch().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Prefetch {
    return new CSVCMsg_Prefetch().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Prefetch {
    return new CSVCMsg_Prefetch().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Prefetch | PlainMessage<CSVCMsg_Prefetch> | undefined, b: CSVCMsg_Prefetch | PlainMessage<CSVCMsg_Prefetch> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Prefetch, a, b);
  }
}

/**
 * @generated from message CSVCMsg_SetView
 */
export class CSVCMsg_SetView extends Message<CSVCMsg_SetView> {
  /**
   * @generated from field: optional int32 entity_index = 1 [default = -1];
   */
  entityIndex?: number;

  /**
   * @generated from field: optional int32 slot = 2 [default = -1];
   */
  slot?: number;

  constructor(data?: PartialMessage<CSVCMsg_SetView>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_SetView";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "entity_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 2, name: "slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_SetView {
    return new CSVCMsg_SetView().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_SetView {
    return new CSVCMsg_SetView().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_SetView {
    return new CSVCMsg_SetView().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_SetView | PlainMessage<CSVCMsg_SetView> | undefined, b: CSVCMsg_SetView | PlainMessage<CSVCMsg_SetView> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_SetView, a, b);
  }
}

/**
 * @generated from message CSVCMsg_FixAngle
 */
export class CSVCMsg_FixAngle extends Message<CSVCMsg_FixAngle> {
  /**
   * @generated from field: optional bool relative = 1;
   */
  relative?: boolean;

  /**
   * @generated from field: optional CMsgQAngle angle = 2;
   */
  angle?: CMsgQAngle;

  constructor(data?: PartialMessage<CSVCMsg_FixAngle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_FixAngle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "relative", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "angle", kind: "message", T: CMsgQAngle, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_FixAngle {
    return new CSVCMsg_FixAngle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_FixAngle {
    return new CSVCMsg_FixAngle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_FixAngle {
    return new CSVCMsg_FixAngle().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_FixAngle | PlainMessage<CSVCMsg_FixAngle> | undefined, b: CSVCMsg_FixAngle | PlainMessage<CSVCMsg_FixAngle> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_FixAngle, a, b);
  }
}

/**
 * @generated from message CSVCMsg_CrosshairAngle
 */
export class CSVCMsg_CrosshairAngle extends Message<CSVCMsg_CrosshairAngle> {
  /**
   * @generated from field: optional CMsgQAngle angle = 1;
   */
  angle?: CMsgQAngle;

  constructor(data?: PartialMessage<CSVCMsg_CrosshairAngle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_CrosshairAngle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "angle", kind: "message", T: CMsgQAngle, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_CrosshairAngle {
    return new CSVCMsg_CrosshairAngle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_CrosshairAngle {
    return new CSVCMsg_CrosshairAngle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_CrosshairAngle {
    return new CSVCMsg_CrosshairAngle().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_CrosshairAngle | PlainMessage<CSVCMsg_CrosshairAngle> | undefined, b: CSVCMsg_CrosshairAngle | PlainMessage<CSVCMsg_CrosshairAngle> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_CrosshairAngle, a, b);
  }
}

/**
 * @generated from message CSVCMsg_BSPDecal
 */
export class CSVCMsg_BSPDecal extends Message<CSVCMsg_BSPDecal> {
  /**
   * @generated from field: optional CMsgVector pos = 1;
   */
  pos?: CMsgVector;

  /**
   * @generated from field: optional int32 decal_texture_index = 2;
   */
  decalTextureIndex?: number;

  /**
   * @generated from field: optional int32 entity_index = 3 [default = -1];
   */
  entityIndex?: number;

  /**
   * @generated from field: optional int32 model_index = 4;
   */
  modelIndex?: number;

  /**
   * @generated from field: optional bool low_priority = 5;
   */
  lowPriority?: boolean;

  constructor(data?: PartialMessage<CSVCMsg_BSPDecal>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_BSPDecal";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "pos", kind: "message", T: CMsgVector, opt: true },
    { no: 2, name: "decal_texture_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "entity_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 4, name: "model_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "low_priority", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_BSPDecal {
    return new CSVCMsg_BSPDecal().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_BSPDecal {
    return new CSVCMsg_BSPDecal().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_BSPDecal {
    return new CSVCMsg_BSPDecal().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_BSPDecal | PlainMessage<CSVCMsg_BSPDecal> | undefined, b: CSVCMsg_BSPDecal | PlainMessage<CSVCMsg_BSPDecal> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_BSPDecal, a, b);
  }
}

/**
 * @generated from message CSVCMsg_SplitScreen
 */
export class CSVCMsg_SplitScreen extends Message<CSVCMsg_SplitScreen> {
  /**
   * @generated from field: optional ESplitScreenMessageType type = 1 [default = MSG_SPLITSCREEN_ADDUSER];
   */
  type?: ESplitScreenMessageType;

  /**
   * @generated from field: optional int32 slot = 2;
   */
  slot?: number;

  /**
   * @generated from field: optional int32 player_index = 3 [default = -1];
   */
  playerIndex?: number;

  constructor(data?: PartialMessage<CSVCMsg_SplitScreen>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_SplitScreen";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto2.getEnumType(ESplitScreenMessageType), opt: true, default: ESplitScreenMessageType.MSG_SPLITSCREEN_ADDUSER },
    { no: 2, name: "slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "player_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_SplitScreen {
    return new CSVCMsg_SplitScreen().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_SplitScreen {
    return new CSVCMsg_SplitScreen().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_SplitScreen {
    return new CSVCMsg_SplitScreen().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_SplitScreen | PlainMessage<CSVCMsg_SplitScreen> | undefined, b: CSVCMsg_SplitScreen | PlainMessage<CSVCMsg_SplitScreen> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_SplitScreen, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GetCvarValue
 */
export class CSVCMsg_GetCvarValue extends Message<CSVCMsg_GetCvarValue> {
  /**
   * @generated from field: optional int32 cookie = 1;
   */
  cookie?: number;

  /**
   * @generated from field: optional string cvar_name = 2;
   */
  cvarName?: string;

  constructor(data?: PartialMessage<CSVCMsg_GetCvarValue>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_GetCvarValue";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "cookie", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "cvar_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GetCvarValue {
    return new CSVCMsg_GetCvarValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GetCvarValue {
    return new CSVCMsg_GetCvarValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GetCvarValue {
    return new CSVCMsg_GetCvarValue().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GetCvarValue | PlainMessage<CSVCMsg_GetCvarValue> | undefined, b: CSVCMsg_GetCvarValue | PlainMessage<CSVCMsg_GetCvarValue> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GetCvarValue, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Menu
 */
export class CSVCMsg_Menu extends Message<CSVCMsg_Menu> {
  /**
   * @generated from field: optional int32 dialog_type = 1;
   */
  dialogType?: number;

  /**
   * @generated from field: optional bytes menu_key_values = 2;
   */
  menuKeyValues?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_Menu>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_Menu";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "dialog_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "menu_key_values", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Menu {
    return new CSVCMsg_Menu().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Menu {
    return new CSVCMsg_Menu().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Menu {
    return new CSVCMsg_Menu().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Menu | PlainMessage<CSVCMsg_Menu> | undefined, b: CSVCMsg_Menu | PlainMessage<CSVCMsg_Menu> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Menu, a, b);
  }
}

/**
 * @generated from message CSVCMsg_UserMessage
 */
export class CSVCMsg_UserMessage extends Message<CSVCMsg_UserMessage> {
  /**
   * @generated from field: optional int32 msg_type = 1;
   */
  msgType?: number;

  /**
   * @generated from field: optional bytes msg_data = 2;
   */
  msgData?: Uint8Array;

  /**
   * @generated from field: optional int32 passthrough = 3;
   */
  passthrough?: number;

  constructor(data?: PartialMessage<CSVCMsg_UserMessage>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_UserMessage";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "msg_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "msg_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "passthrough", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_UserMessage {
    return new CSVCMsg_UserMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_UserMessage {
    return new CSVCMsg_UserMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_UserMessage {
    return new CSVCMsg_UserMessage().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_UserMessage | PlainMessage<CSVCMsg_UserMessage> | undefined, b: CSVCMsg_UserMessage | PlainMessage<CSVCMsg_UserMessage> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_UserMessage, a, b);
  }
}

/**
 * @generated from message CSVCMsg_SendTable
 */
export class CSVCMsg_SendTable extends Message<CSVCMsg_SendTable> {
  /**
   * @generated from field: optional bool is_end = 1;
   */
  isEnd?: boolean;

  /**
   * @generated from field: optional string net_table_name = 2;
   */
  netTableName?: string;

  /**
   * @generated from field: optional bool needs_decoder = 3;
   */
  needsDecoder?: boolean;

  /**
   * @generated from field: repeated CSVCMsg_SendTable.sendprop_t props = 4;
   */
  props: CSVCMsg_SendTable_sendprop_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_SendTable>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_SendTable";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "is_end", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "net_table_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "needs_decoder", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "props", kind: "message", T: CSVCMsg_SendTable_sendprop_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_SendTable {
    return new CSVCMsg_SendTable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_SendTable {
    return new CSVCMsg_SendTable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_SendTable {
    return new CSVCMsg_SendTable().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_SendTable | PlainMessage<CSVCMsg_SendTable> | undefined, b: CSVCMsg_SendTable | PlainMessage<CSVCMsg_SendTable> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_SendTable, a, b);
  }
}

/**
 * @generated from message CSVCMsg_SendTable.sendprop_t
 */
export class CSVCMsg_SendTable_sendprop_t extends Message<CSVCMsg_SendTable_sendprop_t> {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type?: number;

  /**
   * @generated from field: optional string var_name = 2;
   */
  varName?: string;

  /**
   * @generated from field: optional int32 flags = 3;
   */
  flags?: number;

  /**
   * @generated from field: optional int32 priority = 4;
   */
  priority?: number;

  /**
   * @generated from field: optional string dt_name = 5;
   */
  dtName?: string;

  /**
   * @generated from field: optional int32 num_elements = 6;
   */
  numElements?: number;

  /**
   * @generated from field: optional float low_value = 7;
   */
  lowValue?: number;

  /**
   * @generated from field: optional float high_value = 8;
   */
  highValue?: number;

  /**
   * @generated from field: optional int32 num_bits = 9;
   */
  numBits?: number;

  constructor(data?: PartialMessage<CSVCMsg_SendTable_sendprop_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_SendTable.sendprop_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "var_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "flags", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "priority", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "dt_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "num_elements", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "low_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 8, name: "high_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 9, name: "num_bits", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_SendTable_sendprop_t {
    return new CSVCMsg_SendTable_sendprop_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_SendTable_sendprop_t {
    return new CSVCMsg_SendTable_sendprop_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_SendTable_sendprop_t {
    return new CSVCMsg_SendTable_sendprop_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_SendTable_sendprop_t | PlainMessage<CSVCMsg_SendTable_sendprop_t> | undefined, b: CSVCMsg_SendTable_sendprop_t | PlainMessage<CSVCMsg_SendTable_sendprop_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_SendTable_sendprop_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameEventList
 */
export class CSVCMsg_GameEventList extends Message<CSVCMsg_GameEventList> {
  /**
   * @generated from field: repeated CSVCMsg_GameEventList.descriptor_t descriptors = 1;
   */
  descriptors: CSVCMsg_GameEventList_descriptor_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_GameEventList>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_GameEventList";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "descriptors", kind: "message", T: CSVCMsg_GameEventList_descriptor_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameEventList {
    return new CSVCMsg_GameEventList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList {
    return new CSVCMsg_GameEventList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList {
    return new CSVCMsg_GameEventList().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameEventList | PlainMessage<CSVCMsg_GameEventList> | undefined, b: CSVCMsg_GameEventList | PlainMessage<CSVCMsg_GameEventList> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameEventList, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameEventList.key_t
 */
export class CSVCMsg_GameEventList_key_t extends Message<CSVCMsg_GameEventList_key_t> {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type?: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  constructor(data?: PartialMessage<CSVCMsg_GameEventList_key_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_GameEventList.key_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameEventList_key_t {
    return new CSVCMsg_GameEventList_key_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList_key_t {
    return new CSVCMsg_GameEventList_key_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList_key_t {
    return new CSVCMsg_GameEventList_key_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameEventList_key_t | PlainMessage<CSVCMsg_GameEventList_key_t> | undefined, b: CSVCMsg_GameEventList_key_t | PlainMessage<CSVCMsg_GameEventList_key_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameEventList_key_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameEventList.descriptor_t
 */
export class CSVCMsg_GameEventList_descriptor_t extends Message<CSVCMsg_GameEventList_descriptor_t> {
  /**
   * @generated from field: optional int32 eventid = 1;
   */
  eventid?: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: repeated CSVCMsg_GameEventList.key_t keys = 3;
   */
  keys: CSVCMsg_GameEventList_key_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_GameEventList_descriptor_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_GameEventList.descriptor_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "eventid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "keys", kind: "message", T: CSVCMsg_GameEventList_key_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameEventList_descriptor_t {
    return new CSVCMsg_GameEventList_descriptor_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList_descriptor_t {
    return new CSVCMsg_GameEventList_descriptor_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameEventList_descriptor_t {
    return new CSVCMsg_GameEventList_descriptor_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameEventList_descriptor_t | PlainMessage<CSVCMsg_GameEventList_descriptor_t> | undefined, b: CSVCMsg_GameEventList_descriptor_t | PlainMessage<CSVCMsg_GameEventList_descriptor_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameEventList_descriptor_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_PacketEntities
 */
export class CSVCMsg_PacketEntities extends Message<CSVCMsg_PacketEntities> {
  /**
   * @generated from field: optional int32 max_entries = 1;
   */
  maxEntries?: number;

  /**
   * @generated from field: optional int32 updated_entries = 2;
   */
  updatedEntries?: number;

  /**
   * @generated from field: optional bool legacy_is_delta = 3;
   */
  legacyIsDelta?: boolean;

  /**
   * @generated from field: optional bool update_baseline = 4;
   */
  updateBaseline?: boolean;

  /**
   * @generated from field: optional int32 baseline = 5;
   */
  baseline?: number;

  /**
   * @generated from field: optional int32 delta_from = 6;
   */
  deltaFrom?: number;

  /**
   * @generated from field: optional bytes entity_data = 7;
   */
  entityData?: Uint8Array;

  /**
   * @generated from field: optional bool pending_full_frame = 8;
   */
  pendingFullFrame?: boolean;

  /**
   * @generated from field: optional uint32 active_spawngroup_handle = 9;
   */
  activeSpawngroupHandle?: number;

  /**
   * @generated from field: optional uint32 max_spawngroup_creationsequence = 10;
   */
  maxSpawngroupCreationsequence?: number;

  /**
   * @generated from field: optional uint32 last_cmd_number_executed = 11;
   */
  lastCmdNumberExecuted?: number;

  /**
   * @generated from field: optional sint32 last_cmd_number_recv_delta = 17;
   */
  lastCmdNumberRecvDelta?: number;

  /**
   * @generated from field: optional uint32 server_tick = 12;
   */
  serverTick?: number;

  /**
   * @generated from field: optional bytes serialized_entities = 13;
   */
  serializedEntities?: Uint8Array;

  /**
   * @generated from field: optional CSVCMsg_PacketEntities.command_queue_info_t command_queue_info = 14;
   */
  commandQueueInfo?: CSVCMsg_PacketEntities_command_queue_info_t;

  /**
   * @generated from field: repeated CSVCMsg_PacketEntities.alternate_baseline_t alternate_baselines = 15;
   */
  alternateBaselines: CSVCMsg_PacketEntities_alternate_baseline_t[] = [];

  /**
   * @generated from field: optional uint32 has_pvs_vis_bits = 16;
   */
  hasPvsVisBits?: number;

  /**
   * @generated from field: optional uint32 last_cmd_recv_margin = 18;
   */
  lastCmdRecvMargin?: number;

  /**
   * @generated from field: optional CSVCMsg_PacketEntities.non_transmitted_entities_t non_transmitted_entities = 19;
   */
  nonTransmittedEntities?: CSVCMsg_PacketEntities_non_transmitted_entities_t;

  /**
   * @generated from field: optional bytes dev_padding = 999;
   */
  devPadding?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_PacketEntities>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_PacketEntities";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "max_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "updated_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "legacy_is_delta", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "update_baseline", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "baseline", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "delta_from", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "entity_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 8, name: "pending_full_frame", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 9, name: "active_spawngroup_handle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 10, name: "max_spawngroup_creationsequence", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 11, name: "last_cmd_number_executed", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 17, name: "last_cmd_number_recv_delta", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true },
    { no: 12, name: "server_tick", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 13, name: "serialized_entities", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 14, name: "command_queue_info", kind: "message", T: CSVCMsg_PacketEntities_command_queue_info_t, opt: true },
    { no: 15, name: "alternate_baselines", kind: "message", T: CSVCMsg_PacketEntities_alternate_baseline_t, repeated: true },
    { no: 16, name: "has_pvs_vis_bits", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 18, name: "last_cmd_recv_margin", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 19, name: "non_transmitted_entities", kind: "message", T: CSVCMsg_PacketEntities_non_transmitted_entities_t, opt: true },
    { no: 999, name: "dev_padding", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_PacketEntities {
    return new CSVCMsg_PacketEntities().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_PacketEntities {
    return new CSVCMsg_PacketEntities().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_PacketEntities {
    return new CSVCMsg_PacketEntities().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_PacketEntities | PlainMessage<CSVCMsg_PacketEntities> | undefined, b: CSVCMsg_PacketEntities | PlainMessage<CSVCMsg_PacketEntities> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_PacketEntities, a, b);
  }
}

/**
 * @generated from message CSVCMsg_PacketEntities.command_queue_info_t
 */
export class CSVCMsg_PacketEntities_command_queue_info_t extends Message<CSVCMsg_PacketEntities_command_queue_info_t> {
  /**
   * @generated from field: optional uint32 commands_queued = 1;
   */
  commandsQueued?: number;

  /**
   * @generated from field: optional uint32 command_queue_desired_size = 2;
   */
  commandQueueDesiredSize?: number;

  /**
   * @generated from field: optional uint32 starved_command_ticks = 3;
   */
  starvedCommandTicks?: number;

  /**
   * @generated from field: optional float time_dilation_percent = 4;
   */
  timeDilationPercent?: number;

  /**
   * @generated from field: optional uint32 discarded_command_ticks = 5;
   */
  discardedCommandTicks?: number;

  constructor(data?: PartialMessage<CSVCMsg_PacketEntities_command_queue_info_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_PacketEntities.command_queue_info_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "commands_queued", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "command_queue_desired_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "starved_command_ticks", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "time_dilation_percent", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 5, name: "discarded_command_ticks", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_PacketEntities_command_queue_info_t {
    return new CSVCMsg_PacketEntities_command_queue_info_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_PacketEntities_command_queue_info_t {
    return new CSVCMsg_PacketEntities_command_queue_info_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_PacketEntities_command_queue_info_t {
    return new CSVCMsg_PacketEntities_command_queue_info_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_PacketEntities_command_queue_info_t | PlainMessage<CSVCMsg_PacketEntities_command_queue_info_t> | undefined, b: CSVCMsg_PacketEntities_command_queue_info_t | PlainMessage<CSVCMsg_PacketEntities_command_queue_info_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_PacketEntities_command_queue_info_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_PacketEntities.alternate_baseline_t
 */
export class CSVCMsg_PacketEntities_alternate_baseline_t extends Message<CSVCMsg_PacketEntities_alternate_baseline_t> {
  /**
   * @generated from field: optional int32 entity_index = 1;
   */
  entityIndex?: number;

  /**
   * @generated from field: optional int32 baseline_index = 2;
   */
  baselineIndex?: number;

  constructor(data?: PartialMessage<CSVCMsg_PacketEntities_alternate_baseline_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_PacketEntities.alternate_baseline_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "entity_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "baseline_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_PacketEntities_alternate_baseline_t {
    return new CSVCMsg_PacketEntities_alternate_baseline_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_PacketEntities_alternate_baseline_t {
    return new CSVCMsg_PacketEntities_alternate_baseline_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_PacketEntities_alternate_baseline_t {
    return new CSVCMsg_PacketEntities_alternate_baseline_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_PacketEntities_alternate_baseline_t | PlainMessage<CSVCMsg_PacketEntities_alternate_baseline_t> | undefined, b: CSVCMsg_PacketEntities_alternate_baseline_t | PlainMessage<CSVCMsg_PacketEntities_alternate_baseline_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_PacketEntities_alternate_baseline_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_PacketEntities.non_transmitted_entities_t
 */
export class CSVCMsg_PacketEntities_non_transmitted_entities_t extends Message<CSVCMsg_PacketEntities_non_transmitted_entities_t> {
  /**
   * @generated from field: optional int32 header_count = 1;
   */
  headerCount?: number;

  /**
   * @generated from field: optional bytes data = 2;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_PacketEntities_non_transmitted_entities_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_PacketEntities.non_transmitted_entities_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "header_count", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_PacketEntities_non_transmitted_entities_t {
    return new CSVCMsg_PacketEntities_non_transmitted_entities_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_PacketEntities_non_transmitted_entities_t {
    return new CSVCMsg_PacketEntities_non_transmitted_entities_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_PacketEntities_non_transmitted_entities_t {
    return new CSVCMsg_PacketEntities_non_transmitted_entities_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_PacketEntities_non_transmitted_entities_t | PlainMessage<CSVCMsg_PacketEntities_non_transmitted_entities_t> | undefined, b: CSVCMsg_PacketEntities_non_transmitted_entities_t | PlainMessage<CSVCMsg_PacketEntities_non_transmitted_entities_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_PacketEntities_non_transmitted_entities_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_TempEntities
 */
export class CSVCMsg_TempEntities extends Message<CSVCMsg_TempEntities> {
  /**
   * @generated from field: optional bool reliable = 1;
   */
  reliable?: boolean;

  /**
   * @generated from field: optional int32 num_entries = 2;
   */
  numEntries?: number;

  /**
   * @generated from field: optional bytes entity_data = 3;
   */
  entityData?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_TempEntities>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_TempEntities";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "reliable", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "num_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "entity_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_TempEntities {
    return new CSVCMsg_TempEntities().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_TempEntities {
    return new CSVCMsg_TempEntities().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_TempEntities {
    return new CSVCMsg_TempEntities().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_TempEntities | PlainMessage<CSVCMsg_TempEntities> | undefined, b: CSVCMsg_TempEntities | PlainMessage<CSVCMsg_TempEntities> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_TempEntities, a, b);
  }
}

/**
 * @generated from message CSVCMsg_CreateStringTable
 */
export class CSVCMsg_CreateStringTable extends Message<CSVCMsg_CreateStringTable> {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional int32 num_entries = 2;
   */
  numEntries?: number;

  /**
   * @generated from field: optional bool user_data_fixed_size = 3;
   */
  userDataFixedSize?: boolean;

  /**
   * @generated from field: optional int32 user_data_size = 4;
   */
  userDataSize?: number;

  /**
   * @generated from field: optional int32 user_data_size_bits = 5;
   */
  userDataSizeBits?: number;

  /**
   * @generated from field: optional int32 flags = 6;
   */
  flags?: number;

  /**
   * @generated from field: optional bytes string_data = 7;
   */
  stringData?: Uint8Array;

  /**
   * @generated from field: optional int32 uncompressed_size = 8;
   */
  uncompressedSize?: number;

  /**
   * @generated from field: optional bool data_compressed = 9;
   */
  dataCompressed?: boolean;

  /**
   * @generated from field: optional bool using_varint_bitcounts = 10;
   */
  usingVarintBitcounts?: boolean;

  constructor(data?: PartialMessage<CSVCMsg_CreateStringTable>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_CreateStringTable";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "num_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "user_data_fixed_size", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "user_data_size", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "user_data_size_bits", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "flags", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "string_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 8, name: "uncompressed_size", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "data_compressed", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 10, name: "using_varint_bitcounts", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_CreateStringTable {
    return new CSVCMsg_CreateStringTable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_CreateStringTable {
    return new CSVCMsg_CreateStringTable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_CreateStringTable {
    return new CSVCMsg_CreateStringTable().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_CreateStringTable | PlainMessage<CSVCMsg_CreateStringTable> | undefined, b: CSVCMsg_CreateStringTable | PlainMessage<CSVCMsg_CreateStringTable> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_CreateStringTable, a, b);
  }
}

/**
 * @generated from message CSVCMsg_UpdateStringTable
 */
export class CSVCMsg_UpdateStringTable extends Message<CSVCMsg_UpdateStringTable> {
  /**
   * @generated from field: optional int32 table_id = 1;
   */
  tableId?: number;

  /**
   * @generated from field: optional int32 num_changed_entries = 2;
   */
  numChangedEntries?: number;

  /**
   * @generated from field: optional bytes string_data = 3;
   */
  stringData?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_UpdateStringTable>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_UpdateStringTable";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "table_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "num_changed_entries", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "string_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_UpdateStringTable {
    return new CSVCMsg_UpdateStringTable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_UpdateStringTable {
    return new CSVCMsg_UpdateStringTable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_UpdateStringTable {
    return new CSVCMsg_UpdateStringTable().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_UpdateStringTable | PlainMessage<CSVCMsg_UpdateStringTable> | undefined, b: CSVCMsg_UpdateStringTable | PlainMessage<CSVCMsg_UpdateStringTable> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_UpdateStringTable, a, b);
  }
}

/**
 * @generated from message CSVCMsg_VoiceData
 */
export class CSVCMsg_VoiceData extends Message<CSVCMsg_VoiceData> {
  /**
   * @generated from field: optional CMsgVoiceAudio audio = 1;
   */
  audio?: CMsgVoiceAudio;

  /**
   * @generated from field: optional int32 client = 2 [default = -1];
   */
  client?: number;

  /**
   * @generated from field: optional bool proximity = 3;
   */
  proximity?: boolean;

  /**
   * @generated from field: optional fixed64 xuid = 4;
   */
  xuid?: bigint;

  /**
   * @generated from field: optional int32 audible_mask = 5;
   */
  audibleMask?: number;

  /**
   * @generated from field: optional uint32 tick = 6;
   */
  tick?: number;

  /**
   * @generated from field: optional int32 passthrough = 7;
   */
  passthrough?: number;

  constructor(data?: PartialMessage<CSVCMsg_VoiceData>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_VoiceData";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "audio", kind: "message", T: CMsgVoiceAudio, opt: true },
    { no: 2, name: "client", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 3, name: "proximity", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "xuid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 5, name: "audible_mask", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "tick", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "passthrough", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_VoiceData {
    return new CSVCMsg_VoiceData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_VoiceData {
    return new CSVCMsg_VoiceData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_VoiceData {
    return new CSVCMsg_VoiceData().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_VoiceData | PlainMessage<CSVCMsg_VoiceData> | undefined, b: CSVCMsg_VoiceData | PlainMessage<CSVCMsg_VoiceData> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_VoiceData, a, b);
  }
}

/**
 * @generated from message CSVCMsg_PacketReliable
 */
export class CSVCMsg_PacketReliable extends Message<CSVCMsg_PacketReliable> {
  /**
   * @generated from field: optional int32 tick = 1;
   */
  tick?: number;

  /**
   * @generated from field: optional int32 messagessize = 2;
   */
  messagessize?: number;

  /**
   * @generated from field: optional bool state = 3;
   */
  state?: boolean;

  constructor(data?: PartialMessage<CSVCMsg_PacketReliable>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_PacketReliable";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "tick", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "messagessize", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "state", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_PacketReliable {
    return new CSVCMsg_PacketReliable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_PacketReliable {
    return new CSVCMsg_PacketReliable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_PacketReliable {
    return new CSVCMsg_PacketReliable().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_PacketReliable | PlainMessage<CSVCMsg_PacketReliable> | undefined, b: CSVCMsg_PacketReliable | PlainMessage<CSVCMsg_PacketReliable> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_PacketReliable, a, b);
  }
}

/**
 * @generated from message CSVCMsg_FullFrameSplit
 */
export class CSVCMsg_FullFrameSplit extends Message<CSVCMsg_FullFrameSplit> {
  /**
   * @generated from field: optional int32 tick = 1;
   */
  tick?: number;

  /**
   * @generated from field: optional int32 section = 2;
   */
  section?: number;

  /**
   * @generated from field: optional int32 total = 3;
   */
  total?: number;

  /**
   * @generated from field: optional bytes data = 4;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_FullFrameSplit>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_FullFrameSplit";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "tick", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "section", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "total", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_FullFrameSplit {
    return new CSVCMsg_FullFrameSplit().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_FullFrameSplit {
    return new CSVCMsg_FullFrameSplit().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_FullFrameSplit {
    return new CSVCMsg_FullFrameSplit().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_FullFrameSplit | PlainMessage<CSVCMsg_FullFrameSplit> | undefined, b: CSVCMsg_FullFrameSplit | PlainMessage<CSVCMsg_FullFrameSplit> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_FullFrameSplit, a, b);
  }
}

/**
 * @generated from message CSVCMsg_HLTVStatus
 */
export class CSVCMsg_HLTVStatus extends Message<CSVCMsg_HLTVStatus> {
  /**
   * @generated from field: optional string master = 1;
   */
  master?: string;

  /**
   * @generated from field: optional int32 clients = 2;
   */
  clients?: number;

  /**
   * @generated from field: optional int32 slots = 3;
   */
  slots?: number;

  /**
   * @generated from field: optional int32 proxies = 4;
   */
  proxies?: number;

  constructor(data?: PartialMessage<CSVCMsg_HLTVStatus>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_HLTVStatus";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "master", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "clients", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "slots", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "proxies", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_HLTVStatus {
    return new CSVCMsg_HLTVStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_HLTVStatus {
    return new CSVCMsg_HLTVStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_HLTVStatus {
    return new CSVCMsg_HLTVStatus().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_HLTVStatus | PlainMessage<CSVCMsg_HLTVStatus> | undefined, b: CSVCMsg_HLTVStatus | PlainMessage<CSVCMsg_HLTVStatus> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_HLTVStatus, a, b);
  }
}

/**
 * @generated from message CSVCMsg_ServerSteamID
 */
export class CSVCMsg_ServerSteamID extends Message<CSVCMsg_ServerSteamID> {
  /**
   * @generated from field: optional uint64 steam_id = 1;
   */
  steamId?: bigint;

  constructor(data?: PartialMessage<CSVCMsg_ServerSteamID>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_ServerSteamID";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steam_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_ServerSteamID {
    return new CSVCMsg_ServerSteamID().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_ServerSteamID {
    return new CSVCMsg_ServerSteamID().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_ServerSteamID {
    return new CSVCMsg_ServerSteamID().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_ServerSteamID | PlainMessage<CSVCMsg_ServerSteamID> | undefined, b: CSVCMsg_ServerSteamID | PlainMessage<CSVCMsg_ServerSteamID> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_ServerSteamID, a, b);
  }
}

/**
 * @generated from message CSVCMsg_CmdKeyValues
 */
export class CSVCMsg_CmdKeyValues extends Message<CSVCMsg_CmdKeyValues> {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CSVCMsg_CmdKeyValues>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_CmdKeyValues";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_CmdKeyValues {
    return new CSVCMsg_CmdKeyValues().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_CmdKeyValues {
    return new CSVCMsg_CmdKeyValues().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_CmdKeyValues {
    return new CSVCMsg_CmdKeyValues().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_CmdKeyValues | PlainMessage<CSVCMsg_CmdKeyValues> | undefined, b: CSVCMsg_CmdKeyValues | PlainMessage<CSVCMsg_CmdKeyValues> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_CmdKeyValues, a, b);
  }
}

/**
 * @generated from message CSVCMsg_RconServerDetails
 */
export class CSVCMsg_RconServerDetails extends Message<CSVCMsg_RconServerDetails> {
  /**
   * @generated from field: optional bytes token = 1;
   */
  token?: Uint8Array;

  /**
   * @generated from field: optional string details = 2;
   */
  details?: string;

  constructor(data?: PartialMessage<CSVCMsg_RconServerDetails>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_RconServerDetails";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "token", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 2, name: "details", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_RconServerDetails {
    return new CSVCMsg_RconServerDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_RconServerDetails {
    return new CSVCMsg_RconServerDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_RconServerDetails {
    return new CSVCMsg_RconServerDetails().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_RconServerDetails | PlainMessage<CSVCMsg_RconServerDetails> | undefined, b: CSVCMsg_RconServerDetails | PlainMessage<CSVCMsg_RconServerDetails> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_RconServerDetails, a, b);
  }
}

/**
 * @generated from message CMsgIPCAddress
 */
export class CMsgIPCAddress extends Message<CMsgIPCAddress> {
  /**
   * @generated from field: optional fixed64 computer_guid = 1;
   */
  computerGuid?: bigint;

  /**
   * @generated from field: optional uint32 process_id = 2;
   */
  processId?: number;

  constructor(data?: PartialMessage<CMsgIPCAddress>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgIPCAddress";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "computer_guid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "process_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgIPCAddress {
    return new CMsgIPCAddress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgIPCAddress {
    return new CMsgIPCAddress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgIPCAddress {
    return new CMsgIPCAddress().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgIPCAddress | PlainMessage<CMsgIPCAddress> | undefined, b: CMsgIPCAddress | PlainMessage<CMsgIPCAddress> | undefined): boolean {
    return proto2.util.equals(CMsgIPCAddress, a, b);
  }
}

/**
 * @generated from message CMsgServerPeer
 */
export class CMsgServerPeer extends Message<CMsgServerPeer> {
  /**
   * @generated from field: optional int32 player_slot = 1 [default = -1];
   */
  playerSlot?: number;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional CMsgIPCAddress ipc = 3;
   */
  ipc?: CMsgIPCAddress;

  /**
   * @generated from field: optional bool they_hear_you = 4;
   */
  theyHearYou?: boolean;

  /**
   * @generated from field: optional bool you_hear_them = 5;
   */
  youHearThem?: boolean;

  /**
   * @generated from field: optional bool is_listenserver_host = 6;
   */
  isListenserverHost?: boolean;

  constructor(data?: PartialMessage<CMsgServerPeer>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgServerPeer";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "player_slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 2, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 3, name: "ipc", kind: "message", T: CMsgIPCAddress, opt: true },
    { no: 4, name: "they_hear_you", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "you_hear_them", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "is_listenserver_host", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgServerPeer {
    return new CMsgServerPeer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgServerPeer {
    return new CMsgServerPeer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgServerPeer {
    return new CMsgServerPeer().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgServerPeer | PlainMessage<CMsgServerPeer> | undefined, b: CMsgServerPeer | PlainMessage<CMsgServerPeer> | undefined): boolean {
    return proto2.util.equals(CMsgServerPeer, a, b);
  }
}

/**
 * @generated from message CSVCMsg_PeerList
 */
export class CSVCMsg_PeerList extends Message<CSVCMsg_PeerList> {
  /**
   * @generated from field: repeated CMsgServerPeer peer = 1;
   */
  peer: CMsgServerPeer[] = [];

  constructor(data?: PartialMessage<CSVCMsg_PeerList>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_PeerList";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "peer", kind: "message", T: CMsgServerPeer, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_PeerList {
    return new CSVCMsg_PeerList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_PeerList {
    return new CSVCMsg_PeerList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_PeerList {
    return new CSVCMsg_PeerList().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_PeerList | PlainMessage<CSVCMsg_PeerList> | undefined, b: CSVCMsg_PeerList | PlainMessage<CSVCMsg_PeerList> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_PeerList, a, b);
  }
}

/**
 * @generated from message CSVCMsg_ClearAllStringTables
 */
export class CSVCMsg_ClearAllStringTables extends Message<CSVCMsg_ClearAllStringTables> {
  /**
   * @generated from field: optional string mapname = 1;
   */
  mapname?: string;

  /**
   * @generated from field: optional bool create_tables_skipped = 3;
   */
  createTablesSkipped?: boolean;

  constructor(data?: PartialMessage<CSVCMsg_ClearAllStringTables>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_ClearAllStringTables";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "mapname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "create_tables_skipped", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_ClearAllStringTables {
    return new CSVCMsg_ClearAllStringTables().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_ClearAllStringTables {
    return new CSVCMsg_ClearAllStringTables().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_ClearAllStringTables {
    return new CSVCMsg_ClearAllStringTables().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_ClearAllStringTables | PlainMessage<CSVCMsg_ClearAllStringTables> | undefined, b: CSVCMsg_ClearAllStringTables | PlainMessage<CSVCMsg_ClearAllStringTables> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_ClearAllStringTables, a, b);
  }
}

/**
 * @generated from message ProtoFlattenedSerializerField_t
 */
export class ProtoFlattenedSerializerField_t extends Message<ProtoFlattenedSerializerField_t> {
  /**
   * @generated from field: optional int32 var_type_sym = 1;
   */
  varTypeSym?: number;

  /**
   * @generated from field: optional int32 var_name_sym = 2;
   */
  varNameSym?: number;

  /**
   * @generated from field: optional int32 bit_count = 3;
   */
  bitCount?: number;

  /**
   * @generated from field: optional float low_value = 4;
   */
  lowValue?: number;

  /**
   * @generated from field: optional float high_value = 5;
   */
  highValue?: number;

  /**
   * @generated from field: optional int32 encode_flags = 6;
   */
  encodeFlags?: number;

  /**
   * @generated from field: optional int32 field_serializer_name_sym = 7;
   */
  fieldSerializerNameSym?: number;

  /**
   * @generated from field: optional int32 field_serializer_version = 8;
   */
  fieldSerializerVersion?: number;

  /**
   * @generated from field: optional int32 send_node_sym = 9;
   */
  sendNodeSym?: number;

  /**
   * @generated from field: optional int32 var_encoder_sym = 10;
   */
  varEncoderSym?: number;

  /**
   * @generated from field: repeated ProtoFlattenedSerializerField_t.polymorphic_field_t polymorphic_types = 11;
   */
  polymorphicTypes: ProtoFlattenedSerializerField_t_polymorphic_field_t[] = [];

  /**
   * @generated from field: optional int32 var_serializer_sym = 12;
   */
  varSerializerSym?: number;

  constructor(data?: PartialMessage<ProtoFlattenedSerializerField_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "ProtoFlattenedSerializerField_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "var_type_sym", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "var_name_sym", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "bit_count", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "low_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 5, name: "high_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 6, name: "encode_flags", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "field_serializer_name_sym", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "field_serializer_version", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "send_node_sym", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "var_encoder_sym", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 11, name: "polymorphic_types", kind: "message", T: ProtoFlattenedSerializerField_t_polymorphic_field_t, repeated: true },
    { no: 12, name: "var_serializer_sym", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoFlattenedSerializerField_t {
    return new ProtoFlattenedSerializerField_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoFlattenedSerializerField_t {
    return new ProtoFlattenedSerializerField_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoFlattenedSerializerField_t {
    return new ProtoFlattenedSerializerField_t().fromJsonString(jsonString, options);
  }

  static equals(a: ProtoFlattenedSerializerField_t | PlainMessage<ProtoFlattenedSerializerField_t> | undefined, b: ProtoFlattenedSerializerField_t | PlainMessage<ProtoFlattenedSerializerField_t> | undefined): boolean {
    return proto2.util.equals(ProtoFlattenedSerializerField_t, a, b);
  }
}

/**
 * @generated from message ProtoFlattenedSerializerField_t.polymorphic_field_t
 */
export class ProtoFlattenedSerializerField_t_polymorphic_field_t extends Message<ProtoFlattenedSerializerField_t_polymorphic_field_t> {
  /**
   * @generated from field: optional int32 polymorphic_field_serializer_name_sym = 1;
   */
  polymorphicFieldSerializerNameSym?: number;

  /**
   * @generated from field: optional int32 polymorphic_field_serializer_version = 2;
   */
  polymorphicFieldSerializerVersion?: number;

  constructor(data?: PartialMessage<ProtoFlattenedSerializerField_t_polymorphic_field_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "ProtoFlattenedSerializerField_t.polymorphic_field_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "polymorphic_field_serializer_name_sym", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "polymorphic_field_serializer_version", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoFlattenedSerializerField_t_polymorphic_field_t {
    return new ProtoFlattenedSerializerField_t_polymorphic_field_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoFlattenedSerializerField_t_polymorphic_field_t {
    return new ProtoFlattenedSerializerField_t_polymorphic_field_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoFlattenedSerializerField_t_polymorphic_field_t {
    return new ProtoFlattenedSerializerField_t_polymorphic_field_t().fromJsonString(jsonString, options);
  }

  static equals(a: ProtoFlattenedSerializerField_t_polymorphic_field_t | PlainMessage<ProtoFlattenedSerializerField_t_polymorphic_field_t> | undefined, b: ProtoFlattenedSerializerField_t_polymorphic_field_t | PlainMessage<ProtoFlattenedSerializerField_t_polymorphic_field_t> | undefined): boolean {
    return proto2.util.equals(ProtoFlattenedSerializerField_t_polymorphic_field_t, a, b);
  }
}

/**
 * @generated from message ProtoFlattenedSerializer_t
 */
export class ProtoFlattenedSerializer_t extends Message<ProtoFlattenedSerializer_t> {
  /**
   * @generated from field: optional int32 serializer_name_sym = 1;
   */
  serializerNameSym?: number;

  /**
   * @generated from field: optional int32 serializer_version = 2;
   */
  serializerVersion?: number;

  /**
   * @generated from field: repeated int32 fields_index = 3;
   */
  fieldsIndex: number[] = [];

  constructor(data?: PartialMessage<ProtoFlattenedSerializer_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "ProtoFlattenedSerializer_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "serializer_name_sym", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "serializer_version", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "fields_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoFlattenedSerializer_t {
    return new ProtoFlattenedSerializer_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoFlattenedSerializer_t {
    return new ProtoFlattenedSerializer_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoFlattenedSerializer_t {
    return new ProtoFlattenedSerializer_t().fromJsonString(jsonString, options);
  }

  static equals(a: ProtoFlattenedSerializer_t | PlainMessage<ProtoFlattenedSerializer_t> | undefined, b: ProtoFlattenedSerializer_t | PlainMessage<ProtoFlattenedSerializer_t> | undefined): boolean {
    return proto2.util.equals(ProtoFlattenedSerializer_t, a, b);
  }
}

/**
 * @generated from message CSVCMsg_FlattenedSerializer
 */
export class CSVCMsg_FlattenedSerializer extends Message<CSVCMsg_FlattenedSerializer> {
  /**
   * @generated from field: repeated ProtoFlattenedSerializer_t serializers = 1;
   */
  serializers: ProtoFlattenedSerializer_t[] = [];

  /**
   * @generated from field: repeated string symbols = 2;
   */
  symbols: string[] = [];

  /**
   * @generated from field: repeated ProtoFlattenedSerializerField_t fields = 3;
   */
  fields: ProtoFlattenedSerializerField_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_FlattenedSerializer>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_FlattenedSerializer";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "serializers", kind: "message", T: ProtoFlattenedSerializer_t, repeated: true },
    { no: 2, name: "symbols", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "fields", kind: "message", T: ProtoFlattenedSerializerField_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_FlattenedSerializer {
    return new CSVCMsg_FlattenedSerializer().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_FlattenedSerializer {
    return new CSVCMsg_FlattenedSerializer().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_FlattenedSerializer {
    return new CSVCMsg_FlattenedSerializer().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_FlattenedSerializer | PlainMessage<CSVCMsg_FlattenedSerializer> | undefined, b: CSVCMsg_FlattenedSerializer | PlainMessage<CSVCMsg_FlattenedSerializer> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_FlattenedSerializer, a, b);
  }
}

/**
 * @generated from message CSVCMsg_StopSound
 */
export class CSVCMsg_StopSound extends Message<CSVCMsg_StopSound> {
  /**
   * @generated from field: optional fixed32 guid = 1;
   */
  guid?: number;

  constructor(data?: PartialMessage<CSVCMsg_StopSound>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_StopSound";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "guid", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_StopSound {
    return new CSVCMsg_StopSound().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_StopSound {
    return new CSVCMsg_StopSound().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_StopSound {
    return new CSVCMsg_StopSound().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_StopSound | PlainMessage<CSVCMsg_StopSound> | undefined, b: CSVCMsg_StopSound | PlainMessage<CSVCMsg_StopSound> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_StopSound, a, b);
  }
}

/**
 * @generated from message CBidirMsg_RebroadcastGameEvent
 */
export class CBidirMsg_RebroadcastGameEvent extends Message<CBidirMsg_RebroadcastGameEvent> {
  /**
   * @generated from field: optional bool posttoserver = 1;
   */
  posttoserver?: boolean;

  /**
   * @generated from field: optional int32 buftype = 2;
   */
  buftype?: number;

  /**
   * @generated from field: optional uint32 clientbitcount = 3;
   */
  clientbitcount?: number;

  /**
   * @generated from field: optional uint64 receivingclients = 4;
   */
  receivingclients?: bigint;

  constructor(data?: PartialMessage<CBidirMsg_RebroadcastGameEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CBidirMsg_RebroadcastGameEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "posttoserver", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "buftype", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "clientbitcount", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "receivingclients", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CBidirMsg_RebroadcastGameEvent {
    return new CBidirMsg_RebroadcastGameEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CBidirMsg_RebroadcastGameEvent {
    return new CBidirMsg_RebroadcastGameEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CBidirMsg_RebroadcastGameEvent {
    return new CBidirMsg_RebroadcastGameEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CBidirMsg_RebroadcastGameEvent | PlainMessage<CBidirMsg_RebroadcastGameEvent> | undefined, b: CBidirMsg_RebroadcastGameEvent | PlainMessage<CBidirMsg_RebroadcastGameEvent> | undefined): boolean {
    return proto2.util.equals(CBidirMsg_RebroadcastGameEvent, a, b);
  }
}

/**
 * @generated from message CBidirMsg_RebroadcastSource
 */
export class CBidirMsg_RebroadcastSource extends Message<CBidirMsg_RebroadcastSource> {
  /**
   * @generated from field: optional int32 eventsource = 1;
   */
  eventsource?: number;

  constructor(data?: PartialMessage<CBidirMsg_RebroadcastSource>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CBidirMsg_RebroadcastSource";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "eventsource", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CBidirMsg_RebroadcastSource {
    return new CBidirMsg_RebroadcastSource().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CBidirMsg_RebroadcastSource {
    return new CBidirMsg_RebroadcastSource().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CBidirMsg_RebroadcastSource {
    return new CBidirMsg_RebroadcastSource().fromJsonString(jsonString, options);
  }

  static equals(a: CBidirMsg_RebroadcastSource | PlainMessage<CBidirMsg_RebroadcastSource> | undefined, b: CBidirMsg_RebroadcastSource | PlainMessage<CBidirMsg_RebroadcastSource> | undefined): boolean {
    return proto2.util.equals(CBidirMsg_RebroadcastSource, a, b);
  }
}

/**
 * @generated from message CMsgServerNetworkStats
 */
export class CMsgServerNetworkStats extends Message<CMsgServerNetworkStats> {
  /**
   * @generated from field: optional bool dedicated = 1;
   */
  dedicated?: boolean;

  /**
   * @generated from field: optional int32 cpu_usage = 2;
   */
  cpuUsage?: number;

  /**
   * @generated from field: optional int32 memory_used_mb = 3;
   */
  memoryUsedMb?: number;

  /**
   * @generated from field: optional int32 memory_free_mb = 4;
   */
  memoryFreeMb?: number;

  /**
   * @generated from field: optional int32 uptime = 5;
   */
  uptime?: number;

  /**
   * @generated from field: optional int32 spawn_count = 6;
   */
  spawnCount?: number;

  /**
   * @generated from field: optional int32 num_clients = 8;
   */
  numClients?: number;

  /**
   * @generated from field: optional int32 num_bots = 9;
   */
  numBots?: number;

  /**
   * @generated from field: optional int32 num_spectators = 10;
   */
  numSpectators?: number;

  /**
   * @generated from field: optional int32 num_tv_relays = 11;
   */
  numTvRelays?: number;

  /**
   * @generated from field: optional float fps = 12;
   */
  fps?: number;

  /**
   * @generated from field: repeated CMsgServerNetworkStats.Port ports = 17;
   */
  ports: CMsgServerNetworkStats_Port[] = [];

  /**
   * @generated from field: optional float avg_ping_ms = 18;
   */
  avgPingMs?: number;

  /**
   * @generated from field: optional float avg_engine_latency_out = 19;
   */
  avgEngineLatencyOut?: number;

  /**
   * @generated from field: optional float avg_packets_out = 20;
   */
  avgPacketsOut?: number;

  /**
   * @generated from field: optional float avg_packets_in = 21;
   */
  avgPacketsIn?: number;

  /**
   * @generated from field: optional float avg_loss_out = 22;
   */
  avgLossOut?: number;

  /**
   * @generated from field: optional float avg_loss_in = 23;
   */
  avgLossIn?: number;

  /**
   * @generated from field: optional float avg_data_out = 24;
   */
  avgDataOut?: number;

  /**
   * @generated from field: optional float avg_data_in = 25;
   */
  avgDataIn?: number;

  /**
   * @generated from field: optional uint64 total_data_in = 26;
   */
  totalDataIn?: bigint;

  /**
   * @generated from field: optional uint64 total_packets_in = 27;
   */
  totalPacketsIn?: bigint;

  /**
   * @generated from field: optional uint64 total_data_out = 28;
   */
  totalDataOut?: bigint;

  /**
   * @generated from field: optional uint64 total_packets_out = 29;
   */
  totalPacketsOut?: bigint;

  /**
   * @generated from field: repeated CMsgServerNetworkStats.Player players = 30;
   */
  players: CMsgServerNetworkStats_Player[] = [];

  constructor(data?: PartialMessage<CMsgServerNetworkStats>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgServerNetworkStats";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "dedicated", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "cpu_usage", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "memory_used_mb", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "memory_free_mb", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "uptime", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "spawn_count", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "num_clients", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "num_bots", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "num_spectators", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 11, name: "num_tv_relays", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 12, name: "fps", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 17, name: "ports", kind: "message", T: CMsgServerNetworkStats_Port, repeated: true },
    { no: 18, name: "avg_ping_ms", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 19, name: "avg_engine_latency_out", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 20, name: "avg_packets_out", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 21, name: "avg_packets_in", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 22, name: "avg_loss_out", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 23, name: "avg_loss_in", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 24, name: "avg_data_out", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 25, name: "avg_data_in", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 26, name: "total_data_in", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 27, name: "total_packets_in", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 28, name: "total_data_out", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 29, name: "total_packets_out", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 30, name: "players", kind: "message", T: CMsgServerNetworkStats_Player, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgServerNetworkStats {
    return new CMsgServerNetworkStats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgServerNetworkStats {
    return new CMsgServerNetworkStats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgServerNetworkStats {
    return new CMsgServerNetworkStats().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgServerNetworkStats | PlainMessage<CMsgServerNetworkStats> | undefined, b: CMsgServerNetworkStats | PlainMessage<CMsgServerNetworkStats> | undefined): boolean {
    return proto2.util.equals(CMsgServerNetworkStats, a, b);
  }
}

/**
 * @generated from message CMsgServerNetworkStats.Port
 */
export class CMsgServerNetworkStats_Port extends Message<CMsgServerNetworkStats_Port> {
  /**
   * @generated from field: optional int32 port = 1;
   */
  port?: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  constructor(data?: PartialMessage<CMsgServerNetworkStats_Port>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgServerNetworkStats.Port";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "port", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgServerNetworkStats_Port {
    return new CMsgServerNetworkStats_Port().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgServerNetworkStats_Port {
    return new CMsgServerNetworkStats_Port().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgServerNetworkStats_Port {
    return new CMsgServerNetworkStats_Port().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgServerNetworkStats_Port | PlainMessage<CMsgServerNetworkStats_Port> | undefined, b: CMsgServerNetworkStats_Port | PlainMessage<CMsgServerNetworkStats_Port> | undefined): boolean {
    return proto2.util.equals(CMsgServerNetworkStats_Port, a, b);
  }
}

/**
 * @generated from message CMsgServerNetworkStats.Player
 */
export class CMsgServerNetworkStats_Player extends Message<CMsgServerNetworkStats_Player> {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional string remote_addr = 2;
   */
  remoteAddr?: string;

  /**
   * @generated from field: optional int32 ping_avg_ms = 4;
   */
  pingAvgMs?: number;

  /**
   * @generated from field: optional float packet_loss_pct = 5;
   */
  packetLossPct?: number;

  /**
   * @generated from field: optional bool is_bot = 6;
   */
  isBot?: boolean;

  /**
   * @generated from field: optional float loss_in = 7;
   */
  lossIn?: number;

  /**
   * @generated from field: optional float loss_out = 8;
   */
  lossOut?: number;

  /**
   * @generated from field: optional int32 engine_latency_ms = 9;
   */
  engineLatencyMs?: number;

  constructor(data?: PartialMessage<CMsgServerNetworkStats_Player>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgServerNetworkStats.Player";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "steamid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "remote_addr", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "ping_avg_ms", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "packet_loss_pct", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 6, name: "is_bot", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "loss_in", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 8, name: "loss_out", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 9, name: "engine_latency_ms", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgServerNetworkStats_Player {
    return new CMsgServerNetworkStats_Player().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgServerNetworkStats_Player {
    return new CMsgServerNetworkStats_Player().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgServerNetworkStats_Player {
    return new CMsgServerNetworkStats_Player().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgServerNetworkStats_Player | PlainMessage<CMsgServerNetworkStats_Player> | undefined, b: CMsgServerNetworkStats_Player | PlainMessage<CMsgServerNetworkStats_Player> | undefined): boolean {
    return proto2.util.equals(CMsgServerNetworkStats_Player, a, b);
  }
}

/**
 * @generated from message CSVCMsg_HltvReplay
 */
export class CSVCMsg_HltvReplay extends Message<CSVCMsg_HltvReplay> {
  /**
   * @generated from field: optional int32 delay = 1;
   */
  delay?: number;

  /**
   * @generated from field: optional int32 primary_target = 2 [default = -1];
   */
  primaryTarget?: number;

  /**
   * @generated from field: optional int32 replay_stop_at = 3;
   */
  replayStopAt?: number;

  /**
   * @generated from field: optional int32 replay_start_at = 4;
   */
  replayStartAt?: number;

  /**
   * @generated from field: optional int32 replay_slowdown_begin = 5;
   */
  replaySlowdownBegin?: number;

  /**
   * @generated from field: optional int32 replay_slowdown_end = 6;
   */
  replaySlowdownEnd?: number;

  /**
   * @generated from field: optional float replay_slowdown_rate = 7;
   */
  replaySlowdownRate?: number;

  /**
   * @generated from field: optional int32 reason = 8;
   */
  reason?: number;

  constructor(data?: PartialMessage<CSVCMsg_HltvReplay>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_HltvReplay";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "delay", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "primary_target", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 3, name: "replay_stop_at", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "replay_start_at", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "replay_slowdown_begin", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "replay_slowdown_end", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "replay_slowdown_rate", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 8, name: "reason", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_HltvReplay {
    return new CSVCMsg_HltvReplay().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_HltvReplay {
    return new CSVCMsg_HltvReplay().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_HltvReplay {
    return new CSVCMsg_HltvReplay().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_HltvReplay | PlainMessage<CSVCMsg_HltvReplay> | undefined, b: CSVCMsg_HltvReplay | PlainMessage<CSVCMsg_HltvReplay> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_HltvReplay, a, b);
  }
}

/**
 * @generated from message CCLCMsg_HltvReplay
 */
export class CCLCMsg_HltvReplay extends Message<CCLCMsg_HltvReplay> {
  /**
   * @generated from field: optional int32 request = 1;
   */
  request?: number;

  /**
   * @generated from field: optional float slowdown_length = 2;
   */
  slowdownLength?: number;

  /**
   * @generated from field: optional float slowdown_rate = 3;
   */
  slowdownRate?: number;

  /**
   * @generated from field: optional int32 primary_target = 4 [default = -1];
   */
  primaryTarget?: number;

  /**
   * @generated from field: optional float event_time = 5;
   */
  eventTime?: number;

  constructor(data?: PartialMessage<CCLCMsg_HltvReplay>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_HltvReplay";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "request", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "slowdown_length", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "slowdown_rate", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "primary_target", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 5, name: "event_time", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_HltvReplay {
    return new CCLCMsg_HltvReplay().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_HltvReplay {
    return new CCLCMsg_HltvReplay().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_HltvReplay {
    return new CCLCMsg_HltvReplay().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_HltvReplay | PlainMessage<CCLCMsg_HltvReplay> | undefined, b: CCLCMsg_HltvReplay | PlainMessage<CCLCMsg_HltvReplay> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_HltvReplay, a, b);
  }
}

/**
 * @generated from message CSVCMsg_Broadcast_Command
 */
export class CSVCMsg_Broadcast_Command extends Message<CSVCMsg_Broadcast_Command> {
  /**
   * @generated from field: optional string cmd = 1;
   */
  cmd?: string;

  constructor(data?: PartialMessage<CSVCMsg_Broadcast_Command>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_Broadcast_Command";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "cmd", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_Broadcast_Command {
    return new CSVCMsg_Broadcast_Command().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_Broadcast_Command {
    return new CSVCMsg_Broadcast_Command().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_Broadcast_Command {
    return new CSVCMsg_Broadcast_Command().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_Broadcast_Command | PlainMessage<CSVCMsg_Broadcast_Command> | undefined, b: CSVCMsg_Broadcast_Command | PlainMessage<CSVCMsg_Broadcast_Command> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_Broadcast_Command, a, b);
  }
}

/**
 * @generated from message CCLCMsg_HltvFixupOperatorTick
 */
export class CCLCMsg_HltvFixupOperatorTick extends Message<CCLCMsg_HltvFixupOperatorTick> {
  /**
   * @generated from field: optional int32 tick = 1;
   */
  tick?: number;

  /**
   * @generated from field: optional bytes props_data = 2;
   */
  propsData?: Uint8Array;

  /**
   * @generated from field: optional CMsgVector origin = 3;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle eye_angles = 4;
   */
  eyeAngles?: CMsgQAngle;

  /**
   * @generated from field: optional int32 observer_mode = 5;
   */
  observerMode?: number;

  /**
   * @generated from field: optional bool cameraman_scoreboard = 6;
   */
  cameramanScoreboard?: boolean;

  /**
   * @generated from field: optional int32 observer_target = 7;
   */
  observerTarget?: number;

  /**
   * @generated from field: optional CMsgVector view_offset = 8;
   */
  viewOffset?: CMsgVector;

  constructor(data?: PartialMessage<CCLCMsg_HltvFixupOperatorTick>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CCLCMsg_HltvFixupOperatorTick";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "tick", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "props_data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "origin", kind: "message", T: CMsgVector, opt: true },
    { no: 4, name: "eye_angles", kind: "message", T: CMsgQAngle, opt: true },
    { no: 5, name: "observer_mode", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "cameraman_scoreboard", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "observer_target", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "view_offset", kind: "message", T: CMsgVector, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CCLCMsg_HltvFixupOperatorTick {
    return new CCLCMsg_HltvFixupOperatorTick().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CCLCMsg_HltvFixupOperatorTick {
    return new CCLCMsg_HltvFixupOperatorTick().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CCLCMsg_HltvFixupOperatorTick {
    return new CCLCMsg_HltvFixupOperatorTick().fromJsonString(jsonString, options);
  }

  static equals(a: CCLCMsg_HltvFixupOperatorTick | PlainMessage<CCLCMsg_HltvFixupOperatorTick> | undefined, b: CCLCMsg_HltvFixupOperatorTick | PlainMessage<CCLCMsg_HltvFixupOperatorTick> | undefined): boolean {
    return proto2.util.equals(CCLCMsg_HltvFixupOperatorTick, a, b);
  }
}

/**
 * @generated from message CSVCMsg_HltvFixupOperatorStatus
 */
export class CSVCMsg_HltvFixupOperatorStatus extends Message<CSVCMsg_HltvFixupOperatorStatus> {
  /**
   * @generated from field: optional uint32 mode = 1;
   */
  mode?: number;

  /**
   * @generated from field: optional string override_operator_name = 2;
   */
  overrideOperatorName?: string;

  constructor(data?: PartialMessage<CSVCMsg_HltvFixupOperatorStatus>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_HltvFixupOperatorStatus";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "mode", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "override_operator_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_HltvFixupOperatorStatus {
    return new CSVCMsg_HltvFixupOperatorStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_HltvFixupOperatorStatus {
    return new CSVCMsg_HltvFixupOperatorStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_HltvFixupOperatorStatus {
    return new CSVCMsg_HltvFixupOperatorStatus().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_HltvFixupOperatorStatus | PlainMessage<CSVCMsg_HltvFixupOperatorStatus> | undefined, b: CSVCMsg_HltvFixupOperatorStatus | PlainMessage<CSVCMsg_HltvFixupOperatorStatus> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_HltvFixupOperatorStatus, a, b);
  }
}


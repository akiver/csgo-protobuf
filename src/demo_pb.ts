// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file demo.proto (syntax proto2)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";

/**
 * @generated from enum EDemoCommands
 */
export enum EDemoCommands {
  /**
   * @generated from enum value: DEM_Error = -1;
   */
  DEM_Error = -1,

  /**
   * @generated from enum value: DEM_Stop = 0;
   */
  DEM_Stop = 0,

  /**
   * @generated from enum value: DEM_FileHeader = 1;
   */
  DEM_FileHeader = 1,

  /**
   * @generated from enum value: DEM_FileInfo = 2;
   */
  DEM_FileInfo = 2,

  /**
   * @generated from enum value: DEM_SyncTick = 3;
   */
  DEM_SyncTick = 3,

  /**
   * @generated from enum value: DEM_SendTables = 4;
   */
  DEM_SendTables = 4,

  /**
   * @generated from enum value: DEM_ClassInfo = 5;
   */
  DEM_ClassInfo = 5,

  /**
   * @generated from enum value: DEM_StringTables = 6;
   */
  DEM_StringTables = 6,

  /**
   * @generated from enum value: DEM_Packet = 7;
   */
  DEM_Packet = 7,

  /**
   * @generated from enum value: DEM_SignonPacket = 8;
   */
  DEM_SignonPacket = 8,

  /**
   * @generated from enum value: DEM_ConsoleCmd = 9;
   */
  DEM_ConsoleCmd = 9,

  /**
   * @generated from enum value: DEM_CustomData = 10;
   */
  DEM_CustomData = 10,

  /**
   * @generated from enum value: DEM_CustomDataCallbacks = 11;
   */
  DEM_CustomDataCallbacks = 11,

  /**
   * @generated from enum value: DEM_UserCmd = 12;
   */
  DEM_UserCmd = 12,

  /**
   * @generated from enum value: DEM_FullPacket = 13;
   */
  DEM_FullPacket = 13,

  /**
   * @generated from enum value: DEM_SaveGame = 14;
   */
  DEM_SaveGame = 14,

  /**
   * @generated from enum value: DEM_SpawnGroups = 15;
   */
  DEM_SpawnGroups = 15,

  /**
   * @generated from enum value: DEM_Max = 16;
   */
  DEM_Max = 16,

  /**
   * @generated from enum value: DEM_IsCompressed = 64;
   */
  DEM_IsCompressed = 64,
}
// Retrieve enum metadata with: proto2.getEnumType(EDemoCommands)
proto2.util.setEnumType(EDemoCommands, "EDemoCommands", [
  { no: -1, name: "DEM_Error" },
  { no: 0, name: "DEM_Stop" },
  { no: 1, name: "DEM_FileHeader" },
  { no: 2, name: "DEM_FileInfo" },
  { no: 3, name: "DEM_SyncTick" },
  { no: 4, name: "DEM_SendTables" },
  { no: 5, name: "DEM_ClassInfo" },
  { no: 6, name: "DEM_StringTables" },
  { no: 7, name: "DEM_Packet" },
  { no: 8, name: "DEM_SignonPacket" },
  { no: 9, name: "DEM_ConsoleCmd" },
  { no: 10, name: "DEM_CustomData" },
  { no: 11, name: "DEM_CustomDataCallbacks" },
  { no: 12, name: "DEM_UserCmd" },
  { no: 13, name: "DEM_FullPacket" },
  { no: 14, name: "DEM_SaveGame" },
  { no: 15, name: "DEM_SpawnGroups" },
  { no: 16, name: "DEM_Max" },
  { no: 64, name: "DEM_IsCompressed" },
]);

/**
 * @generated from message CDemoFileHeader
 */
export class CDemoFileHeader extends Message<CDemoFileHeader> {
  /**
   * @generated from field: required string demo_file_stamp = 1;
   */
  demoFileStamp?: string;

  /**
   * @generated from field: optional int32 network_protocol = 2;
   */
  networkProtocol?: number;

  /**
   * @generated from field: optional string server_name = 3;
   */
  serverName?: string;

  /**
   * @generated from field: optional string client_name = 4;
   */
  clientName?: string;

  /**
   * @generated from field: optional string map_name = 5;
   */
  mapName?: string;

  /**
   * @generated from field: optional string game_directory = 6;
   */
  gameDirectory?: string;

  /**
   * @generated from field: optional int32 fullpackets_version = 7;
   */
  fullpacketsVersion?: number;

  /**
   * @generated from field: optional bool allow_clientside_entities = 8;
   */
  allowClientsideEntities?: boolean;

  /**
   * @generated from field: optional bool allow_clientside_particles = 9;
   */
  allowClientsideParticles?: boolean;

  /**
   * @generated from field: optional string addons = 10;
   */
  addons?: string;

  /**
   * @generated from field: optional string demo_version_name = 11;
   */
  demoVersionName?: string;

  /**
   * @generated from field: optional string demo_version_guid = 12;
   */
  demoVersionGuid?: string;

  /**
   * @generated from field: optional int32 build_num = 13;
   */
  buildNum?: number;

  /**
   * @generated from field: optional string game = 14;
   */
  game?: string;

  constructor(data?: PartialMessage<CDemoFileHeader>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoFileHeader";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "demo_file_stamp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "network_protocol", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "server_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "client_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "map_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "game_directory", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "fullpackets_version", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "allow_clientside_entities", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 9, name: "allow_clientside_particles", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 10, name: "addons", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "demo_version_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "demo_version_guid", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "build_num", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 14, name: "game", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoFileHeader {
    return new CDemoFileHeader().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoFileHeader {
    return new CDemoFileHeader().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoFileHeader {
    return new CDemoFileHeader().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoFileHeader | PlainMessage<CDemoFileHeader> | undefined, b: CDemoFileHeader | PlainMessage<CDemoFileHeader> | undefined): boolean {
    return proto2.util.equals(CDemoFileHeader, a, b);
  }
}

/**
 * @generated from message CGameInfo
 */
export class CGameInfo extends Message<CGameInfo> {
  /**
   * @generated from field: optional CGameInfo.CDotaGameInfo dota = 4;
   */
  dota?: CGameInfo_CDotaGameInfo;

  constructor(data?: PartialMessage<CGameInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CGameInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 4, name: "dota", kind: "message", T: CGameInfo_CDotaGameInfo, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CGameInfo {
    return new CGameInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CGameInfo {
    return new CGameInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CGameInfo {
    return new CGameInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CGameInfo | PlainMessage<CGameInfo> | undefined, b: CGameInfo | PlainMessage<CGameInfo> | undefined): boolean {
    return proto2.util.equals(CGameInfo, a, b);
  }
}

/**
 * @generated from message CGameInfo.CDotaGameInfo
 */
export class CGameInfo_CDotaGameInfo extends Message<CGameInfo_CDotaGameInfo> {
  /**
   * @generated from field: optional uint64 match_id = 1;
   */
  matchId?: bigint;

  /**
   * @generated from field: optional int32 game_mode = 2;
   */
  gameMode?: number;

  /**
   * @generated from field: optional int32 game_winner = 3;
   */
  gameWinner?: number;

  /**
   * @generated from field: repeated CGameInfo.CDotaGameInfo.CPlayerInfo player_info = 4;
   */
  playerInfo: CGameInfo_CDotaGameInfo_CPlayerInfo[] = [];

  /**
   * @generated from field: optional uint32 leagueid = 5;
   */
  leagueid?: number;

  /**
   * @generated from field: repeated CGameInfo.CDotaGameInfo.CHeroSelectEvent picks_bans = 6;
   */
  picksBans: CGameInfo_CDotaGameInfo_CHeroSelectEvent[] = [];

  /**
   * @generated from field: optional uint32 radiant_team_id = 7;
   */
  radiantTeamId?: number;

  /**
   * @generated from field: optional uint32 dire_team_id = 8;
   */
  direTeamId?: number;

  /**
   * @generated from field: optional string radiant_team_tag = 9;
   */
  radiantTeamTag?: string;

  /**
   * @generated from field: optional string dire_team_tag = 10;
   */
  direTeamTag?: string;

  /**
   * @generated from field: optional uint32 end_time = 11;
   */
  endTime?: number;

  constructor(data?: PartialMessage<CGameInfo_CDotaGameInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CGameInfo.CDotaGameInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "match_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "game_mode", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "game_winner", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "player_info", kind: "message", T: CGameInfo_CDotaGameInfo_CPlayerInfo, repeated: true },
    { no: 5, name: "leagueid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "picks_bans", kind: "message", T: CGameInfo_CDotaGameInfo_CHeroSelectEvent, repeated: true },
    { no: 7, name: "radiant_team_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "dire_team_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "radiant_team_tag", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "dire_team_tag", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "end_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CGameInfo_CDotaGameInfo {
    return new CGameInfo_CDotaGameInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CGameInfo_CDotaGameInfo {
    return new CGameInfo_CDotaGameInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CGameInfo_CDotaGameInfo {
    return new CGameInfo_CDotaGameInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CGameInfo_CDotaGameInfo | PlainMessage<CGameInfo_CDotaGameInfo> | undefined, b: CGameInfo_CDotaGameInfo | PlainMessage<CGameInfo_CDotaGameInfo> | undefined): boolean {
    return proto2.util.equals(CGameInfo_CDotaGameInfo, a, b);
  }
}

/**
 * @generated from message CGameInfo.CDotaGameInfo.CPlayerInfo
 */
export class CGameInfo_CDotaGameInfo_CPlayerInfo extends Message<CGameInfo_CDotaGameInfo_CPlayerInfo> {
  /**
   * @generated from field: optional string hero_name = 1;
   */
  heroName?: string;

  /**
   * @generated from field: optional string player_name = 2;
   */
  playerName?: string;

  /**
   * @generated from field: optional bool is_fake_client = 3;
   */
  isFakeClient?: boolean;

  /**
   * @generated from field: optional uint64 steamid = 4;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional int32 game_team = 5;
   */
  gameTeam?: number;

  constructor(data?: PartialMessage<CGameInfo_CDotaGameInfo_CPlayerInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CGameInfo.CDotaGameInfo.CPlayerInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "hero_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "player_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "is_fake_client", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "steamid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 5, name: "game_team", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CGameInfo_CDotaGameInfo_CPlayerInfo {
    return new CGameInfo_CDotaGameInfo_CPlayerInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CGameInfo_CDotaGameInfo_CPlayerInfo {
    return new CGameInfo_CDotaGameInfo_CPlayerInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CGameInfo_CDotaGameInfo_CPlayerInfo {
    return new CGameInfo_CDotaGameInfo_CPlayerInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CGameInfo_CDotaGameInfo_CPlayerInfo | PlainMessage<CGameInfo_CDotaGameInfo_CPlayerInfo> | undefined, b: CGameInfo_CDotaGameInfo_CPlayerInfo | PlainMessage<CGameInfo_CDotaGameInfo_CPlayerInfo> | undefined): boolean {
    return proto2.util.equals(CGameInfo_CDotaGameInfo_CPlayerInfo, a, b);
  }
}

/**
 * @generated from message CGameInfo.CDotaGameInfo.CHeroSelectEvent
 */
export class CGameInfo_CDotaGameInfo_CHeroSelectEvent extends Message<CGameInfo_CDotaGameInfo_CHeroSelectEvent> {
  /**
   * @generated from field: optional bool is_pick = 1;
   */
  isPick?: boolean;

  /**
   * @generated from field: optional uint32 team = 2;
   */
  team?: number;

  /**
   * @generated from field: optional uint32 hero_id = 3;
   */
  heroId?: number;

  constructor(data?: PartialMessage<CGameInfo_CDotaGameInfo_CHeroSelectEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CGameInfo.CDotaGameInfo.CHeroSelectEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "is_pick", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "team", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "hero_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CGameInfo_CDotaGameInfo_CHeroSelectEvent {
    return new CGameInfo_CDotaGameInfo_CHeroSelectEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CGameInfo_CDotaGameInfo_CHeroSelectEvent {
    return new CGameInfo_CDotaGameInfo_CHeroSelectEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CGameInfo_CDotaGameInfo_CHeroSelectEvent {
    return new CGameInfo_CDotaGameInfo_CHeroSelectEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CGameInfo_CDotaGameInfo_CHeroSelectEvent | PlainMessage<CGameInfo_CDotaGameInfo_CHeroSelectEvent> | undefined, b: CGameInfo_CDotaGameInfo_CHeroSelectEvent | PlainMessage<CGameInfo_CDotaGameInfo_CHeroSelectEvent> | undefined): boolean {
    return proto2.util.equals(CGameInfo_CDotaGameInfo_CHeroSelectEvent, a, b);
  }
}

/**
 * @generated from message CDemoFileInfo
 */
export class CDemoFileInfo extends Message<CDemoFileInfo> {
  /**
   * @generated from field: optional float playback_time = 1;
   */
  playbackTime?: number;

  /**
   * @generated from field: optional int32 playback_ticks = 2;
   */
  playbackTicks?: number;

  /**
   * @generated from field: optional int32 playback_frames = 3;
   */
  playbackFrames?: number;

  /**
   * @generated from field: optional CGameInfo game_info = 4;
   */
  gameInfo?: CGameInfo;

  constructor(data?: PartialMessage<CDemoFileInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoFileInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "playback_time", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 2, name: "playback_ticks", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "playback_frames", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "game_info", kind: "message", T: CGameInfo, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoFileInfo {
    return new CDemoFileInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoFileInfo {
    return new CDemoFileInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoFileInfo {
    return new CDemoFileInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoFileInfo | PlainMessage<CDemoFileInfo> | undefined, b: CDemoFileInfo | PlainMessage<CDemoFileInfo> | undefined): boolean {
    return proto2.util.equals(CDemoFileInfo, a, b);
  }
}

/**
 * @generated from message CDemoPacket
 */
export class CDemoPacket extends Message<CDemoPacket> {
  /**
   * @generated from field: optional bytes data = 3;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CDemoPacket>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoPacket";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 3, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoPacket {
    return new CDemoPacket().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoPacket {
    return new CDemoPacket().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoPacket {
    return new CDemoPacket().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoPacket | PlainMessage<CDemoPacket> | undefined, b: CDemoPacket | PlainMessage<CDemoPacket> | undefined): boolean {
    return proto2.util.equals(CDemoPacket, a, b);
  }
}

/**
 * @generated from message CDemoFullPacket
 */
export class CDemoFullPacket extends Message<CDemoFullPacket> {
  /**
   * @generated from field: optional CDemoStringTables string_table = 1;
   */
  stringTable?: CDemoStringTables;

  /**
   * @generated from field: optional CDemoPacket packet = 2;
   */
  packet?: CDemoPacket;

  constructor(data?: PartialMessage<CDemoFullPacket>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoFullPacket";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "string_table", kind: "message", T: CDemoStringTables, opt: true },
    { no: 2, name: "packet", kind: "message", T: CDemoPacket, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoFullPacket {
    return new CDemoFullPacket().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoFullPacket {
    return new CDemoFullPacket().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoFullPacket {
    return new CDemoFullPacket().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoFullPacket | PlainMessage<CDemoFullPacket> | undefined, b: CDemoFullPacket | PlainMessage<CDemoFullPacket> | undefined): boolean {
    return proto2.util.equals(CDemoFullPacket, a, b);
  }
}

/**
 * @generated from message CDemoSaveGame
 */
export class CDemoSaveGame extends Message<CDemoSaveGame> {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data?: Uint8Array;

  /**
   * @generated from field: optional fixed64 steam_id = 2;
   */
  steamId?: bigint;

  /**
   * @generated from field: optional fixed64 signature = 3;
   */
  signature?: bigint;

  /**
   * @generated from field: optional int32 version = 4;
   */
  version?: number;

  constructor(data?: PartialMessage<CDemoSaveGame>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoSaveGame";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 2, name: "steam_id", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 3, name: "signature", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 4, name: "version", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoSaveGame {
    return new CDemoSaveGame().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoSaveGame {
    return new CDemoSaveGame().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoSaveGame {
    return new CDemoSaveGame().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoSaveGame | PlainMessage<CDemoSaveGame> | undefined, b: CDemoSaveGame | PlainMessage<CDemoSaveGame> | undefined): boolean {
    return proto2.util.equals(CDemoSaveGame, a, b);
  }
}

/**
 * @generated from message CDemoSyncTick
 */
export class CDemoSyncTick extends Message<CDemoSyncTick> {
  constructor(data?: PartialMessage<CDemoSyncTick>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoSyncTick";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoSyncTick {
    return new CDemoSyncTick().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoSyncTick {
    return new CDemoSyncTick().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoSyncTick {
    return new CDemoSyncTick().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoSyncTick | PlainMessage<CDemoSyncTick> | undefined, b: CDemoSyncTick | PlainMessage<CDemoSyncTick> | undefined): boolean {
    return proto2.util.equals(CDemoSyncTick, a, b);
  }
}

/**
 * @generated from message CDemoConsoleCmd
 */
export class CDemoConsoleCmd extends Message<CDemoConsoleCmd> {
  /**
   * @generated from field: optional string cmdstring = 1;
   */
  cmdstring?: string;

  constructor(data?: PartialMessage<CDemoConsoleCmd>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoConsoleCmd";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "cmdstring", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoConsoleCmd {
    return new CDemoConsoleCmd().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoConsoleCmd {
    return new CDemoConsoleCmd().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoConsoleCmd {
    return new CDemoConsoleCmd().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoConsoleCmd | PlainMessage<CDemoConsoleCmd> | undefined, b: CDemoConsoleCmd | PlainMessage<CDemoConsoleCmd> | undefined): boolean {
    return proto2.util.equals(CDemoConsoleCmd, a, b);
  }
}

/**
 * @generated from message CDemoSendTables
 */
export class CDemoSendTables extends Message<CDemoSendTables> {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CDemoSendTables>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoSendTables";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoSendTables {
    return new CDemoSendTables().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoSendTables {
    return new CDemoSendTables().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoSendTables {
    return new CDemoSendTables().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoSendTables | PlainMessage<CDemoSendTables> | undefined, b: CDemoSendTables | PlainMessage<CDemoSendTables> | undefined): boolean {
    return proto2.util.equals(CDemoSendTables, a, b);
  }
}

/**
 * @generated from message CDemoClassInfo
 */
export class CDemoClassInfo extends Message<CDemoClassInfo> {
  /**
   * @generated from field: repeated CDemoClassInfo.class_t classes = 1;
   */
  classes: CDemoClassInfo_class_t[] = [];

  constructor(data?: PartialMessage<CDemoClassInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoClassInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "classes", kind: "message", T: CDemoClassInfo_class_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoClassInfo {
    return new CDemoClassInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoClassInfo {
    return new CDemoClassInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoClassInfo {
    return new CDemoClassInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoClassInfo | PlainMessage<CDemoClassInfo> | undefined, b: CDemoClassInfo | PlainMessage<CDemoClassInfo> | undefined): boolean {
    return proto2.util.equals(CDemoClassInfo, a, b);
  }
}

/**
 * @generated from message CDemoClassInfo.class_t
 */
export class CDemoClassInfo_class_t extends Message<CDemoClassInfo_class_t> {
  /**
   * @generated from field: optional int32 class_id = 1;
   */
  classId?: number;

  /**
   * @generated from field: optional string network_name = 2;
   */
  networkName?: string;

  /**
   * @generated from field: optional string table_name = 3;
   */
  tableName?: string;

  constructor(data?: PartialMessage<CDemoClassInfo_class_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoClassInfo.class_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "class_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "network_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "table_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoClassInfo_class_t {
    return new CDemoClassInfo_class_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoClassInfo_class_t {
    return new CDemoClassInfo_class_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoClassInfo_class_t {
    return new CDemoClassInfo_class_t().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoClassInfo_class_t | PlainMessage<CDemoClassInfo_class_t> | undefined, b: CDemoClassInfo_class_t | PlainMessage<CDemoClassInfo_class_t> | undefined): boolean {
    return proto2.util.equals(CDemoClassInfo_class_t, a, b);
  }
}

/**
 * @generated from message CDemoCustomData
 */
export class CDemoCustomData extends Message<CDemoCustomData> {
  /**
   * @generated from field: optional int32 callback_index = 1;
   */
  callbackIndex?: number;

  /**
   * @generated from field: optional bytes data = 2;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CDemoCustomData>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoCustomData";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "callback_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoCustomData {
    return new CDemoCustomData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoCustomData {
    return new CDemoCustomData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoCustomData {
    return new CDemoCustomData().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoCustomData | PlainMessage<CDemoCustomData> | undefined, b: CDemoCustomData | PlainMessage<CDemoCustomData> | undefined): boolean {
    return proto2.util.equals(CDemoCustomData, a, b);
  }
}

/**
 * @generated from message CDemoCustomDataCallbacks
 */
export class CDemoCustomDataCallbacks extends Message<CDemoCustomDataCallbacks> {
  /**
   * @generated from field: repeated string save_id = 1;
   */
  saveId: string[] = [];

  constructor(data?: PartialMessage<CDemoCustomDataCallbacks>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoCustomDataCallbacks";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "save_id", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoCustomDataCallbacks {
    return new CDemoCustomDataCallbacks().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoCustomDataCallbacks {
    return new CDemoCustomDataCallbacks().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoCustomDataCallbacks {
    return new CDemoCustomDataCallbacks().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoCustomDataCallbacks | PlainMessage<CDemoCustomDataCallbacks> | undefined, b: CDemoCustomDataCallbacks | PlainMessage<CDemoCustomDataCallbacks> | undefined): boolean {
    return proto2.util.equals(CDemoCustomDataCallbacks, a, b);
  }
}

/**
 * @generated from message CDemoStringTables
 */
export class CDemoStringTables extends Message<CDemoStringTables> {
  /**
   * @generated from field: repeated CDemoStringTables.table_t tables = 1;
   */
  tables: CDemoStringTables_table_t[] = [];

  constructor(data?: PartialMessage<CDemoStringTables>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoStringTables";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "tables", kind: "message", T: CDemoStringTables_table_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoStringTables {
    return new CDemoStringTables().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoStringTables {
    return new CDemoStringTables().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoStringTables {
    return new CDemoStringTables().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoStringTables | PlainMessage<CDemoStringTables> | undefined, b: CDemoStringTables | PlainMessage<CDemoStringTables> | undefined): boolean {
    return proto2.util.equals(CDemoStringTables, a, b);
  }
}

/**
 * @generated from message CDemoStringTables.items_t
 */
export class CDemoStringTables_items_t extends Message<CDemoStringTables_items_t> {
  /**
   * @generated from field: optional string str = 1;
   */
  str?: string;

  /**
   * @generated from field: optional bytes data = 2;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CDemoStringTables_items_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoStringTables.items_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "str", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoStringTables_items_t {
    return new CDemoStringTables_items_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoStringTables_items_t {
    return new CDemoStringTables_items_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoStringTables_items_t {
    return new CDemoStringTables_items_t().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoStringTables_items_t | PlainMessage<CDemoStringTables_items_t> | undefined, b: CDemoStringTables_items_t | PlainMessage<CDemoStringTables_items_t> | undefined): boolean {
    return proto2.util.equals(CDemoStringTables_items_t, a, b);
  }
}

/**
 * @generated from message CDemoStringTables.table_t
 */
export class CDemoStringTables_table_t extends Message<CDemoStringTables_table_t> {
  /**
   * @generated from field: optional string table_name = 1;
   */
  tableName?: string;

  /**
   * @generated from field: repeated CDemoStringTables.items_t items = 2;
   */
  items: CDemoStringTables_items_t[] = [];

  /**
   * @generated from field: repeated CDemoStringTables.items_t items_clientside = 3;
   */
  itemsClientside: CDemoStringTables_items_t[] = [];

  /**
   * @generated from field: optional int32 table_flags = 4;
   */
  tableFlags?: number;

  constructor(data?: PartialMessage<CDemoStringTables_table_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoStringTables.table_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "table_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "items", kind: "message", T: CDemoStringTables_items_t, repeated: true },
    { no: 3, name: "items_clientside", kind: "message", T: CDemoStringTables_items_t, repeated: true },
    { no: 4, name: "table_flags", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoStringTables_table_t {
    return new CDemoStringTables_table_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoStringTables_table_t {
    return new CDemoStringTables_table_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoStringTables_table_t {
    return new CDemoStringTables_table_t().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoStringTables_table_t | PlainMessage<CDemoStringTables_table_t> | undefined, b: CDemoStringTables_table_t | PlainMessage<CDemoStringTables_table_t> | undefined): boolean {
    return proto2.util.equals(CDemoStringTables_table_t, a, b);
  }
}

/**
 * @generated from message CDemoStop
 */
export class CDemoStop extends Message<CDemoStop> {
  constructor(data?: PartialMessage<CDemoStop>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoStop";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoStop {
    return new CDemoStop().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoStop {
    return new CDemoStop().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoStop {
    return new CDemoStop().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoStop | PlainMessage<CDemoStop> | undefined, b: CDemoStop | PlainMessage<CDemoStop> | undefined): boolean {
    return proto2.util.equals(CDemoStop, a, b);
  }
}

/**
 * @generated from message CDemoUserCmd
 */
export class CDemoUserCmd extends Message<CDemoUserCmd> {
  /**
   * @generated from field: optional int32 cmd_number = 1;
   */
  cmdNumber?: number;

  /**
   * @generated from field: optional bytes data = 2;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CDemoUserCmd>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoUserCmd";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "cmd_number", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoUserCmd {
    return new CDemoUserCmd().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoUserCmd {
    return new CDemoUserCmd().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoUserCmd {
    return new CDemoUserCmd().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoUserCmd | PlainMessage<CDemoUserCmd> | undefined, b: CDemoUserCmd | PlainMessage<CDemoUserCmd> | undefined): boolean {
    return proto2.util.equals(CDemoUserCmd, a, b);
  }
}

/**
 * @generated from message CDemoSpawnGroups
 */
export class CDemoSpawnGroups extends Message<CDemoSpawnGroups> {
  /**
   * @generated from field: repeated bytes msgs = 3;
   */
  msgs: Uint8Array[] = [];

  constructor(data?: PartialMessage<CDemoSpawnGroups>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CDemoSpawnGroups";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 3, name: "msgs", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CDemoSpawnGroups {
    return new CDemoSpawnGroups().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CDemoSpawnGroups {
    return new CDemoSpawnGroups().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CDemoSpawnGroups {
    return new CDemoSpawnGroups().fromJsonString(jsonString, options);
  }

  static equals(a: CDemoSpawnGroups | PlainMessage<CDemoSpawnGroups> | undefined, b: CDemoSpawnGroups | PlainMessage<CDemoSpawnGroups> | undefined): boolean {
    return proto2.util.equals(CDemoSpawnGroups, a, b);
  }
}


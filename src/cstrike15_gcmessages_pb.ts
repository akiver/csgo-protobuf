// @generated by protoc-gen-es v2.6.3 with parameter "target=ts,import_extension=js"
// @generated from file cstrike15_gcmessages.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages } from "./steammessages_pb.js";
import type { CEngineGotvSyncPacket } from "./engine_gcmessages_pb.js";
import { file_engine_gcmessages } from "./engine_gcmessages_pb.js";
import type { CMsgSOCacheSubscribed, CMsgSOCacheSubscriptionCheck } from "./gcsdk_gcmessages_pb.js";
import { file_gcsdk_gcmessages } from "./gcsdk_gcmessages_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cstrike15_gcmessages.proto.
 */
export const file_cstrike15_gcmessages: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages, file_engine_gcmessages, file_gcsdk_gcmessages]);

/**
 * @generated from message GameServerPing
 */
export type GameServerPing = Message<"GameServerPing"> & {
  /**
   * @generated from field: optional int32 ping = 2;
   */
  ping: number;

  /**
   * @generated from field: optional uint32 ip = 3;
   */
  ip: number;

  /**
   * @generated from field: optional uint32 instances = 5;
   */
  instances: number;
};

/**
 * Describes the message GameServerPing.
 * Use `create(GameServerPingSchema)` to create a new message.
 */
export const GameServerPingSchema: GenMessage<GameServerPing> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 0);

/**
 * @generated from message DataCenterPing
 */
export type DataCenterPing = Message<"DataCenterPing"> & {
  /**
   * @generated from field: optional fixed32 data_center_id = 1;
   */
  dataCenterId: number;

  /**
   * @generated from field: optional sint32 ping = 2;
   */
  ping: number;
};

/**
 * Describes the message DataCenterPing.
 * Use `create(DataCenterPingSchema)` to create a new message.
 */
export const DataCenterPingSchema: GenMessage<DataCenterPing> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 1);

/**
 * @generated from message DetailedSearchStatistic
 */
export type DetailedSearchStatistic = Message<"DetailedSearchStatistic"> & {
  /**
   * @generated from field: optional uint32 game_type = 1;
   */
  gameType: number;

  /**
   * @generated from field: optional uint32 search_time_avg = 2;
   */
  searchTimeAvg: number;

  /**
   * @generated from field: optional uint32 players_searching = 4;
   */
  playersSearching: number;
};

/**
 * Describes the message DetailedSearchStatistic.
 * Use `create(DetailedSearchStatisticSchema)` to create a new message.
 */
export const DetailedSearchStatisticSchema: GenMessage<DetailedSearchStatistic> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 2);

/**
 * @generated from message TournamentPlayer
 */
export type TournamentPlayer = Message<"TournamentPlayer"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional string player_nick = 2;
   */
  playerNick: string;

  /**
   * @generated from field: optional string player_name = 3;
   */
  playerName: string;

  /**
   * @generated from field: optional uint32 player_dob = 4;
   */
  playerDob: number;

  /**
   * @generated from field: optional string player_flag = 5;
   */
  playerFlag: string;

  /**
   * @generated from field: optional string player_location = 6;
   */
  playerLocation: string;

  /**
   * @generated from field: optional string player_desc = 7;
   */
  playerDesc: string;
};

/**
 * Describes the message TournamentPlayer.
 * Use `create(TournamentPlayerSchema)` to create a new message.
 */
export const TournamentPlayerSchema: GenMessage<TournamentPlayer> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 3);

/**
 * @generated from message TournamentTeam
 */
export type TournamentTeam = Message<"TournamentTeam"> & {
  /**
   * @generated from field: optional int32 team_id = 1;
   */
  teamId: number;

  /**
   * @generated from field: optional string team_tag = 2;
   */
  teamTag: string;

  /**
   * @generated from field: optional string team_flag = 3;
   */
  teamFlag: string;

  /**
   * @generated from field: optional string team_name = 4;
   */
  teamName: string;

  /**
   * @generated from field: repeated TournamentPlayer players = 5;
   */
  players: TournamentPlayer[];
};

/**
 * Describes the message TournamentTeam.
 * Use `create(TournamentTeamSchema)` to create a new message.
 */
export const TournamentTeamSchema: GenMessage<TournamentTeam> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 4);

/**
 * @generated from message TournamentEvent
 */
export type TournamentEvent = Message<"TournamentEvent"> & {
  /**
   * @generated from field: optional int32 event_id = 1;
   */
  eventId: number;

  /**
   * @generated from field: optional string event_tag = 2;
   */
  eventTag: string;

  /**
   * @generated from field: optional string event_name = 3;
   */
  eventName: string;

  /**
   * @generated from field: optional uint32 event_time_start = 4;
   */
  eventTimeStart: number;

  /**
   * @generated from field: optional uint32 event_time_end = 5;
   */
  eventTimeEnd: number;

  /**
   * @generated from field: optional int32 event_public = 6;
   */
  eventPublic: number;

  /**
   * @generated from field: optional int32 event_stage_id = 7;
   */
  eventStageId: number;

  /**
   * @generated from field: optional string event_stage_name = 8;
   */
  eventStageName: string;

  /**
   * @generated from field: optional uint32 active_section_id = 9;
   */
  activeSectionId: number;
};

/**
 * Describes the message TournamentEvent.
 * Use `create(TournamentEventSchema)` to create a new message.
 */
export const TournamentEventSchema: GenMessage<TournamentEvent> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 5);

/**
 * @generated from message GlobalStatistics
 */
export type GlobalStatistics = Message<"GlobalStatistics"> & {
  /**
   * @generated from field: optional uint32 players_online = 1;
   */
  playersOnline: number;

  /**
   * @generated from field: optional uint32 servers_online = 2;
   */
  serversOnline: number;

  /**
   * @generated from field: optional uint32 players_searching = 3;
   */
  playersSearching: number;

  /**
   * @generated from field: optional uint32 servers_available = 4;
   */
  serversAvailable: number;

  /**
   * @generated from field: optional uint32 ongoing_matches = 5;
   */
  ongoingMatches: number;

  /**
   * @generated from field: optional uint32 search_time_avg = 6;
   */
  searchTimeAvg: number;

  /**
   * @generated from field: repeated DetailedSearchStatistic search_statistics = 7;
   */
  searchStatistics: DetailedSearchStatistic[];

  /**
   * @generated from field: optional string main_post_url = 8;
   */
  mainPostUrl: string;

  /**
   * @generated from field: optional uint32 required_appid_version = 9;
   */
  requiredAppidVersion: number;

  /**
   * @generated from field: optional uint32 pricesheet_version = 10;
   */
  pricesheetVersion: number;

  /**
   * @generated from field: optional uint32 twitch_streams_version = 11;
   */
  twitchStreamsVersion: number;

  /**
   * @generated from field: optional uint32 active_tournament_eventid = 12;
   */
  activeTournamentEventid: number;

  /**
   * @generated from field: optional uint32 active_survey_id = 13;
   */
  activeSurveyId: number;

  /**
   * @generated from field: optional uint32 rtime32_cur = 14;
   */
  rtime32Cur: number;

  /**
   * @generated from field: optional uint32 required_appid_version2 = 16;
   */
  requiredAppidVersion2: number;
};

/**
 * Describes the message GlobalStatistics.
 * Use `create(GlobalStatisticsSchema)` to create a new message.
 */
export const GlobalStatisticsSchema: GenMessage<GlobalStatistics> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 6);

/**
 * @generated from message OperationalStatisticDescription
 */
export type OperationalStatisticDescription = Message<"OperationalStatisticDescription"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional uint32 idkey = 2;
   */
  idkey: number;
};

/**
 * Describes the message OperationalStatisticDescription.
 * Use `create(OperationalStatisticDescriptionSchema)` to create a new message.
 */
export const OperationalStatisticDescriptionSchema: GenMessage<OperationalStatisticDescription> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 7);

/**
 * @generated from message OperationalStatisticElement
 */
export type OperationalStatisticElement = Message<"OperationalStatisticElement"> & {
  /**
   * @generated from field: optional uint32 idkey = 1;
   */
  idkey: number;

  /**
   * @generated from field: repeated int32 values = 2;
   */
  values: number[];
};

/**
 * Describes the message OperationalStatisticElement.
 * Use `create(OperationalStatisticElementSchema)` to create a new message.
 */
export const OperationalStatisticElementSchema: GenMessage<OperationalStatisticElement> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 8);

/**
 * @generated from message OperationalStatisticsPacket
 */
export type OperationalStatisticsPacket = Message<"OperationalStatisticsPacket"> & {
  /**
   * @generated from field: optional int32 packetid = 1;
   */
  packetid: number;

  /**
   * @generated from field: optional int32 mstimestamp = 2;
   */
  mstimestamp: number;

  /**
   * @generated from field: repeated OperationalStatisticElement values = 3;
   */
  values: OperationalStatisticElement[];
};

/**
 * Describes the message OperationalStatisticsPacket.
 * Use `create(OperationalStatisticsPacketSchema)` to create a new message.
 */
export const OperationalStatisticsPacketSchema: GenMessage<OperationalStatisticsPacket> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 9);

/**
 * @generated from message OperationalVarValue
 */
export type OperationalVarValue = Message<"OperationalVarValue"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional int32 ivalue = 2;
   */
  ivalue: number;

  /**
   * @generated from field: optional float fvalue = 3;
   */
  fvalue: number;

  /**
   * @generated from field: optional bytes svalue = 4;
   */
  svalue: Uint8Array;
};

/**
 * Describes the message OperationalVarValue.
 * Use `create(OperationalVarValueSchema)` to create a new message.
 */
export const OperationalVarValueSchema: GenMessage<OperationalVarValue> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 10);

/**
 * @generated from message PlayerRankingInfo
 */
export type PlayerRankingInfo = Message<"PlayerRankingInfo"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 rank_id = 2;
   */
  rankId: number;

  /**
   * @generated from field: optional uint32 wins = 3;
   */
  wins: number;

  /**
   * @generated from field: optional float rank_change = 4;
   */
  rankChange: number;

  /**
   * @generated from field: optional uint32 rank_type_id = 6;
   */
  rankTypeId: number;

  /**
   * @generated from field: optional uint32 tv_control = 7;
   */
  tvControl: number;

  /**
   * @generated from field: optional uint64 rank_window_stats = 8;
   */
  rankWindowStats: bigint;

  /**
   * @generated from field: optional string leaderboard_name = 9;
   */
  leaderboardName: string;

  /**
   * @generated from field: optional uint32 rank_if_win = 10;
   */
  rankIfWin: number;

  /**
   * @generated from field: optional uint32 rank_if_lose = 11;
   */
  rankIfLose: number;

  /**
   * @generated from field: optional uint32 rank_if_tie = 12;
   */
  rankIfTie: number;

  /**
   * @generated from field: repeated PlayerRankingInfo.PerMapRank per_map_rank = 13;
   */
  perMapRank: PlayerRankingInfo_PerMapRank[];

  /**
   * @generated from field: optional uint32 leaderboard_name_status = 14;
   */
  leaderboardNameStatus: number;

  /**
   * @generated from field: optional uint32 highest_rank = 15;
   */
  highestRank: number;

  /**
   * @generated from field: optional uint32 rank_expiry = 16;
   */
  rankExpiry: number;
};

/**
 * Describes the message PlayerRankingInfo.
 * Use `create(PlayerRankingInfoSchema)` to create a new message.
 */
export const PlayerRankingInfoSchema: GenMessage<PlayerRankingInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 11);

/**
 * @generated from message PlayerRankingInfo.PerMapRank
 */
export type PlayerRankingInfo_PerMapRank = Message<"PlayerRankingInfo.PerMapRank"> & {
  /**
   * @generated from field: optional uint32 map_id = 1;
   */
  mapId: number;

  /**
   * @generated from field: optional uint32 rank_id = 2;
   */
  rankId: number;

  /**
   * @generated from field: optional uint32 wins = 3;
   */
  wins: number;
};

/**
 * Describes the message PlayerRankingInfo.PerMapRank.
 * Use `create(PlayerRankingInfo_PerMapRankSchema)` to create a new message.
 */
export const PlayerRankingInfo_PerMapRankSchema: GenMessage<PlayerRankingInfo_PerMapRank> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 11, 0);

/**
 * @generated from message PlayerCommendationInfo
 */
export type PlayerCommendationInfo = Message<"PlayerCommendationInfo"> & {
  /**
   * @generated from field: optional uint32 cmd_friendly = 1;
   */
  cmdFriendly: number;

  /**
   * @generated from field: optional uint32 cmd_teaching = 2;
   */
  cmdTeaching: number;

  /**
   * @generated from field: optional uint32 cmd_leader = 4;
   */
  cmdLeader: number;
};

/**
 * Describes the message PlayerCommendationInfo.
 * Use `create(PlayerCommendationInfoSchema)` to create a new message.
 */
export const PlayerCommendationInfoSchema: GenMessage<PlayerCommendationInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 12);

/**
 * @generated from message PlayerMedalsInfo
 */
export type PlayerMedalsInfo = Message<"PlayerMedalsInfo"> & {
  /**
   * @generated from field: repeated uint32 display_items_defidx = 7;
   */
  displayItemsDefidx: number[];

  /**
   * @generated from field: optional uint32 featured_display_item_defidx = 8;
   */
  featuredDisplayItemDefidx: number;
};

/**
 * Describes the message PlayerMedalsInfo.
 * Use `create(PlayerMedalsInfoSchema)` to create a new message.
 */
export const PlayerMedalsInfoSchema: GenMessage<PlayerMedalsInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 13);

/**
 * @generated from message AccountActivity
 */
export type AccountActivity = Message<"AccountActivity"> & {
  /**
   * @generated from field: optional uint32 activity = 1;
   */
  activity: number;

  /**
   * @generated from field: optional uint32 mode = 2;
   */
  mode: number;

  /**
   * @generated from field: optional uint32 map = 3;
   */
  map: number;

  /**
   * @generated from field: optional uint64 matchid = 4;
   */
  matchid: bigint;
};

/**
 * Describes the message AccountActivity.
 * Use `create(AccountActivitySchema)` to create a new message.
 */
export const AccountActivitySchema: GenMessage<AccountActivity> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 14);

/**
 * @generated from message TournamentMatchSetup
 */
export type TournamentMatchSetup = Message<"TournamentMatchSetup"> & {
  /**
   * @generated from field: optional int32 event_id = 1;
   */
  eventId: number;

  /**
   * @generated from field: optional int32 team_id_ct = 2;
   */
  teamIdCt: number;

  /**
   * @generated from field: optional int32 team_id_t = 3;
   */
  teamIdT: number;

  /**
   * @generated from field: optional int32 event_stage_id = 4;
   */
  eventStageId: number;
};

/**
 * Describes the message TournamentMatchSetup.
 * Use `create(TournamentMatchSetupSchema)` to create a new message.
 */
export const TournamentMatchSetupSchema: GenMessage<TournamentMatchSetup> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 15);

/**
 * @generated from message ServerHltvInfo
 */
export type ServerHltvInfo = Message<"ServerHltvInfo"> & {
  /**
   * @generated from field: optional uint32 tv_udp_port = 1;
   */
  tvUdpPort: number;

  /**
   * @generated from field: optional uint64 tv_watch_key = 2;
   */
  tvWatchKey: bigint;

  /**
   * @generated from field: optional uint32 tv_slots = 3;
   */
  tvSlots: number;

  /**
   * @generated from field: optional uint32 tv_clients = 4;
   */
  tvClients: number;

  /**
   * @generated from field: optional uint32 tv_proxies = 5;
   */
  tvProxies: number;

  /**
   * @generated from field: optional uint32 tv_time = 6;
   */
  tvTime: number;

  /**
   * @generated from field: optional uint32 game_type = 8;
   */
  gameType: number;

  /**
   * @generated from field: optional string game_mapgroup = 9;
   */
  gameMapgroup: string;

  /**
   * @generated from field: optional string game_map = 10;
   */
  gameMap: string;

  /**
   * @generated from field: optional uint64 tv_master_steamid = 11;
   */
  tvMasterSteamid: bigint;

  /**
   * @generated from field: optional uint32 tv_local_slots = 12;
   */
  tvLocalSlots: number;

  /**
   * @generated from field: optional uint32 tv_local_clients = 13;
   */
  tvLocalClients: number;

  /**
   * @generated from field: optional uint32 tv_local_proxies = 14;
   */
  tvLocalProxies: number;

  /**
   * @generated from field: optional uint32 tv_relay_slots = 15;
   */
  tvRelaySlots: number;

  /**
   * @generated from field: optional uint32 tv_relay_clients = 16;
   */
  tvRelayClients: number;

  /**
   * @generated from field: optional uint32 tv_relay_proxies = 17;
   */
  tvRelayProxies: number;

  /**
   * @generated from field: optional uint32 tv_relay_address = 18;
   */
  tvRelayAddress: number;

  /**
   * @generated from field: optional uint32 tv_relay_port = 19;
   */
  tvRelayPort: number;

  /**
   * @generated from field: optional uint64 tv_relay_steamid = 20;
   */
  tvRelaySteamid: bigint;

  /**
   * @generated from field: optional uint32 flags = 21;
   */
  flags: number;
};

/**
 * Describes the message ServerHltvInfo.
 * Use `create(ServerHltvInfoSchema)` to create a new message.
 */
export const ServerHltvInfoSchema: GenMessage<ServerHltvInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 16);

/**
 * @generated from message IpAddressMask
 */
export type IpAddressMask = Message<"IpAddressMask"> & {
  /**
   * @generated from field: optional uint32 a = 1;
   */
  a: number;

  /**
   * @generated from field: optional uint32 b = 2;
   */
  b: number;

  /**
   * @generated from field: optional uint32 c = 3;
   */
  c: number;

  /**
   * @generated from field: optional uint32 d = 4;
   */
  d: number;

  /**
   * @generated from field: optional uint32 bits = 5;
   */
  bits: number;

  /**
   * @generated from field: optional uint32 token = 6;
   */
  token: number;
};

/**
 * Describes the message IpAddressMask.
 * Use `create(IpAddressMaskSchema)` to create a new message.
 */
export const IpAddressMaskSchema: GenMessage<IpAddressMask> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 17);

/**
 * @generated from message CMsgCsgoSteamUserStatChange
 */
export type CMsgCsgoSteamUserStatChange = Message<"CMsgCsgoSteamUserStatChange"> & {
  /**
   * @generated from field: optional int32 ecsgosteamuserstat = 1;
   */
  ecsgosteamuserstat: number;

  /**
   * @generated from field: optional int32 delta = 2;
   */
  delta: number;

  /**
   * @generated from field: optional bool absolute = 3;
   */
  absolute: boolean;
};

/**
 * Describes the message CMsgCsgoSteamUserStatChange.
 * Use `create(CMsgCsgoSteamUserStatChangeSchema)` to create a new message.
 */
export const CMsgCsgoSteamUserStatChangeSchema: GenMessage<CMsgCsgoSteamUserStatChange> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 18);

/**
 * @generated from message XpProgressData
 */
export type XpProgressData = Message<"XpProgressData"> & {
  /**
   * @generated from field: optional uint32 xp_points = 1;
   */
  xpPoints: number;

  /**
   * @generated from field: optional int32 xp_category = 2;
   */
  xpCategory: number;
};

/**
 * Describes the message XpProgressData.
 * Use `create(XpProgressDataSchema)` to create a new message.
 */
export const XpProgressDataSchema: GenMessage<XpProgressData> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 19);

/**
 * @generated from message MatchEndItemUpdates
 */
export type MatchEndItemUpdates = Message<"MatchEndItemUpdates"> & {
  /**
   * @generated from field: optional uint64 item_id = 1;
   */
  itemId: bigint;

  /**
   * @generated from field: optional uint32 item_attr_defidx = 2;
   */
  itemAttrDefidx: number;

  /**
   * @generated from field: optional uint32 item_attr_delta_value = 3;
   */
  itemAttrDeltaValue: number;
};

/**
 * Describes the message MatchEndItemUpdates.
 * Use `create(MatchEndItemUpdatesSchema)` to create a new message.
 */
export const MatchEndItemUpdatesSchema: GenMessage<MatchEndItemUpdates> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 20);

/**
 * @generated from message ScoreLeaderboardData
 */
export type ScoreLeaderboardData = Message<"ScoreLeaderboardData"> & {
  /**
   * @generated from field: optional uint64 quest_id = 1;
   */
  questId: bigint;

  /**
   * @generated from field: optional uint32 score = 2;
   */
  score: number;

  /**
   * @generated from field: repeated ScoreLeaderboardData.AccountEntries accountentries = 3;
   */
  accountentries: ScoreLeaderboardData_AccountEntries[];

  /**
   * @generated from field: repeated ScoreLeaderboardData.Entry matchentries = 5;
   */
  matchentries: ScoreLeaderboardData_Entry[];

  /**
   * @generated from field: optional string leaderboard_name = 6;
   */
  leaderboardName: string;
};

/**
 * Describes the message ScoreLeaderboardData.
 * Use `create(ScoreLeaderboardDataSchema)` to create a new message.
 */
export const ScoreLeaderboardDataSchema: GenMessage<ScoreLeaderboardData> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 21);

/**
 * @generated from message ScoreLeaderboardData.Entry
 */
export type ScoreLeaderboardData_Entry = Message<"ScoreLeaderboardData.Entry"> & {
  /**
   * @generated from field: optional uint32 tag = 1;
   */
  tag: number;

  /**
   * @generated from field: optional uint32 val = 2;
   */
  val: number;
};

/**
 * Describes the message ScoreLeaderboardData.Entry.
 * Use `create(ScoreLeaderboardData_EntrySchema)` to create a new message.
 */
export const ScoreLeaderboardData_EntrySchema: GenMessage<ScoreLeaderboardData_Entry> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 21, 0);

/**
 * @generated from message ScoreLeaderboardData.AccountEntries
 */
export type ScoreLeaderboardData_AccountEntries = Message<"ScoreLeaderboardData.AccountEntries"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: repeated ScoreLeaderboardData.Entry entries = 2;
   */
  entries: ScoreLeaderboardData_Entry[];
};

/**
 * Describes the message ScoreLeaderboardData.AccountEntries.
 * Use `create(ScoreLeaderboardData_AccountEntriesSchema)` to create a new message.
 */
export const ScoreLeaderboardData_AccountEntriesSchema: GenMessage<ScoreLeaderboardData_AccountEntries> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 21, 1);

/**
 * @generated from message PlayerQuestData
 */
export type PlayerQuestData = Message<"PlayerQuestData"> & {
  /**
   * @generated from field: optional uint32 quester_account_id = 1;
   */
  questerAccountId: number;

  /**
   * @generated from field: repeated PlayerQuestData.QuestItemData quest_item_data = 2;
   */
  questItemData: PlayerQuestData_QuestItemData[];

  /**
   * @generated from field: repeated XpProgressData xp_progress_data = 3;
   */
  xpProgressData: XpProgressData[];

  /**
   * @generated from field: optional uint32 time_played = 4;
   */
  timePlayed: number;

  /**
   * @generated from field: optional uint32 mm_game_mode = 5;
   */
  mmGameMode: number;

  /**
   * @generated from field: repeated MatchEndItemUpdates item_updates = 6;
   */
  itemUpdates: MatchEndItemUpdates[];

  /**
   * @generated from field: optional bool operation_points_eligible = 7;
   */
  operationPointsEligible: boolean;

  /**
   * @generated from field: repeated CMsgCsgoSteamUserStatChange userstatchanges = 8;
   */
  userstatchanges: CMsgCsgoSteamUserStatChange[];
};

/**
 * Describes the message PlayerQuestData.
 * Use `create(PlayerQuestDataSchema)` to create a new message.
 */
export const PlayerQuestDataSchema: GenMessage<PlayerQuestData> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 22);

/**
 * @generated from message PlayerQuestData.QuestItemData
 */
export type PlayerQuestData_QuestItemData = Message<"PlayerQuestData.QuestItemData"> & {
  /**
   * @generated from field: optional uint64 quest_id = 1;
   */
  questId: bigint;

  /**
   * @generated from field: optional int32 quest_normal_points_earned = 2;
   */
  questNormalPointsEarned: number;

  /**
   * @generated from field: optional int32 quest_bonus_points_earned = 3;
   */
  questBonusPointsEarned: number;

  /**
   * @generated from field: repeated int32 quest_normal_points_required = 4;
   */
  questNormalPointsRequired: number[];

  /**
   * @generated from field: repeated int32 quest_reward_xp = 5;
   */
  questRewardXp: number[];

  /**
   * @generated from field: optional int32 quest_period = 6;
   */
  questPeriod: number;

  /**
   * @generated from field: optional QuestType quest_type = 7 [default = k_EQuestType_Operation];
   */
  questType: QuestType;
};

/**
 * Describes the message PlayerQuestData.QuestItemData.
 * Use `create(PlayerQuestData_QuestItemDataSchema)` to create a new message.
 */
export const PlayerQuestData_QuestItemDataSchema: GenMessage<PlayerQuestData_QuestItemData> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 22, 0);

/**
 * @generated from message DeepPlayerStatsEntry
 */
export type DeepPlayerStatsEntry = Message<"DeepPlayerStatsEntry"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint64 match_id = 2;
   */
  matchId: bigint;

  /**
   * @generated from field: optional uint32 mm_game_mode = 3;
   */
  mmGameMode: number;

  /**
   * @generated from field: optional uint32 mapid = 4;
   */
  mapid: number;

  /**
   * @generated from field: optional bool b_starting_ct = 5;
   */
  bStartingCt: boolean;

  /**
   * @generated from field: optional uint32 match_outcome = 6;
   */
  matchOutcome: number;

  /**
   * @generated from field: optional uint32 rounds_won = 7;
   */
  roundsWon: number;

  /**
   * @generated from field: optional uint32 rounds_lost = 8;
   */
  roundsLost: number;

  /**
   * @generated from field: optional uint32 stat_score = 9;
   */
  statScore: number;

  /**
   * @generated from field: optional uint32 stat_deaths = 12;
   */
  statDeaths: number;

  /**
   * @generated from field: optional uint32 stat_mvps = 13;
   */
  statMvps: number;

  /**
   * @generated from field: optional uint32 enemy_kills = 14;
   */
  enemyKills: number;

  /**
   * @generated from field: optional uint32 enemy_headshots = 15;
   */
  enemyHeadshots: number;

  /**
   * @generated from field: optional uint32 enemy_2ks = 16;
   */
  enemy2ks: number;

  /**
   * @generated from field: optional uint32 enemy_3ks = 17;
   */
  enemy3ks: number;

  /**
   * @generated from field: optional uint32 enemy_4ks = 18;
   */
  enemy4ks: number;

  /**
   * @generated from field: optional uint32 total_damage = 19;
   */
  totalDamage: number;

  /**
   * @generated from field: optional uint32 engagements_entry_count = 23;
   */
  engagementsEntryCount: number;

  /**
   * @generated from field: optional uint32 engagements_entry_wins = 24;
   */
  engagementsEntryWins: number;

  /**
   * @generated from field: optional uint32 engagements_1v1_count = 25;
   */
  engagements1v1Count: number;

  /**
   * @generated from field: optional uint32 engagements_1v1_wins = 26;
   */
  engagements1v1Wins: number;

  /**
   * @generated from field: optional uint32 engagements_1v2_count = 27;
   */
  engagements1v2Count: number;

  /**
   * @generated from field: optional uint32 engagements_1v2_wins = 28;
   */
  engagements1v2Wins: number;

  /**
   * @generated from field: optional uint32 utility_count = 29;
   */
  utilityCount: number;

  /**
   * @generated from field: optional uint32 utility_success = 30;
   */
  utilitySuccess: number;

  /**
   * @generated from field: optional uint32 flash_count = 32;
   */
  flashCount: number;

  /**
   * @generated from field: optional uint32 flash_success = 33;
   */
  flashSuccess: number;

  /**
   * @generated from field: repeated uint32 mates = 34;
   */
  mates: number[];
};

/**
 * Describes the message DeepPlayerStatsEntry.
 * Use `create(DeepPlayerStatsEntrySchema)` to create a new message.
 */
export const DeepPlayerStatsEntrySchema: GenMessage<DeepPlayerStatsEntry> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 23);

/**
 * @generated from message DeepPlayerMatchEvent
 */
export type DeepPlayerMatchEvent = Message<"DeepPlayerMatchEvent"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint64 match_id = 2;
   */
  matchId: bigint;

  /**
   * @generated from field: optional uint32 event_id = 3;
   */
  eventId: number;

  /**
   * @generated from field: optional uint32 event_type = 4;
   */
  eventType: number;

  /**
   * @generated from field: optional bool b_playing_ct = 5;
   */
  bPlayingCt: boolean;

  /**
   * @generated from field: optional int32 user_pos_x = 6;
   */
  userPosX: number;

  /**
   * @generated from field: optional int32 user_pos_y = 7;
   */
  userPosY: number;

  /**
   * @generated from field: optional int32 user_pos_z = 12;
   */
  userPosZ: number;

  /**
   * @generated from field: optional uint32 user_defidx = 8;
   */
  userDefidx: number;

  /**
   * @generated from field: optional int32 other_pos_x = 9;
   */
  otherPosX: number;

  /**
   * @generated from field: optional int32 other_pos_y = 10;
   */
  otherPosY: number;

  /**
   * @generated from field: optional int32 other_pos_z = 13;
   */
  otherPosZ: number;

  /**
   * @generated from field: optional uint32 other_defidx = 11;
   */
  otherDefidx: number;

  /**
   * @generated from field: optional int32 event_data = 14;
   */
  eventData: number;
};

/**
 * Describes the message DeepPlayerMatchEvent.
 * Use `create(DeepPlayerMatchEventSchema)` to create a new message.
 */
export const DeepPlayerMatchEventSchema: GenMessage<DeepPlayerMatchEvent> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 24);

/**
 * @generated from message CMsgGC_ServerQuestUpdateData
 */
export type CMsgGC_ServerQuestUpdateData = Message<"CMsgGC_ServerQuestUpdateData"> & {
  /**
   * @generated from field: repeated PlayerQuestData player_quest_data = 1;
   */
  playerQuestData: PlayerQuestData[];

  /**
   * @generated from field: optional bytes binary_data = 2;
   */
  binaryData: Uint8Array;

  /**
   * @generated from field: optional uint32 mm_game_mode = 3;
   */
  mmGameMode: number;

  /**
   * @generated from field: optional ScoreLeaderboardData missionlbsdata = 4;
   */
  missionlbsdata?: ScoreLeaderboardData;

  /**
   * @generated from field: optional uint32 flags = 5;
   */
  flags: number;
};

/**
 * Describes the message CMsgGC_ServerQuestUpdateData.
 * Use `create(CMsgGC_ServerQuestUpdateDataSchema)` to create a new message.
 */
export const CMsgGC_ServerQuestUpdateDataSchema: GenMessage<CMsgGC_ServerQuestUpdateData> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 25);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm
 */
export type CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm = Message<"CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm"> & {
  /**
   * @generated from field: optional uint32 token = 1;
   */
  token: number;

  /**
   * @generated from field: optional uint32 stamp = 2;
   */
  stamp: number;

  /**
   * @generated from field: optional uint64 exchange = 3;
   */
  exchange: bigint;

  /**
   * @generated from field: optional uint32 retry = 4;
   */
  retry: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirmSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirmSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 26);

/**
 * @generated from message CMsgGCCStrike15_v2_GC2ServerReservationUpdate
 */
export type CMsgGCCStrike15_v2_GC2ServerReservationUpdate = Message<"CMsgGCCStrike15_v2_GC2ServerReservationUpdate"> & {
  /**
   * @generated from field: optional uint32 viewers_external_total = 1;
   */
  viewersExternalTotal: number;

  /**
   * @generated from field: optional uint32 viewers_external_steam = 2;
   */
  viewersExternalSteam: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GC2ServerReservationUpdate.
 * Use `create(CMsgGCCStrike15_v2_GC2ServerReservationUpdateSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GC2ServerReservationUpdateSchema: GenMessage<CMsgGCCStrike15_v2_GC2ServerReservationUpdate> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 27);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingStart
 */
export type CMsgGCCStrike15_v2_MatchmakingStart = Message<"CMsgGCCStrike15_v2_MatchmakingStart"> & {
  /**
   * @generated from field: repeated uint32 account_ids = 1;
   */
  accountIds: number[];

  /**
   * @generated from field: optional uint32 game_type = 2;
   */
  gameType: number;

  /**
   * @generated from field: optional string ticket_data = 3;
   */
  ticketData: string;

  /**
   * @generated from field: optional uint32 client_version = 4;
   */
  clientVersion: number;

  /**
   * @generated from field: optional TournamentMatchSetup tournament_match = 5;
   */
  tournamentMatch?: TournamentMatchSetup;

  /**
   * @generated from field: optional bool prime_only = 6;
   */
  primeOnly: boolean;

  /**
   * @generated from field: optional uint32 tv_control = 7;
   */
  tvControl: number;

  /**
   * @generated from field: optional uint64 lobby_id = 8;
   */
  lobbyId: bigint;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingStart.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingStartSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingStartSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingStart> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 28);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingStop
 */
export type CMsgGCCStrike15_v2_MatchmakingStop = Message<"CMsgGCCStrike15_v2_MatchmakingStop"> & {
  /**
   * @generated from field: optional int32 abandon = 1;
   */
  abandon: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingStop.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingStopSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingStopSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingStop> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 29);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note
 */
export type CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note = Message<"CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note"> & {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type: number;

  /**
   * @generated from field: optional int32 region_id = 2;
   */
  regionId: number;

  /**
   * @generated from field: optional float region_r = 3;
   */
  regionR: number;

  /**
   * @generated from field: optional float distance = 4;
   */
  distance: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_NoteSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_NoteSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 30);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingClient2ServerPing
 */
export type CMsgGCCStrike15_v2_MatchmakingClient2ServerPing = Message<"CMsgGCCStrike15_v2_MatchmakingClient2ServerPing"> & {
  /**
   * @generated from field: repeated GameServerPing gameserverpings = 1;
   */
  gameserverpings: GameServerPing[];

  /**
   * @generated from field: optional int32 offset_index = 2;
   */
  offsetIndex: number;

  /**
   * @generated from field: optional int32 final_batch = 3;
   */
  finalBatch: number;

  /**
   * @generated from field: repeated DataCenterPing data_center_pings = 4;
   */
  dataCenterPings: DataCenterPing[];

  /**
   * @generated from field: optional uint32 max_ping = 5;
   */
  maxPing: number;

  /**
   * @generated from field: optional fixed32 test_token = 6;
   */
  testToken: number;

  /**
   * @generated from field: optional bytes search_key = 7;
   */
  searchKey: Uint8Array;

  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note notes = 8;
   */
  notes: CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note[];

  /**
   * @generated from field: optional string debug_message = 9;
   */
  debugMessage: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingClient2ServerPing.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingClient2ServerPingSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingClient2ServerPingSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingClient2ServerPing> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 31);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate
 */
export type CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate = Message<"CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate"> & {
  /**
   * @generated from field: optional int32 matchmaking = 1;
   */
  matchmaking: number;

  /**
   * @generated from field: repeated uint32 waiting_account_id_sessions = 2;
   */
  waitingAccountIdSessions: number[];

  /**
   * @generated from field: optional string error = 3;
   */
  error: string;

  /**
   * @generated from field: repeated uint32 ongoingmatch_account_id_sessions = 6;
   */
  ongoingmatchAccountIdSessions: number[];

  /**
   * @generated from field: optional GlobalStatistics global_stats = 7;
   */
  globalStats?: GlobalStatistics;

  /**
   * @generated from field: repeated uint32 failping_account_id_sessions = 8;
   */
  failpingAccountIdSessions: number[];

  /**
   * @generated from field: repeated uint32 penalty_account_id_sessions = 9;
   */
  penaltyAccountIdSessions: number[];

  /**
   * @generated from field: repeated uint32 failready_account_id_sessions = 10;
   */
  failreadyAccountIdSessions: number[];

  /**
   * @generated from field: repeated uint32 vacbanned_account_id_sessions = 11;
   */
  vacbannedAccountIdSessions: number[];

  /**
   * @generated from field: optional IpAddressMask server_ipaddress_mask = 12;
   */
  serverIpaddressMask?: IpAddressMask;

  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note notes = 13;
   */
  notes: CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate_Note[];

  /**
   * @generated from field: repeated uint32 penalty_account_id_sessions_green = 14;
   */
  penaltyAccountIdSessionsGreen: number[];

  /**
   * @generated from field: repeated uint32 insufficientlevel_sessions = 15;
   */
  insufficientlevelSessions: number[];

  /**
   * @generated from field: repeated uint32 vsncheck_account_id_sessions = 16;
   */
  vsncheckAccountIdSessions: number[];

  /**
   * @generated from field: repeated uint32 launcher_mismatch_sessions = 17;
   */
  launcherMismatchSessions: number[];

  /**
   * @generated from field: repeated uint32 insecure_account_id_sessions = 18;
   */
  insecureAccountIdSessions: number[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdateSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdateSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 32);

/**
 * @generated from message CDataGCCStrike15_v2_TournamentMatchDraft
 */
export type CDataGCCStrike15_v2_TournamentMatchDraft = Message<"CDataGCCStrike15_v2_TournamentMatchDraft"> & {
  /**
   * @generated from field: optional int32 event_id = 1;
   */
  eventId: number;

  /**
   * @generated from field: optional int32 event_stage_id = 2;
   */
  eventStageId: number;

  /**
   * @generated from field: optional int32 team_id_0 = 3;
   */
  teamId0: number;

  /**
   * @generated from field: optional int32 team_id_1 = 4;
   */
  teamId1: number;

  /**
   * @generated from field: optional int32 maps_count = 5;
   */
  mapsCount: number;

  /**
   * @generated from field: optional int32 maps_current = 6;
   */
  mapsCurrent: number;

  /**
   * @generated from field: optional int32 team_id_start = 7;
   */
  teamIdStart: number;

  /**
   * @generated from field: optional int32 team_id_veto1 = 8;
   */
  teamIdVeto1: number;

  /**
   * @generated from field: optional int32 team_id_pickn = 9;
   */
  teamIdPickn: number;

  /**
   * @generated from field: repeated CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;
   */
  drafts: CDataGCCStrike15_v2_TournamentMatchDraft_Entry[];

  /**
   * @generated from field: repeated int32 vote_mapid_0 = 11;
   */
  voteMapid0: number[];

  /**
   * @generated from field: repeated int32 vote_mapid_1 = 12;
   */
  voteMapid1: number[];

  /**
   * @generated from field: repeated int32 vote_mapid_2 = 13;
   */
  voteMapid2: number[];

  /**
   * @generated from field: repeated int32 vote_mapid_3 = 14;
   */
  voteMapid3: number[];

  /**
   * @generated from field: repeated int32 vote_mapid_4 = 15;
   */
  voteMapid4: number[];

  /**
   * @generated from field: repeated int32 vote_mapid_5 = 16;
   */
  voteMapid5: number[];

  /**
   * @generated from field: repeated int32 vote_starting_side = 17;
   */
  voteStartingSide: number[];

  /**
   * @generated from field: optional int32 vote_phase = 18;
   */
  votePhase: number;

  /**
   * @generated from field: optional float vote_phase_start = 19;
   */
  votePhaseStart: number;

  /**
   * @generated from field: optional float vote_phase_length = 20;
   */
  votePhaseLength: number;
};

/**
 * Describes the message CDataGCCStrike15_v2_TournamentMatchDraft.
 * Use `create(CDataGCCStrike15_v2_TournamentMatchDraftSchema)` to create a new message.
 */
export const CDataGCCStrike15_v2_TournamentMatchDraftSchema: GenMessage<CDataGCCStrike15_v2_TournamentMatchDraft> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 33);

/**
 * @generated from message CDataGCCStrike15_v2_TournamentMatchDraft.Entry
 */
export type CDataGCCStrike15_v2_TournamentMatchDraft_Entry = Message<"CDataGCCStrike15_v2_TournamentMatchDraft.Entry"> & {
  /**
   * @generated from field: optional int32 mapid = 1;
   */
  mapid: number;

  /**
   * @generated from field: optional int32 team_id_ct = 2;
   */
  teamIdCt: number;
};

/**
 * Describes the message CDataGCCStrike15_v2_TournamentMatchDraft.Entry.
 * Use `create(CDataGCCStrike15_v2_TournamentMatchDraft_EntrySchema)` to create a new message.
 */
export const CDataGCCStrike15_v2_TournamentMatchDraft_EntrySchema: GenMessage<CDataGCCStrike15_v2_TournamentMatchDraft_Entry> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 33, 0);

/**
 * @generated from message CPreMatchInfoData
 */
export type CPreMatchInfoData = Message<"CPreMatchInfoData"> & {
  /**
   * @generated from field: optional int32 predictions_pct = 1;
   */
  predictionsPct: number;

  /**
   * @generated from field: optional CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;
   */
  draft?: CDataGCCStrike15_v2_TournamentMatchDraft;

  /**
   * @generated from field: repeated CPreMatchInfoData.TeamStats stats = 5;
   */
  stats: CPreMatchInfoData_TeamStats[];

  /**
   * @generated from field: repeated int32 wins = 6;
   */
  wins: number[];
};

/**
 * Describes the message CPreMatchInfoData.
 * Use `create(CPreMatchInfoDataSchema)` to create a new message.
 */
export const CPreMatchInfoDataSchema: GenMessage<CPreMatchInfoData> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 34);

/**
 * @generated from message CPreMatchInfoData.TeamStats
 */
export type CPreMatchInfoData_TeamStats = Message<"CPreMatchInfoData.TeamStats"> & {
  /**
   * @generated from field: optional int32 match_info_idxtxt = 1;
   */
  matchInfoIdxtxt: number;

  /**
   * @generated from field: optional string match_info_txt = 2;
   */
  matchInfoTxt: string;

  /**
   * @generated from field: repeated string match_info_teams = 3;
   */
  matchInfoTeams: string[];
};

/**
 * Describes the message CPreMatchInfoData.TeamStats.
 * Use `create(CPreMatchInfoData_TeamStatsSchema)` to create a new message.
 */
export const CPreMatchInfoData_TeamStatsSchema: GenMessage<CPreMatchInfoData_TeamStats> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 34, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve
 */
export type CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve = Message<"CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve"> & {
  /**
   * @generated from field: repeated uint32 account_ids = 1;
   */
  accountIds: number[];

  /**
   * @generated from field: optional uint32 game_type = 2;
   */
  gameType: number;

  /**
   * @generated from field: optional uint64 match_id = 3;
   */
  matchId: bigint;

  /**
   * @generated from field: optional uint32 server_version = 4;
   */
  serverVersion: number;

  /**
   * @generated from field: optional uint32 flags = 18;
   */
  flags: number;

  /**
   * @generated from field: repeated PlayerRankingInfo rankings = 5;
   */
  rankings: PlayerRankingInfo[];

  /**
   * @generated from field: optional uint64 encryption_key = 6;
   */
  encryptionKey: bigint;

  /**
   * @generated from field: optional uint64 encryption_key_pub = 7;
   */
  encryptionKeyPub: bigint;

  /**
   * @generated from field: repeated uint32 party_ids = 8;
   */
  partyIds: number[];

  /**
   * @generated from field: repeated IpAddressMask whitelist = 9;
   */
  whitelist: IpAddressMask[];

  /**
   * @generated from field: optional uint64 tv_master_steamid = 10;
   */
  tvMasterSteamid: bigint;

  /**
   * @generated from field: optional TournamentEvent tournament_event = 11;
   */
  tournamentEvent?: TournamentEvent;

  /**
   * @generated from field: repeated TournamentTeam tournament_teams = 12;
   */
  tournamentTeams: TournamentTeam[];

  /**
   * @generated from field: repeated uint32 tournament_casters_account_ids = 13;
   */
  tournamentCastersAccountIds: number[];

  /**
   * @generated from field: optional uint64 tv_relay_steamid = 14;
   */
  tvRelaySteamid: bigint;

  /**
   * @generated from field: optional CPreMatchInfoData pre_match_data = 15;
   */
  preMatchData?: CPreMatchInfoData;

  /**
   * @generated from field: optional uint32 tv_control = 17;
   */
  tvControl: number;

  /**
   * @generated from field: repeated OperationalVarValue op_var_values = 19;
   */
  opVarValues: OperationalVarValue[];

  /**
   * @generated from field: optional uint32 socache_control = 20;
   */
  socacheControl: number;

  /**
   * @generated from field: repeated int32 teammate_colors = 21;
   */
  teammateColors: number[];

  /**
   * @generated from field: optional uint32 match_id_additional = 22;
   */
  matchIdAdditional: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingGC2ServerReserveSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingGC2ServerReserveSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 35);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingServerReservationResponse
 */
export type CMsgGCCStrike15_v2_MatchmakingServerReservationResponse = Message<"CMsgGCCStrike15_v2_MatchmakingServerReservationResponse"> & {
  /**
   * @generated from field: optional uint64 reservationid = 1;
   */
  reservationid: bigint;

  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
   */
  reservation?: CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve;

  /**
   * @generated from field: optional string map = 3;
   */
  map: string;

  /**
   * @generated from field: optional uint64 gc_reservation_sent = 4;
   */
  gcReservationSent: bigint;

  /**
   * @generated from field: optional uint32 server_version = 5;
   */
  serverVersion: number;

  /**
   * @generated from field: optional ServerHltvInfo tv_info = 6;
   */
  tvInfo?: ServerHltvInfo;

  /**
   * @generated from field: repeated uint32 reward_player_accounts = 7;
   */
  rewardPlayerAccounts: number[];

  /**
   * @generated from field: repeated uint32 idle_player_accounts = 8;
   */
  idlePlayerAccounts: number[];

  /**
   * @generated from field: optional uint32 reward_item_attr_def_idx = 9;
   */
  rewardItemAttrDefIdx: number;

  /**
   * @generated from field: optional uint32 reward_item_attr_value = 10;
   */
  rewardItemAttrValue: number;

  /**
   * @generated from field: optional uint32 reward_item_attr_reward_idx = 11;
   */
  rewardItemAttrRewardIdx: number;

  /**
   * @generated from field: optional uint32 reward_drop_list = 12;
   */
  rewardDropList: number;

  /**
   * @generated from field: optional string tournament_tag = 13;
   */
  tournamentTag: string;

  /**
   * @generated from field: optional uint32 legacy_steamdatagram_port = 14;
   */
  legacySteamdatagramPort: number;

  /**
   * @generated from field: optional uint32 steamdatagram_routing = 17;
   */
  steamdatagramRouting: number;

  /**
   * @generated from field: optional fixed32 test_token = 15;
   */
  testToken: number;

  /**
   * @generated from field: optional uint32 flags = 16;
   */
  flags: number;

  /**
   * @generated from field: optional uint32 system_load = 18;
   */
  systemLoad: number;

  /**
   * @generated from field: optional uint32 cpus_online = 19;
   */
  cpusOnline: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingServerReservationResponse.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingServerReservationResponseSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingServerReservationResponseSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingServerReservationResponse> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 36);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve
 */
export type CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve = Message<"CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve"> & {
  /**
   * @generated from field: optional uint64 serverid = 1;
   */
  serverid: bigint;

  /**
   * @generated from field: optional uint32 direct_udp_ip = 2;
   */
  directUdpIp: number;

  /**
   * @generated from field: optional uint32 direct_udp_port = 3;
   */
  directUdpPort: number;

  /**
   * @generated from field: optional uint64 reservationid = 4;
   */
  reservationid: bigint;

  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 5;
   */
  reservation?: CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve;

  /**
   * @generated from field: optional string map = 6;
   */
  map: string;

  /**
   * @generated from field: optional string server_address = 7;
   */
  serverAddress: string;

  /**
   * @generated from field: optional DataCenterPing gs_ping = 8;
   */
  gsPing?: DataCenterPing;

  /**
   * @generated from field: optional uint32 gs_location_id = 9;
   */
  gsLocationId: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingGC2ClientReserveSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingGC2ClientReserveSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 37);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingServerRoundStats
 */
export type CMsgGCCStrike15_v2_MatchmakingServerRoundStats = Message<"CMsgGCCStrike15_v2_MatchmakingServerRoundStats"> & {
  /**
   * @generated from field: optional uint64 reservationid = 1;
   */
  reservationid: bigint;

  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve reservation = 2;
   */
  reservation?: CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve;

  /**
   * @generated from field: optional string map = 3;
   */
  map: string;

  /**
   * @generated from field: optional int32 round = 4;
   */
  round: number;

  /**
   * @generated from field: repeated int32 kills = 5;
   */
  kills: number[];

  /**
   * @generated from field: repeated int32 assists = 6;
   */
  assists: number[];

  /**
   * @generated from field: repeated int32 deaths = 7;
   */
  deaths: number[];

  /**
   * @generated from field: repeated int32 scores = 8;
   */
  scores: number[];

  /**
   * @generated from field: repeated int32 pings = 9;
   */
  pings: number[];

  /**
   * @generated from field: optional int32 round_result = 10;
   */
  roundResult: number;

  /**
   * @generated from field: optional int32 match_result = 11;
   */
  matchResult: number;

  /**
   * @generated from field: repeated int32 team_scores = 12;
   */
  teamScores: number[];

  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm confirm = 13;
   */
  confirm?: CMsgGCCStrike15_v2_MatchmakingGC2ServerConfirm;

  /**
   * @generated from field: optional int32 reservation_stage = 14;
   */
  reservationStage: number;

  /**
   * @generated from field: optional int32 match_duration = 15;
   */
  matchDuration: number;

  /**
   * @generated from field: repeated int32 enemy_kills = 16;
   */
  enemyKills: number[];

  /**
   * @generated from field: repeated int32 enemy_headshots = 17;
   */
  enemyHeadshots: number[];

  /**
   * @generated from field: repeated int32 enemy_3ks = 18;
   */
  enemy3ks: number[];

  /**
   * @generated from field: repeated int32 enemy_4ks = 19;
   */
  enemy4ks: number[];

  /**
   * @generated from field: repeated int32 enemy_5ks = 20;
   */
  enemy5ks: number[];

  /**
   * @generated from field: repeated int32 mvps = 21;
   */
  mvps: number[];

  /**
   * @generated from field: optional uint32 spectators_count = 22;
   */
  spectatorsCount: number;

  /**
   * @generated from field: optional uint32 spectators_count_tv = 23;
   */
  spectatorsCountTv: number;

  /**
   * @generated from field: optional uint32 spectators_count_lnk = 24;
   */
  spectatorsCountLnk: number;

  /**
   * @generated from field: repeated int32 enemy_kills_agg = 25;
   */
  enemyKillsAgg: number[];

  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo drop_info = 26;
   */
  dropInfo?: CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo;

  /**
   * @generated from field: optional bool b_switched_teams = 27;
   */
  bSwitchedTeams: boolean;

  /**
   * @generated from field: repeated int32 enemy_2ks = 28;
   */
  enemy2ks: number[];

  /**
   * @generated from field: repeated int32 player_spawned = 29;
   */
  playerSpawned: number[];

  /**
   * @generated from field: repeated int32 team_spawn_count = 30;
   */
  teamSpawnCount: number[];

  /**
   * @generated from field: optional uint32 max_rounds = 31;
   */
  maxRounds: number;

  /**
   * @generated from field: optional int32 map_id = 32;
   */
  mapId: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingServerRoundStats.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingServerRoundStatsSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingServerRoundStatsSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingServerRoundStats> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 38);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo
 */
export type CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo = Message<"CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo"> & {
  /**
   * @generated from field: optional uint32 account_mvp = 1;
   */
  accountMvp: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingServerRoundStats.DropInfo.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfoSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfoSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingServerRoundStats_DropInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 38, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingClient2GCHello
 */
export type CMsgGCCStrike15_v2_MatchmakingClient2GCHello = Message<"CMsgGCCStrike15_v2_MatchmakingClient2GCHello"> & {
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingClient2GCHello.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingClient2GCHelloSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingClient2GCHelloSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingClient2GCHello> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 39);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingGC2ClientHello
 */
export type CMsgGCCStrike15_v2_MatchmakingGC2ClientHello = Message<"CMsgGCCStrike15_v2_MatchmakingGC2ClientHello"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve ongoingmatch = 2;
   */
  ongoingmatch?: CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve;

  /**
   * @generated from field: optional GlobalStatistics global_stats = 3;
   */
  globalStats?: GlobalStatistics;

  /**
   * @generated from field: optional uint32 penalty_seconds = 4;
   */
  penaltySeconds: number;

  /**
   * @generated from field: optional uint32 penalty_reason = 5;
   */
  penaltyReason: number;

  /**
   * @generated from field: optional int32 vac_banned = 6;
   */
  vacBanned: number;

  /**
   * @generated from field: optional PlayerRankingInfo ranking = 7;
   */
  ranking?: PlayerRankingInfo;

  /**
   * @generated from field: optional PlayerCommendationInfo commendation = 8;
   */
  commendation?: PlayerCommendationInfo;

  /**
   * @generated from field: optional PlayerMedalsInfo medals = 9;
   */
  medals?: PlayerMedalsInfo;

  /**
   * @generated from field: optional TournamentEvent my_current_event = 10;
   */
  myCurrentEvent?: TournamentEvent;

  /**
   * @generated from field: repeated TournamentTeam my_current_event_teams = 11;
   */
  myCurrentEventTeams: TournamentTeam[];

  /**
   * @generated from field: optional TournamentTeam my_current_team = 12;
   */
  myCurrentTeam?: TournamentTeam;

  /**
   * @generated from field: repeated TournamentEvent my_current_event_stages = 13;
   */
  myCurrentEventStages: TournamentEvent[];

  /**
   * @generated from field: optional uint32 survey_vote = 14;
   */
  surveyVote: number;

  /**
   * @generated from field: optional AccountActivity activity = 15;
   */
  activity?: AccountActivity;

  /**
   * @generated from field: optional int32 player_level = 17;
   */
  playerLevel: number;

  /**
   * @generated from field: optional int32 player_cur_xp = 18;
   */
  playerCurXp: number;

  /**
   * @generated from field: optional int32 player_xp_bonus_flags = 19;
   */
  playerXpBonusFlags: number;

  /**
   * @generated from field: repeated PlayerRankingInfo rankings = 20;
   */
  rankings: PlayerRankingInfo[];

  /**
   * @generated from field: optional uint64 owcaseid = 21;
   */
  owcaseid: bigint;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingGC2ClientHello.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingGC2ClientHelloSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingGC2ClientHelloSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientHello> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 40);

/**
 * @generated from message CMsgGCCStrike15_v2_AccountPrivacySettings
 */
export type CMsgGCCStrike15_v2_AccountPrivacySettings = Message<"CMsgGCCStrike15_v2_AccountPrivacySettings"> & {
  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_AccountPrivacySettings.Setting settings = 1;
   */
  settings: CMsgGCCStrike15_v2_AccountPrivacySettings_Setting[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_AccountPrivacySettings.
 * Use `create(CMsgGCCStrike15_v2_AccountPrivacySettingsSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_AccountPrivacySettingsSchema: GenMessage<CMsgGCCStrike15_v2_AccountPrivacySettings> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 41);

/**
 * @generated from message CMsgGCCStrike15_v2_AccountPrivacySettings.Setting
 */
export type CMsgGCCStrike15_v2_AccountPrivacySettings_Setting = Message<"CMsgGCCStrike15_v2_AccountPrivacySettings.Setting"> & {
  /**
   * @generated from field: optional uint32 setting_type = 1;
   */
  settingType: number;

  /**
   * @generated from field: optional uint32 setting_value = 2;
   */
  settingValue: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_AccountPrivacySettings.Setting.
 * Use `create(CMsgGCCStrike15_v2_AccountPrivacySettings_SettingSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_AccountPrivacySettings_SettingSchema: GenMessage<CMsgGCCStrike15_v2_AccountPrivacySettings_Setting> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 41, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon
 */
export type CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon = Message<"CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve abandoned_match = 2;
   */
  abandonedMatch?: CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve;

  /**
   * @generated from field: optional uint32 penalty_seconds = 3;
   */
  penaltySeconds: number;

  /**
   * @generated from field: optional uint32 penalty_reason = 4;
   */
  penaltyReason: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandonSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandonSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 42);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientGCRankUpdate
 */
export type CMsgGCCStrike15_v2_ClientGCRankUpdate = Message<"CMsgGCCStrike15_v2_ClientGCRankUpdate"> & {
  /**
   * @generated from field: repeated PlayerRankingInfo rankings = 1;
   */
  rankings: PlayerRankingInfo[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientGCRankUpdate.
 * Use `create(CMsgGCCStrike15_v2_ClientGCRankUpdateSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientGCRankUpdateSchema: GenMessage<CMsgGCCStrike15_v2_ClientGCRankUpdate> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 43);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate
 */
export type CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate = Message<"CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate"> & {
  /**
   * @generated from field: optional string main_post_url = 1;
   */
  mainPostUrl: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdateSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdateSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 44);

/**
 * @generated from message CMsgGCCStrike15_v2_ServerNotificationForUserPenalty
 */
export type CMsgGCCStrike15_v2_ServerNotificationForUserPenalty = Message<"CMsgGCCStrike15_v2_ServerNotificationForUserPenalty"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 reason = 2;
   */
  reason: number;

  /**
   * @generated from field: optional uint32 seconds = 3;
   */
  seconds: number;

  /**
   * @generated from field: optional bool communication_cooldown = 4;
   */
  communicationCooldown: boolean;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ServerNotificationForUserPenalty.
 * Use `create(CMsgGCCStrike15_v2_ServerNotificationForUserPenaltySchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ServerNotificationForUserPenaltySchema: GenMessage<CMsgGCCStrike15_v2_ServerNotificationForUserPenalty> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 45);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientReportPlayer
 */
export type CMsgGCCStrike15_v2_ClientReportPlayer = Message<"CMsgGCCStrike15_v2_ClientReportPlayer"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 rpt_aimbot = 2;
   */
  rptAimbot: number;

  /**
   * @generated from field: optional uint32 rpt_wallhack = 3;
   */
  rptWallhack: number;

  /**
   * @generated from field: optional uint32 rpt_speedhack = 4;
   */
  rptSpeedhack: number;

  /**
   * @generated from field: optional uint32 rpt_teamharm = 5;
   */
  rptTeamharm: number;

  /**
   * @generated from field: optional uint32 rpt_textabuse = 6;
   */
  rptTextabuse: number;

  /**
   * @generated from field: optional uint32 rpt_voiceabuse = 7;
   */
  rptVoiceabuse: number;

  /**
   * @generated from field: optional uint64 match_id = 8;
   */
  matchId: bigint;

  /**
   * @generated from field: optional bool report_from_demo = 9;
   */
  reportFromDemo: boolean;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientReportPlayer.
 * Use `create(CMsgGCCStrike15_v2_ClientReportPlayerSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientReportPlayerSchema: GenMessage<CMsgGCCStrike15_v2_ClientReportPlayer> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 46);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientCommendPlayer
 */
export type CMsgGCCStrike15_v2_ClientCommendPlayer = Message<"CMsgGCCStrike15_v2_ClientCommendPlayer"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint64 match_id = 8;
   */
  matchId: bigint;

  /**
   * @generated from field: optional PlayerCommendationInfo commendation = 9;
   */
  commendation?: PlayerCommendationInfo;

  /**
   * @generated from field: optional uint32 tokens = 10;
   */
  tokens: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientCommendPlayer.
 * Use `create(CMsgGCCStrike15_v2_ClientCommendPlayerSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientCommendPlayerSchema: GenMessage<CMsgGCCStrike15_v2_ClientCommendPlayer> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 47);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientReportServer
 */
export type CMsgGCCStrike15_v2_ClientReportServer = Message<"CMsgGCCStrike15_v2_ClientReportServer"> & {
  /**
   * @generated from field: optional uint32 rpt_poorperf = 1;
   */
  rptPoorperf: number;

  /**
   * @generated from field: optional uint32 rpt_abusivemodels = 2;
   */
  rptAbusivemodels: number;

  /**
   * @generated from field: optional uint32 rpt_badmotd = 3;
   */
  rptBadmotd: number;

  /**
   * @generated from field: optional uint32 rpt_listingabuse = 4;
   */
  rptListingabuse: number;

  /**
   * @generated from field: optional uint32 rpt_inventoryabuse = 5;
   */
  rptInventoryabuse: number;

  /**
   * @generated from field: optional uint64 match_id = 8;
   */
  matchId: bigint;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientReportServer.
 * Use `create(CMsgGCCStrike15_v2_ClientReportServerSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientReportServerSchema: GenMessage<CMsgGCCStrike15_v2_ClientReportServer> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 48);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientReportResponse
 */
export type CMsgGCCStrike15_v2_ClientReportResponse = Message<"CMsgGCCStrike15_v2_ClientReportResponse"> & {
  /**
   * @generated from field: optional uint64 confirmation_id = 1;
   */
  confirmationId: bigint;

  /**
   * @generated from field: optional uint32 account_id = 2;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 server_ip = 3;
   */
  serverIp: number;

  /**
   * @generated from field: optional uint32 response_type = 4;
   */
  responseType: number;

  /**
   * @generated from field: optional uint32 response_result = 5;
   */
  responseResult: number;

  /**
   * @generated from field: optional uint32 tokens = 6;
   */
  tokens: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientReportResponse.
 * Use `create(CMsgGCCStrike15_v2_ClientReportResponseSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientReportResponseSchema: GenMessage<CMsgGCCStrike15_v2_ClientReportResponse> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 49);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends
 */
export type CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends = Message<"CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends"> & {
  /**
   * @generated from field: optional uint32 request_id = 1;
   */
  requestId: number;

  /**
   * @generated from field: repeated uint32 account_ids = 2;
   */
  accountIds: number[];

  /**
   * @generated from field: optional uint64 serverid = 3;
   */
  serverid: bigint;

  /**
   * @generated from field: optional uint64 matchid = 4;
   */
  matchid: bigint;

  /**
   * @generated from field: optional uint32 client_launcher = 5;
   */
  clientLauncher: number;

  /**
   * @generated from field: repeated DataCenterPing data_center_pings = 6;
   */
  dataCenterPings: DataCenterPing[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends.
 * Use `create(CMsgGCCStrike15_v2_ClientRequestWatchInfoFriendsSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientRequestWatchInfoFriendsSchema: GenMessage<CMsgGCCStrike15_v2_ClientRequestWatchInfoFriends> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 50);

/**
 * @generated from message WatchableMatchInfo
 */
export type WatchableMatchInfo = Message<"WatchableMatchInfo"> & {
  /**
   * @generated from field: optional uint32 server_ip = 1;
   */
  serverIp: number;

  /**
   * @generated from field: optional uint32 tv_port = 2;
   */
  tvPort: number;

  /**
   * @generated from field: optional uint32 tv_spectators = 3;
   */
  tvSpectators: number;

  /**
   * @generated from field: optional uint32 tv_time = 4;
   */
  tvTime: number;

  /**
   * @generated from field: optional bytes tv_watch_password = 5;
   */
  tvWatchPassword: Uint8Array;

  /**
   * @generated from field: optional uint64 cl_decryptdata_key = 6;
   */
  clDecryptdataKey: bigint;

  /**
   * @generated from field: optional uint64 cl_decryptdata_key_pub = 7;
   */
  clDecryptdataKeyPub: bigint;

  /**
   * @generated from field: optional uint32 game_type = 8;
   */
  gameType: number;

  /**
   * @generated from field: optional string game_mapgroup = 9;
   */
  gameMapgroup: string;

  /**
   * @generated from field: optional string game_map = 10;
   */
  gameMap: string;

  /**
   * @generated from field: optional uint64 server_id = 11;
   */
  serverId: bigint;

  /**
   * @generated from field: optional uint64 match_id = 12;
   */
  matchId: bigint;

  /**
   * @generated from field: optional uint64 reservation_id = 13;
   */
  reservationId: bigint;
};

/**
 * Describes the message WatchableMatchInfo.
 * Use `create(WatchableMatchInfoSchema)` to create a new message.
 */
export const WatchableMatchInfoSchema: GenMessage<WatchableMatchInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 51);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientRequestJoinFriendData
 */
export type CMsgGCCStrike15_v2_ClientRequestJoinFriendData = Message<"CMsgGCCStrike15_v2_ClientRequestJoinFriendData"> & {
  /**
   * @generated from field: optional uint32 version = 1;
   */
  version: number;

  /**
   * @generated from field: optional uint32 account_id = 2;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 join_token = 3;
   */
  joinToken: number;

  /**
   * @generated from field: optional uint32 join_ipp = 4;
   */
  joinIpp: number;

  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res = 5;
   */
  res?: CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve;

  /**
   * @generated from field: optional string errormsg = 6;
   */
  errormsg: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientRequestJoinFriendData.
 * Use `create(CMsgGCCStrike15_v2_ClientRequestJoinFriendDataSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientRequestJoinFriendDataSchema: GenMessage<CMsgGCCStrike15_v2_ClientRequestJoinFriendData> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 52);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientRequestJoinServerData
 */
export type CMsgGCCStrike15_v2_ClientRequestJoinServerData = Message<"CMsgGCCStrike15_v2_ClientRequestJoinServerData"> & {
  /**
   * @generated from field: optional uint32 version = 1;
   */
  version: number;

  /**
   * @generated from field: optional uint32 account_id = 2;
   */
  accountId: number;

  /**
   * @generated from field: optional uint64 serverid = 3;
   */
  serverid: bigint;

  /**
   * @generated from field: optional uint32 server_ip = 4;
   */
  serverIp: number;

  /**
   * @generated from field: optional uint32 server_port = 5;
   */
  serverPort: number;

  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve res = 6;
   */
  res?: CMsgGCCStrike15_v2_MatchmakingGC2ClientReserve;

  /**
   * @generated from field: optional string errormsg = 7;
   */
  errormsg: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientRequestJoinServerData.
 * Use `create(CMsgGCCStrike15_v2_ClientRequestJoinServerDataSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientRequestJoinServerDataSchema: GenMessage<CMsgGCCStrike15_v2_ClientRequestJoinServerData> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 53);

/**
 * @generated from message CMsgGCCstrike15_v2_ClientRedeemMissionReward
 */
export type CMsgGCCstrike15_v2_ClientRedeemMissionReward = Message<"CMsgGCCstrike15_v2_ClientRedeemMissionReward"> & {
  /**
   * @generated from field: optional uint32 campaign_id = 1;
   */
  campaignId: number;

  /**
   * @generated from field: optional uint32 redeem_id = 2;
   */
  redeemId: number;

  /**
   * @generated from field: optional uint32 redeemable_balance = 3;
   */
  redeemableBalance: number;

  /**
   * @generated from field: optional uint32 expected_cost = 4;
   */
  expectedCost: number;

  /**
   * @generated from field: optional int32 bid_control = 5;
   */
  bidControl: number;
};

/**
 * Describes the message CMsgGCCstrike15_v2_ClientRedeemMissionReward.
 * Use `create(CMsgGCCstrike15_v2_ClientRedeemMissionRewardSchema)` to create a new message.
 */
export const CMsgGCCstrike15_v2_ClientRedeemMissionRewardSchema: GenMessage<CMsgGCCstrike15_v2_ClientRedeemMissionReward> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 54);

/**
 * @generated from message CMsgGCCstrike15_v2_ClientRedeemFreeReward
 */
export type CMsgGCCstrike15_v2_ClientRedeemFreeReward = Message<"CMsgGCCstrike15_v2_ClientRedeemFreeReward"> & {
  /**
   * @generated from field: optional uint32 generation_time = 1;
   */
  generationTime: number;

  /**
   * @generated from field: optional uint32 redeemable_balance = 2;
   */
  redeemableBalance: number;

  /**
   * @generated from field: repeated uint64 items = 3;
   */
  items: bigint[];
};

/**
 * Describes the message CMsgGCCstrike15_v2_ClientRedeemFreeReward.
 * Use `create(CMsgGCCstrike15_v2_ClientRedeemFreeRewardSchema)` to create a new message.
 */
export const CMsgGCCstrike15_v2_ClientRedeemFreeRewardSchema: GenMessage<CMsgGCCstrike15_v2_ClientRedeemFreeReward> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 55);

/**
 * @generated from message CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded
 */
export type CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded = Message<"CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded"> & {
  /**
   * @generated from field: repeated XpProgressData xp_progress_data = 1;
   */
  xpProgressData: XpProgressData[];

  /**
   * @generated from field: optional uint32 account_id = 2;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 current_xp = 3;
   */
  currentXp: number;

  /**
   * @generated from field: optional uint32 current_level = 4;
   */
  currentLevel: number;

  /**
   * @generated from field: optional uint32 upgraded_defidx = 5;
   */
  upgradedDefidx: number;

  /**
   * @generated from field: optional uint32 operation_points_awarded = 6;
   */
  operationPointsAwarded: number;

  /**
   * @generated from field: optional uint32 free_rewards = 7;
   */
  freeRewards: number;

  /**
   * @generated from field: optional uint32 xp_trail_remaining = 8;
   */
  xpTrailRemaining: number;

  /**
   * @generated from field: optional int32 xp_trail_xp_needed = 9;
   */
  xpTrailXpNeeded: number;

  /**
   * @generated from field: optional uint32 xp_trail_level = 10;
   */
  xpTrailLevel: number;
};

/**
 * Describes the message CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded.
 * Use `create(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewardedSchema)` to create a new message.
 */
export const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewardedSchema: GenMessage<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 56);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientNetworkConfig
 */
export type CMsgGCCStrike15_v2_ClientNetworkConfig = Message<"CMsgGCCStrike15_v2_ClientNetworkConfig"> & {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data: Uint8Array;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientNetworkConfig.
 * Use `create(CMsgGCCStrike15_v2_ClientNetworkConfigSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientNetworkConfigSchema: GenMessage<CMsgGCCStrike15_v2_ClientNetworkConfig> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 57);

/**
 * @generated from message CMsgGCCStrike15_ClientDeepStats
 */
export type CMsgGCCStrike15_ClientDeepStats = Message<"CMsgGCCStrike15_ClientDeepStats"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;
   */
  range?: CMsgGCCStrike15_ClientDeepStats_DeepStatsRange;

  /**
   * @generated from field: repeated CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;
   */
  matches: CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch[];
};

/**
 * Describes the message CMsgGCCStrike15_ClientDeepStats.
 * Use `create(CMsgGCCStrike15_ClientDeepStatsSchema)` to create a new message.
 */
export const CMsgGCCStrike15_ClientDeepStatsSchema: GenMessage<CMsgGCCStrike15_ClientDeepStats> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 58);

/**
 * @generated from message CMsgGCCStrike15_ClientDeepStats.DeepStatsRange
 */
export type CMsgGCCStrike15_ClientDeepStats_DeepStatsRange = Message<"CMsgGCCStrike15_ClientDeepStats.DeepStatsRange"> & {
  /**
   * @generated from field: optional uint32 begin = 1;
   */
  begin: number;

  /**
   * @generated from field: optional uint32 end = 2;
   */
  end: number;

  /**
   * @generated from field: optional bool frozen = 3;
   */
  frozen: boolean;
};

/**
 * Describes the message CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.
 * Use `create(CMsgGCCStrike15_ClientDeepStats_DeepStatsRangeSchema)` to create a new message.
 */
export const CMsgGCCStrike15_ClientDeepStats_DeepStatsRangeSchema: GenMessage<CMsgGCCStrike15_ClientDeepStats_DeepStatsRange> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 58, 0);

/**
 * @generated from message CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch
 */
export type CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch = Message<"CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch"> & {
  /**
   * @generated from field: optional DeepPlayerStatsEntry player = 1;
   */
  player?: DeepPlayerStatsEntry;

  /**
   * @generated from field: repeated DeepPlayerMatchEvent events = 2;
   */
  events: DeepPlayerMatchEvent[];
};

/**
 * Describes the message CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.
 * Use `create(CMsgGCCStrike15_ClientDeepStats_DeepStatsMatchSchema)` to create a new message.
 */
export const CMsgGCCStrike15_ClientDeepStats_DeepStatsMatchSchema: GenMessage<CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 58, 1);

/**
 * @generated from message CMsgGCCStrike15_v2_WatchInfoUsers
 */
export type CMsgGCCStrike15_v2_WatchInfoUsers = Message<"CMsgGCCStrike15_v2_WatchInfoUsers"> & {
  /**
   * @generated from field: optional uint32 request_id = 1;
   */
  requestId: number;

  /**
   * @generated from field: repeated uint32 account_ids = 2;
   */
  accountIds: number[];

  /**
   * @generated from field: repeated WatchableMatchInfo watchable_match_infos = 3;
   */
  watchableMatchInfos: WatchableMatchInfo[];

  /**
   * @generated from field: optional uint32 extended_timeout = 5;
   */
  extendedTimeout: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_WatchInfoUsers.
 * Use `create(CMsgGCCStrike15_v2_WatchInfoUsersSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_WatchInfoUsersSchema: GenMessage<CMsgGCCStrike15_v2_WatchInfoUsers> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 59);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientRequestPlayersProfile
 */
export type CMsgGCCStrike15_v2_ClientRequestPlayersProfile = Message<"CMsgGCCStrike15_v2_ClientRequestPlayersProfile"> & {
  /**
   * @generated from field: optional uint32 request_id__deprecated = 1;
   */
  requestIdDeprecated: number;

  /**
   * @generated from field: repeated uint32 account_ids__deprecated = 2;
   */
  accountIdsDeprecated: number[];

  /**
   * @generated from field: optional uint32 account_id = 3;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 request_level = 4;
   */
  requestLevel: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientRequestPlayersProfile.
 * Use `create(CMsgGCCStrike15_v2_ClientRequestPlayersProfileSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientRequestPlayersProfileSchema: GenMessage<CMsgGCCStrike15_v2_ClientRequestPlayersProfile> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 60);

/**
 * @generated from message CMsgGCCStrike15_v2_PlayersProfile
 */
export type CMsgGCCStrike15_v2_PlayersProfile = Message<"CMsgGCCStrike15_v2_PlayersProfile"> & {
  /**
   * @generated from field: optional uint32 request_id = 1;
   */
  requestId: number;

  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_MatchmakingGC2ClientHello account_profiles = 2;
   */
  accountProfiles: CMsgGCCStrike15_v2_MatchmakingGC2ClientHello[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_PlayersProfile.
 * Use `create(CMsgGCCStrike15_v2_PlayersProfileSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_PlayersProfileSchema: GenMessage<CMsgGCCStrike15_v2_PlayersProfile> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 61);

/**
 * @generated from message CMsgGCCStrike15_v2_PremierSeasonSummary
 */
export type CMsgGCCStrike15_v2_PremierSeasonSummary = Message<"CMsgGCCStrike15_v2_PremierSeasonSummary"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 season_id = 2;
   */
  seasonId: number;

  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_PremierSeasonSummary.DataPerWeek data_per_week = 3;
   */
  dataPerWeek: CMsgGCCStrike15_v2_PremierSeasonSummary_DataPerWeek[];

  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_PremierSeasonSummary.DataPerMap data_per_map = 4;
   */
  dataPerMap: CMsgGCCStrike15_v2_PremierSeasonSummary_DataPerMap[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_PremierSeasonSummary.
 * Use `create(CMsgGCCStrike15_v2_PremierSeasonSummarySchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_PremierSeasonSummarySchema: GenMessage<CMsgGCCStrike15_v2_PremierSeasonSummary> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 62);

/**
 * @generated from message CMsgGCCStrike15_v2_PremierSeasonSummary.DataPerWeek
 */
export type CMsgGCCStrike15_v2_PremierSeasonSummary_DataPerWeek = Message<"CMsgGCCStrike15_v2_PremierSeasonSummary.DataPerWeek"> & {
  /**
   * @generated from field: optional uint64 week_id = 1;
   */
  weekId: bigint;

  /**
   * @generated from field: optional uint32 rank_id = 2;
   */
  rankId: number;

  /**
   * @generated from field: optional uint32 matches_played = 3;
   */
  matchesPlayed: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_PremierSeasonSummary.DataPerWeek.
 * Use `create(CMsgGCCStrike15_v2_PremierSeasonSummary_DataPerWeekSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_PremierSeasonSummary_DataPerWeekSchema: GenMessage<CMsgGCCStrike15_v2_PremierSeasonSummary_DataPerWeek> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 62, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_PremierSeasonSummary.DataPerMap
 */
export type CMsgGCCStrike15_v2_PremierSeasonSummary_DataPerMap = Message<"CMsgGCCStrike15_v2_PremierSeasonSummary.DataPerMap"> & {
  /**
   * @generated from field: optional uint32 map_id = 1;
   */
  mapId: number;

  /**
   * @generated from field: optional uint32 wins = 2;
   */
  wins: number;

  /**
   * @generated from field: optional uint32 ties = 3;
   */
  ties: number;

  /**
   * @generated from field: optional uint32 losses = 4;
   */
  losses: number;

  /**
   * @generated from field: optional uint32 rounds = 5;
   */
  rounds: number;

  /**
   * @generated from field: optional uint32 kills = 6;
   */
  kills: number;

  /**
   * @generated from field: optional uint32 headshots = 7;
   */
  headshots: number;

  /**
   * @generated from field: optional uint32 assists = 8;
   */
  assists: number;

  /**
   * @generated from field: optional uint32 deaths = 9;
   */
  deaths: number;

  /**
   * @generated from field: optional uint32 mvps = 10;
   */
  mvps: number;

  /**
   * @generated from field: optional uint32 rounds_3k = 11;
   */
  rounds3k: number;

  /**
   * @generated from field: optional uint32 rounds_4k = 12;
   */
  rounds4k: number;

  /**
   * @generated from field: optional uint32 rounds_5k = 13;
   */
  rounds5k: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_PremierSeasonSummary.DataPerMap.
 * Use `create(CMsgGCCStrike15_v2_PremierSeasonSummary_DataPerMapSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_PremierSeasonSummary_DataPerMapSchema: GenMessage<CMsgGCCStrike15_v2_PremierSeasonSummary_DataPerMap> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 62, 1);

/**
 * @generated from message CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate
 */
export type CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate = Message<"CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate"> & {
  /**
   * @generated from field: optional uint64 caseid = 1;
   */
  caseid: bigint;

  /**
   * @generated from field: optional uint32 suspectid = 3;
   */
  suspectid: number;

  /**
   * @generated from field: optional uint32 fractionid = 4;
   */
  fractionid: number;

  /**
   * @generated from field: optional uint32 rpt_aimbot = 5;
   */
  rptAimbot: number;

  /**
   * @generated from field: optional uint32 rpt_wallhack = 6;
   */
  rptWallhack: number;

  /**
   * @generated from field: optional uint32 rpt_speedhack = 7;
   */
  rptSpeedhack: number;

  /**
   * @generated from field: optional uint32 rpt_teamharm = 8;
   */
  rptTeamharm: number;

  /**
   * @generated from field: optional uint32 reason = 9;
   */
  reason: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate.
 * Use `create(CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdateSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdateSchema: GenMessage<CMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 63);

/**
 * @generated from message CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment
 */
export type CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment = Message<"CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment"> & {
  /**
   * @generated from field: optional uint64 caseid = 1;
   */
  caseid: bigint;

  /**
   * @generated from field: optional string caseurl = 2;
   */
  caseurl: string;

  /**
   * @generated from field: optional uint32 verdict = 3;
   */
  verdict: number;

  /**
   * @generated from field: optional uint32 timestamp = 4;
   */
  timestamp: number;

  /**
   * @generated from field: optional uint32 throttleseconds = 5;
   */
  throttleseconds: number;

  /**
   * @generated from field: optional uint32 suspectid = 6;
   */
  suspectid: number;

  /**
   * @generated from field: optional uint32 fractionid = 7;
   */
  fractionid: number;

  /**
   * @generated from field: optional uint32 numrounds = 8;
   */
  numrounds: number;

  /**
   * @generated from field: optional uint32 fractionrounds = 9;
   */
  fractionrounds: number;

  /**
   * @generated from field: optional int32 streakconvictions = 10;
   */
  streakconvictions: number;

  /**
   * @generated from field: optional uint32 reason = 11;
   */
  reason: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment.
 * Use `create(CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignmentSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignmentSchema: GenMessage<CMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 64);

/**
 * @generated from message CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus
 */
export type CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus = Message<"CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus"> & {
  /**
   * @generated from field: optional uint64 caseid = 1;
   */
  caseid: bigint;

  /**
   * @generated from field: optional uint32 statusid = 2;
   */
  statusid: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus.
 * Use `create(CMsgGCCStrike15_v2_PlayerOverwatchCaseStatusSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_PlayerOverwatchCaseStatusSchema: GenMessage<CMsgGCCStrike15_v2_PlayerOverwatchCaseStatus> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 65);

/**
 * @generated from message CClientHeaderOverwatchEvidence
 */
export type CClientHeaderOverwatchEvidence = Message<"CClientHeaderOverwatchEvidence"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint64 caseid = 2;
   */
  caseid: bigint;
};

/**
 * Describes the message CClientHeaderOverwatchEvidence.
 * Use `create(CClientHeaderOverwatchEvidenceSchema)` to create a new message.
 */
export const CClientHeaderOverwatchEvidenceSchema: GenMessage<CClientHeaderOverwatchEvidence> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 66);

/**
 * @generated from message CMsgGCCStrike15_v2_GC2ClientTextMsg
 */
export type CMsgGCCStrike15_v2_GC2ClientTextMsg = Message<"CMsgGCCStrike15_v2_GC2ClientTextMsg"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional uint32 type = 2;
   */
  type: number;

  /**
   * @generated from field: optional bytes payload = 3;
   */
  payload: Uint8Array;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GC2ClientTextMsg.
 * Use `create(CMsgGCCStrike15_v2_GC2ClientTextMsgSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GC2ClientTextMsgSchema: GenMessage<CMsgGCCStrike15_v2_GC2ClientTextMsg> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 67);

/**
 * @generated from message CMsgGCCStrike15_v2_Client2GCTextMsg
 */
export type CMsgGCCStrike15_v2_Client2GCTextMsg = Message<"CMsgGCCStrike15_v2_Client2GCTextMsg"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: repeated bytes args = 2;
   */
  args: Uint8Array[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_Client2GCTextMsg.
 * Use `create(CMsgGCCStrike15_v2_Client2GCTextMsgSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Client2GCTextMsgSchema: GenMessage<CMsgGCCStrike15_v2_Client2GCTextMsg> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 68);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchEndRunRewardDrops
 */
export type CMsgGCCStrike15_v2_MatchEndRunRewardDrops = Message<"CMsgGCCStrike15_v2_MatchEndRunRewardDrops"> & {
  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingServerReservationResponse serverinfo = 3;
   */
  serverinfo?: CMsgGCCStrike15_v2_MatchmakingServerReservationResponse;

  /**
   * @generated from field: optional CMsgGC_ServerQuestUpdateData match_end_quest_data = 4;
   */
  matchEndQuestData?: CMsgGC_ServerQuestUpdateData;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchEndRunRewardDrops.
 * Use `create(CMsgGCCStrike15_v2_MatchEndRunRewardDropsSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchEndRunRewardDropsSchema: GenMessage<CMsgGCCStrike15_v2_MatchEndRunRewardDrops> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 69);

/**
 * @generated from message CEconItemPreviewDataBlock
 */
export type CEconItemPreviewDataBlock = Message<"CEconItemPreviewDataBlock"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint64 itemid = 2;
   */
  itemid: bigint;

  /**
   * @generated from field: optional uint32 defindex = 3;
   */
  defindex: number;

  /**
   * @generated from field: optional uint32 paintindex = 4;
   */
  paintindex: number;

  /**
   * @generated from field: optional uint32 rarity = 5;
   */
  rarity: number;

  /**
   * @generated from field: optional uint32 quality = 6;
   */
  quality: number;

  /**
   * @generated from field: optional uint32 paintwear = 7;
   */
  paintwear: number;

  /**
   * @generated from field: optional uint32 paintseed = 8;
   */
  paintseed: number;

  /**
   * @generated from field: optional uint32 killeaterscoretype = 9;
   */
  killeaterscoretype: number;

  /**
   * @generated from field: optional uint32 killeatervalue = 10;
   */
  killeatervalue: number;

  /**
   * @generated from field: optional string customname = 11;
   */
  customname: string;

  /**
   * @generated from field: repeated CEconItemPreviewDataBlock.Sticker stickers = 12;
   */
  stickers: CEconItemPreviewDataBlock_Sticker[];

  /**
   * @generated from field: optional uint32 inventory = 13;
   */
  inventory: number;

  /**
   * @generated from field: optional uint32 origin = 14;
   */
  origin: number;

  /**
   * @generated from field: optional uint32 questid = 15;
   */
  questid: number;

  /**
   * @generated from field: optional uint32 dropreason = 16;
   */
  dropreason: number;

  /**
   * @generated from field: optional uint32 musicindex = 17;
   */
  musicindex: number;

  /**
   * @generated from field: optional int32 entindex = 18;
   */
  entindex: number;

  /**
   * @generated from field: optional uint32 petindex = 19;
   */
  petindex: number;

  /**
   * @generated from field: repeated CEconItemPreviewDataBlock.Sticker keychains = 20;
   */
  keychains: CEconItemPreviewDataBlock_Sticker[];

  /**
   * @generated from field: optional uint32 style = 21;
   */
  style: number;

  /**
   * @generated from field: repeated CEconItemPreviewDataBlock.Sticker variations = 22;
   */
  variations: CEconItemPreviewDataBlock_Sticker[];

  /**
   * @generated from field: optional uint32 upgrade_level = 23;
   */
  upgradeLevel: number;
};

/**
 * Describes the message CEconItemPreviewDataBlock.
 * Use `create(CEconItemPreviewDataBlockSchema)` to create a new message.
 */
export const CEconItemPreviewDataBlockSchema: GenMessage<CEconItemPreviewDataBlock> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 70);

/**
 * @generated from message CEconItemPreviewDataBlock.Sticker
 */
export type CEconItemPreviewDataBlock_Sticker = Message<"CEconItemPreviewDataBlock.Sticker"> & {
  /**
   * @generated from field: optional uint32 slot = 1;
   */
  slot: number;

  /**
   * @generated from field: optional uint32 sticker_id = 2;
   */
  stickerId: number;

  /**
   * @generated from field: optional float wear = 3;
   */
  wear: number;

  /**
   * @generated from field: optional float scale = 4;
   */
  scale: number;

  /**
   * @generated from field: optional float rotation = 5;
   */
  rotation: number;

  /**
   * @generated from field: optional uint32 tint_id = 6;
   */
  tintId: number;

  /**
   * @generated from field: optional float offset_x = 7;
   */
  offsetX: number;

  /**
   * @generated from field: optional float offset_y = 8;
   */
  offsetY: number;

  /**
   * @generated from field: optional float offset_z = 9;
   */
  offsetZ: number;

  /**
   * @generated from field: optional uint32 pattern = 10;
   */
  pattern: number;

  /**
   * @generated from field: optional uint32 highlight_reel = 11;
   */
  highlightReel: number;
};

/**
 * Describes the message CEconItemPreviewDataBlock.Sticker.
 * Use `create(CEconItemPreviewDataBlock_StickerSchema)` to create a new message.
 */
export const CEconItemPreviewDataBlock_StickerSchema: GenMessage<CEconItemPreviewDataBlock_Sticker> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 70, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchEndRewardDropsNotification
 */
export type CMsgGCCStrike15_v2_MatchEndRewardDropsNotification = Message<"CMsgGCCStrike15_v2_MatchEndRewardDropsNotification"> & {
  /**
   * @generated from field: optional CEconItemPreviewDataBlock iteminfo = 6;
   */
  iteminfo?: CEconItemPreviewDataBlock;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchEndRewardDropsNotification.
 * Use `create(CMsgGCCStrike15_v2_MatchEndRewardDropsNotificationSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchEndRewardDropsNotificationSchema: GenMessage<CMsgGCCStrike15_v2_MatchEndRewardDropsNotification> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 71);

/**
 * @generated from message CMsgItemAcknowledged
 */
export type CMsgItemAcknowledged = Message<"CMsgItemAcknowledged"> & {
  /**
   * @generated from field: optional CEconItemPreviewDataBlock iteminfo = 1;
   */
  iteminfo?: CEconItemPreviewDataBlock;
};

/**
 * Describes the message CMsgItemAcknowledged.
 * Use `create(CMsgItemAcknowledgedSchema)` to create a new message.
 */
export const CMsgItemAcknowledgedSchema: GenMessage<CMsgItemAcknowledged> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 72);

/**
 * @generated from message CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest
 */
export type CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest = Message<"CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest"> & {
  /**
   * @generated from field: optional uint64 param_s = 1;
   */
  paramS: bigint;

  /**
   * @generated from field: optional uint64 param_a = 2;
   */
  paramA: bigint;

  /**
   * @generated from field: optional uint64 param_d = 3;
   */
  paramD: bigint;

  /**
   * @generated from field: optional uint64 param_m = 4;
   */
  paramM: bigint;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest.
 * Use `create(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequestSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequestSchema: GenMessage<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 73);

/**
 * @generated from message CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse
 */
export type CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse = Message<"CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse"> & {
  /**
   * @generated from field: optional CEconItemPreviewDataBlock iteminfo = 1;
   */
  iteminfo?: CEconItemPreviewDataBlock;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse.
 * Use `create(CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponseSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponseSchema: GenMessage<CMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 74);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames
 */
export type CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames = Message<"CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames"> & {
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames.
 * Use `create(CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGamesSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGamesSchema: GenMessage<CMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 75);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser
 */
export type CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser = Message<"CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser.
 * Use `create(CMsgGCCStrike15_v2_MatchListRequestLiveGameForUserSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchListRequestLiveGameForUserSchema: GenMessage<CMsgGCCStrike15_v2_MatchListRequestLiveGameForUser> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 76);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchListRequestRecentUserGames
 */
export type CMsgGCCStrike15_v2_MatchListRequestRecentUserGames = Message<"CMsgGCCStrike15_v2_MatchListRequestRecentUserGames"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchListRequestRecentUserGames.
 * Use `create(CMsgGCCStrike15_v2_MatchListRequestRecentUserGamesSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchListRequestRecentUserGamesSchema: GenMessage<CMsgGCCStrike15_v2_MatchListRequestRecentUserGames> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 77);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchListRequestTournamentGames
 */
export type CMsgGCCStrike15_v2_MatchListRequestTournamentGames = Message<"CMsgGCCStrike15_v2_MatchListRequestTournamentGames"> & {
  /**
   * @generated from field: optional int32 eventid = 1;
   */
  eventid: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchListRequestTournamentGames.
 * Use `create(CMsgGCCStrike15_v2_MatchListRequestTournamentGamesSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchListRequestTournamentGamesSchema: GenMessage<CMsgGCCStrike15_v2_MatchListRequestTournamentGames> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 78);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchListRequestFullGameInfo
 */
export type CMsgGCCStrike15_v2_MatchListRequestFullGameInfo = Message<"CMsgGCCStrike15_v2_MatchListRequestFullGameInfo"> & {
  /**
   * @generated from field: optional uint64 matchid = 1;
   */
  matchid: bigint;

  /**
   * @generated from field: optional uint64 outcomeid = 2;
   */
  outcomeid: bigint;

  /**
   * @generated from field: optional uint32 token = 3;
   */
  token: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchListRequestFullGameInfo.
 * Use `create(CMsgGCCStrike15_v2_MatchListRequestFullGameInfoSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchListRequestFullGameInfoSchema: GenMessage<CMsgGCCStrike15_v2_MatchListRequestFullGameInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 79);

/**
 * @generated from message CDataGCCStrike15_v2_MatchInfo
 */
export type CDataGCCStrike15_v2_MatchInfo = Message<"CDataGCCStrike15_v2_MatchInfo"> & {
  /**
   * @generated from field: optional uint64 matchid = 1;
   */
  matchid: bigint;

  /**
   * @generated from field: optional uint32 matchtime = 2;
   */
  matchtime: number;

  /**
   * @generated from field: optional WatchableMatchInfo watchablematchinfo = 3;
   */
  watchablematchinfo?: WatchableMatchInfo;

  /**
   * @generated from field: optional CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstats_legacy = 4;
   */
  roundstatsLegacy?: CMsgGCCStrike15_v2_MatchmakingServerRoundStats;

  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_MatchmakingServerRoundStats roundstatsall = 5;
   */
  roundstatsall: CMsgGCCStrike15_v2_MatchmakingServerRoundStats[];
};

/**
 * Describes the message CDataGCCStrike15_v2_MatchInfo.
 * Use `create(CDataGCCStrike15_v2_MatchInfoSchema)` to create a new message.
 */
export const CDataGCCStrike15_v2_MatchInfoSchema: GenMessage<CDataGCCStrike15_v2_MatchInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 80);

/**
 * @generated from message CDataGCCStrike15_v2_TournamentGroupTeam
 */
export type CDataGCCStrike15_v2_TournamentGroupTeam = Message<"CDataGCCStrike15_v2_TournamentGroupTeam"> & {
  /**
   * @generated from field: optional int32 team_id = 1;
   */
  teamId: number;

  /**
   * @generated from field: optional int32 score = 2;
   */
  score: number;

  /**
   * @generated from field: optional bool correctpick = 3;
   */
  correctpick: boolean;
};

/**
 * Describes the message CDataGCCStrike15_v2_TournamentGroupTeam.
 * Use `create(CDataGCCStrike15_v2_TournamentGroupTeamSchema)` to create a new message.
 */
export const CDataGCCStrike15_v2_TournamentGroupTeamSchema: GenMessage<CDataGCCStrike15_v2_TournamentGroupTeam> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 81);

/**
 * @generated from message CDataGCCStrike15_v2_TournamentGroup
 */
export type CDataGCCStrike15_v2_TournamentGroup = Message<"CDataGCCStrike15_v2_TournamentGroup"> & {
  /**
   * @generated from field: optional uint32 groupid = 1;
   */
  groupid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string desc = 3;
   */
  desc: string;

  /**
   * @generated from field: optional uint32 picks__deprecated = 4;
   */
  picksDeprecated: number;

  /**
   * @generated from field: repeated CDataGCCStrike15_v2_TournamentGroupTeam teams = 5;
   */
  teams: CDataGCCStrike15_v2_TournamentGroupTeam[];

  /**
   * @generated from field: repeated int32 stage_ids = 6;
   */
  stageIds: number[];

  /**
   * @generated from field: optional uint32 picklockuntiltime = 7;
   */
  picklockuntiltime: number;

  /**
   * @generated from field: optional uint32 pickableteams = 8;
   */
  pickableteams: number;

  /**
   * @generated from field: optional uint32 points_per_pick = 9;
   */
  pointsPerPick: number;

  /**
   * @generated from field: repeated CDataGCCStrike15_v2_TournamentGroup.Picks picks = 10;
   */
  picks: CDataGCCStrike15_v2_TournamentGroup_Picks[];
};

/**
 * Describes the message CDataGCCStrike15_v2_TournamentGroup.
 * Use `create(CDataGCCStrike15_v2_TournamentGroupSchema)` to create a new message.
 */
export const CDataGCCStrike15_v2_TournamentGroupSchema: GenMessage<CDataGCCStrike15_v2_TournamentGroup> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 82);

/**
 * @generated from message CDataGCCStrike15_v2_TournamentGroup.Picks
 */
export type CDataGCCStrike15_v2_TournamentGroup_Picks = Message<"CDataGCCStrike15_v2_TournamentGroup.Picks"> & {
  /**
   * @generated from field: repeated int32 pickids = 1;
   */
  pickids: number[];
};

/**
 * Describes the message CDataGCCStrike15_v2_TournamentGroup.Picks.
 * Use `create(CDataGCCStrike15_v2_TournamentGroup_PicksSchema)` to create a new message.
 */
export const CDataGCCStrike15_v2_TournamentGroup_PicksSchema: GenMessage<CDataGCCStrike15_v2_TournamentGroup_Picks> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 82, 0);

/**
 * @generated from message CDataGCCStrike15_v2_TournamentSection
 */
export type CDataGCCStrike15_v2_TournamentSection = Message<"CDataGCCStrike15_v2_TournamentSection"> & {
  /**
   * @generated from field: optional uint32 sectionid = 1;
   */
  sectionid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string desc = 3;
   */
  desc: string;

  /**
   * @generated from field: repeated CDataGCCStrike15_v2_TournamentGroup groups = 4;
   */
  groups: CDataGCCStrike15_v2_TournamentGroup[];
};

/**
 * Describes the message CDataGCCStrike15_v2_TournamentSection.
 * Use `create(CDataGCCStrike15_v2_TournamentSectionSchema)` to create a new message.
 */
export const CDataGCCStrike15_v2_TournamentSectionSchema: GenMessage<CDataGCCStrike15_v2_TournamentSection> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 83);

/**
 * @generated from message CDataGCCStrike15_v2_TournamentInfo
 */
export type CDataGCCStrike15_v2_TournamentInfo = Message<"CDataGCCStrike15_v2_TournamentInfo"> & {
  /**
   * @generated from field: repeated CDataGCCStrike15_v2_TournamentSection sections = 1;
   */
  sections: CDataGCCStrike15_v2_TournamentSection[];

  /**
   * @generated from field: optional TournamentEvent tournament_event = 2;
   */
  tournamentEvent?: TournamentEvent;

  /**
   * @generated from field: repeated TournamentTeam tournament_teams = 3;
   */
  tournamentTeams: TournamentTeam[];
};

/**
 * Describes the message CDataGCCStrike15_v2_TournamentInfo.
 * Use `create(CDataGCCStrike15_v2_TournamentInfoSchema)` to create a new message.
 */
export const CDataGCCStrike15_v2_TournamentInfoSchema: GenMessage<CDataGCCStrike15_v2_TournamentInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 84);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchList
 */
export type CMsgGCCStrike15_v2_MatchList = Message<"CMsgGCCStrike15_v2_MatchList"> & {
  /**
   * @generated from field: optional uint32 msgrequestid = 1;
   */
  msgrequestid: number;

  /**
   * @generated from field: optional uint32 accountid = 2;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 servertime = 3;
   */
  servertime: number;

  /**
   * @generated from field: repeated CDataGCCStrike15_v2_MatchInfo matches = 4;
   */
  matches: CDataGCCStrike15_v2_MatchInfo[];

  /**
   * @generated from field: repeated TournamentTeam streams = 5;
   */
  streams: TournamentTeam[];

  /**
   * @generated from field: optional CDataGCCStrike15_v2_TournamentInfo tournamentinfo = 6;
   */
  tournamentinfo?: CDataGCCStrike15_v2_TournamentInfo;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchList.
 * Use `create(CMsgGCCStrike15_v2_MatchListSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchListSchema: GenMessage<CMsgGCCStrike15_v2_MatchList> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 85);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt
 */
export type CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt = Message<"CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt"> & {
  /**
   * @generated from field: optional int32 eventid = 1;
   */
  eventid: number;

  /**
   * @generated from field: repeated CDataGCCStrike15_v2_MatchInfo matches = 2;
   */
  matches: CDataGCCStrike15_v2_MatchInfo[];

  /**
   * @generated from field: optional uint32 accountid = 3;
   */
  accountid: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt.
 * Use `create(CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmtSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmtSchema: GenMessage<CMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 86);

/**
 * @generated from message CMsgGCCStrike15_v2_Predictions
 */
export type CMsgGCCStrike15_v2_Predictions = Message<"CMsgGCCStrike15_v2_Predictions"> & {
  /**
   * @generated from field: optional uint32 event_id = 1;
   */
  eventId: number;

  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick group_match_team_picks = 2;
   */
  groupMatchTeamPicks: CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_Predictions.
 * Use `create(CMsgGCCStrike15_v2_PredictionsSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_PredictionsSchema: GenMessage<CMsgGCCStrike15_v2_Predictions> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 87);

/**
 * @generated from message CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick
 */
export type CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick = Message<"CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick"> & {
  /**
   * @generated from field: optional int32 sectionid = 1;
   */
  sectionid: number;

  /**
   * @generated from field: optional int32 groupid = 2;
   */
  groupid: number;

  /**
   * @generated from field: optional int32 index = 3;
   */
  index: number;

  /**
   * @generated from field: optional int32 teamid = 4;
   */
  teamid: number;

  /**
   * @generated from field: optional uint64 itemid = 5;
   */
  itemid: bigint;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Predictions.GroupMatchTeamPick.
 * Use `create(CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPickSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPickSchema: GenMessage<CMsgGCCStrike15_v2_Predictions_GroupMatchTeamPick> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 87, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_Fantasy
 */
export type CMsgGCCStrike15_v2_Fantasy = Message<"CMsgGCCStrike15_v2_Fantasy"> & {
  /**
   * @generated from field: optional uint32 event_id = 1;
   */
  eventId: number;

  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_Fantasy.FantasyTeam teams = 2;
   */
  teams: CMsgGCCStrike15_v2_Fantasy_FantasyTeam[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_Fantasy.
 * Use `create(CMsgGCCStrike15_v2_FantasySchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_FantasySchema: GenMessage<CMsgGCCStrike15_v2_Fantasy> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 88);

/**
 * @generated from message CMsgGCCStrike15_v2_Fantasy.FantasySlot
 */
export type CMsgGCCStrike15_v2_Fantasy_FantasySlot = Message<"CMsgGCCStrike15_v2_Fantasy.FantasySlot"> & {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type: number;

  /**
   * @generated from field: optional int32 pick = 2;
   */
  pick: number;

  /**
   * @generated from field: optional uint64 itemid = 3;
   */
  itemid: bigint;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Fantasy.FantasySlot.
 * Use `create(CMsgGCCStrike15_v2_Fantasy_FantasySlotSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Fantasy_FantasySlotSchema: GenMessage<CMsgGCCStrike15_v2_Fantasy_FantasySlot> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 88, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_Fantasy.FantasyTeam
 */
export type CMsgGCCStrike15_v2_Fantasy_FantasyTeam = Message<"CMsgGCCStrike15_v2_Fantasy.FantasyTeam"> & {
  /**
   * @generated from field: optional int32 sectionid = 1;
   */
  sectionid: number;

  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_Fantasy.FantasySlot slots = 2;
   */
  slots: CMsgGCCStrike15_v2_Fantasy_FantasySlot[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_Fantasy.FantasyTeam.
 * Use `create(CMsgGCCStrike15_v2_Fantasy_FantasyTeamSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Fantasy_FantasyTeamSchema: GenMessage<CMsgGCCStrike15_v2_Fantasy_FantasyTeam> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 88, 1);

/**
 * @generated from message CAttribute_String
 */
export type CAttribute_String = Message<"CAttribute_String"> & {
  /**
   * @generated from field: optional string value = 1;
   */
  value: string;
};

/**
 * Describes the message CAttribute_String.
 * Use `create(CAttribute_StringSchema)` to create a new message.
 */
export const CAttribute_StringSchema: GenMessage<CAttribute_String> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 89);

/**
 * @generated from message CMsgLegacySource1ClientWelcome
 */
export type CMsgLegacySource1ClientWelcome = Message<"CMsgLegacySource1ClientWelcome"> & {
  /**
   * @generated from field: optional uint32 version = 1;
   */
  version: number;

  /**
   * @generated from field: optional bytes game_data = 2;
   */
  gameData: Uint8Array;

  /**
   * @generated from field: repeated CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
   */
  outofdateSubscribedCaches: CMsgSOCacheSubscribed[];

  /**
   * @generated from field: repeated CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
   */
  uptodateSubscribedCaches: CMsgSOCacheSubscriptionCheck[];

  /**
   * @generated from field: optional CMsgLegacySource1ClientWelcome.Location location = 5;
   */
  location?: CMsgLegacySource1ClientWelcome_Location;

  /**
   * @generated from field: optional bytes game_data2 = 6;
   */
  gameData2: Uint8Array;

  /**
   * @generated from field: optional uint32 rtime32_gc_welcome_timestamp = 7;
   */
  rtime32GcWelcomeTimestamp: number;

  /**
   * @generated from field: optional uint32 currency = 8;
   */
  currency: number;

  /**
   * @generated from field: optional uint32 balance = 9;
   */
  balance: number;

  /**
   * @generated from field: optional string balance_url = 10;
   */
  balanceUrl: string;

  /**
   * @generated from field: optional string txn_country_code = 11;
   */
  txnCountryCode: string;
};

/**
 * Describes the message CMsgLegacySource1ClientWelcome.
 * Use `create(CMsgLegacySource1ClientWelcomeSchema)` to create a new message.
 */
export const CMsgLegacySource1ClientWelcomeSchema: GenMessage<CMsgLegacySource1ClientWelcome> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 90);

/**
 * @generated from message CMsgLegacySource1ClientWelcome.Location
 */
export type CMsgLegacySource1ClientWelcome_Location = Message<"CMsgLegacySource1ClientWelcome.Location"> & {
  /**
   * @generated from field: optional float latitude = 1;
   */
  latitude: number;

  /**
   * @generated from field: optional float longitude = 2;
   */
  longitude: number;

  /**
   * @generated from field: optional string country = 3;
   */
  country: string;
};

/**
 * Describes the message CMsgLegacySource1ClientWelcome.Location.
 * Use `create(CMsgLegacySource1ClientWelcome_LocationSchema)` to create a new message.
 */
export const CMsgLegacySource1ClientWelcome_LocationSchema: GenMessage<CMsgLegacySource1ClientWelcome_Location> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 90, 0);

/**
 * @generated from message CMsgCStrike15Welcome
 */
export type CMsgCStrike15Welcome = Message<"CMsgCStrike15Welcome"> & {
  /**
   * @generated from field: optional uint32 store_item_hash = 5;
   */
  storeItemHash: number;

  /**
   * @generated from field: optional uint32 timeplayedconsecutively = 6;
   */
  timeplayedconsecutively: number;

  /**
   * @generated from field: optional uint32 time_first_played = 10;
   */
  timeFirstPlayed: number;

  /**
   * @generated from field: optional uint32 last_time_played = 12;
   */
  lastTimePlayed: number;

  /**
   * @generated from field: optional uint32 last_ip_address = 13;
   */
  lastIpAddress: number;

  /**
   * @generated from field: optional uint64 gscookieid = 18;
   */
  gscookieid: bigint;

  /**
   * @generated from field: optional uint64 uniqueid = 19;
   */
  uniqueid: bigint;
};

/**
 * Describes the message CMsgCStrike15Welcome.
 * Use `create(CMsgCStrike15WelcomeSchema)` to create a new message.
 */
export const CMsgCStrike15WelcomeSchema: GenMessage<CMsgCStrike15Welcome> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 91);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientVarValueNotificationInfo
 */
export type CMsgGCCStrike15_v2_ClientVarValueNotificationInfo = Message<"CMsgGCCStrike15_v2_ClientVarValueNotificationInfo"> & {
  /**
   * @generated from field: optional string value_name = 1;
   */
  valueName: string;

  /**
   * @generated from field: optional int32 value_int = 2;
   */
  valueInt: number;

  /**
   * @generated from field: optional uint32 server_addr = 3;
   */
  serverAddr: number;

  /**
   * @generated from field: optional uint32 server_port = 4;
   */
  serverPort: number;

  /**
   * @generated from field: repeated string choked_blocks = 5;
   */
  chokedBlocks: string[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientVarValueNotificationInfo.
 * Use `create(CMsgGCCStrike15_v2_ClientVarValueNotificationInfoSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientVarValueNotificationInfoSchema: GenMessage<CMsgGCCStrike15_v2_ClientVarValueNotificationInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 92);

/**
 * @generated from message CMsgGCCStrike15_v2_ServerVarValueNotificationInfo
 */
export type CMsgGCCStrike15_v2_ServerVarValueNotificationInfo = Message<"CMsgGCCStrike15_v2_ServerVarValueNotificationInfo"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: repeated uint32 viewangles = 2;
   */
  viewangles: number[];

  /**
   * @generated from field: optional uint32 type = 3;
   */
  type: number;

  /**
   * @generated from field: repeated uint32 userdata = 4;
   */
  userdata: number[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_ServerVarValueNotificationInfo.
 * Use `create(CMsgGCCStrike15_v2_ServerVarValueNotificationInfoSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ServerVarValueNotificationInfoSchema: GenMessage<CMsgGCCStrike15_v2_ServerVarValueNotificationInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 93);

/**
 * @generated from message CMsgGCCStrike15_v2_GiftsLeaderboardRequest
 */
export type CMsgGCCStrike15_v2_GiftsLeaderboardRequest = Message<"CMsgGCCStrike15_v2_GiftsLeaderboardRequest"> & {
};

/**
 * Describes the message CMsgGCCStrike15_v2_GiftsLeaderboardRequest.
 * Use `create(CMsgGCCStrike15_v2_GiftsLeaderboardRequestSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GiftsLeaderboardRequestSchema: GenMessage<CMsgGCCStrike15_v2_GiftsLeaderboardRequest> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 94);

/**
 * @generated from message CMsgGCCStrike15_v2_GiftsLeaderboardResponse
 */
export type CMsgGCCStrike15_v2_GiftsLeaderboardResponse = Message<"CMsgGCCStrike15_v2_GiftsLeaderboardResponse"> & {
  /**
   * @generated from field: optional uint32 servertime = 1;
   */
  servertime: number;

  /**
   * @generated from field: optional uint32 time_period_seconds = 2;
   */
  timePeriodSeconds: number;

  /**
   * @generated from field: optional uint32 total_gifts_given = 3;
   */
  totalGiftsGiven: number;

  /**
   * @generated from field: optional uint32 total_givers = 4;
   */
  totalGivers: number;

  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry entries = 5;
   */
  entries: CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_GiftsLeaderboardResponse.
 * Use `create(CMsgGCCStrike15_v2_GiftsLeaderboardResponseSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GiftsLeaderboardResponseSchema: GenMessage<CMsgGCCStrike15_v2_GiftsLeaderboardResponse> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 95);

/**
 * @generated from message CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry
 */
export type CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry = Message<"CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 gifts = 2;
   */
  gifts: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GiftsLeaderboardResponse.GiftLeaderboardEntry.
 * Use `create(CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntrySchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntrySchema: GenMessage<CMsgGCCStrike15_v2_GiftsLeaderboardResponse_GiftLeaderboardEntry> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 95, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientSubmitSurveyVote
 */
export type CMsgGCCStrike15_v2_ClientSubmitSurveyVote = Message<"CMsgGCCStrike15_v2_ClientSubmitSurveyVote"> & {
  /**
   * @generated from field: optional uint32 survey_id = 1;
   */
  surveyId: number;

  /**
   * @generated from field: optional uint32 vote = 2;
   */
  vote: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientSubmitSurveyVote.
 * Use `create(CMsgGCCStrike15_v2_ClientSubmitSurveyVoteSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientSubmitSurveyVoteSchema: GenMessage<CMsgGCCStrike15_v2_ClientSubmitSurveyVote> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 96);

/**
 * @generated from message CMsgGCCStrike15_v2_Server2GCClientValidate
 */
export type CMsgGCCStrike15_v2_Server2GCClientValidate = Message<"CMsgGCCStrike15_v2_Server2GCClientValidate"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Server2GCClientValidate.
 * Use `create(CMsgGCCStrike15_v2_Server2GCClientValidateSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Server2GCClientValidateSchema: GenMessage<CMsgGCCStrike15_v2_Server2GCClientValidate> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 97);

/**
 * @generated from message CMsgGCCStrike15_v2_GC2ClientTournamentInfo
 */
export type CMsgGCCStrike15_v2_GC2ClientTournamentInfo = Message<"CMsgGCCStrike15_v2_GC2ClientTournamentInfo"> & {
  /**
   * @generated from field: optional uint32 eventid = 1;
   */
  eventid: number;

  /**
   * @generated from field: optional uint32 stageid = 2;
   */
  stageid: number;

  /**
   * @generated from field: optional uint32 game_type = 3;
   */
  gameType: number;

  /**
   * @generated from field: repeated uint32 teamids = 4;
   */
  teamids: number[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_GC2ClientTournamentInfo.
 * Use `create(CMsgGCCStrike15_v2_GC2ClientTournamentInfoSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GC2ClientTournamentInfoSchema: GenMessage<CMsgGCCStrike15_v2_GC2ClientTournamentInfo> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 98);

/**
 * @generated from message CSOEconCoupon
 */
export type CSOEconCoupon = Message<"CSOEconCoupon"> & {
  /**
   * @generated from field: optional uint32 entryid = 1;
   */
  entryid: number;

  /**
   * @generated from field: optional uint32 defidx = 2;
   */
  defidx: number;

  /**
   * @generated from field: optional fixed32 expiration_date = 3;
   */
  expirationDate: number;
};

/**
 * Describes the message CSOEconCoupon.
 * Use `create(CSOEconCouponSchema)` to create a new message.
 */
export const CSOEconCouponSchema: GenMessage<CSOEconCoupon> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 99);

/**
 * @generated from message CSOAccountItemPersonalStore
 */
export type CSOAccountItemPersonalStore = Message<"CSOAccountItemPersonalStore"> & {
  /**
   * @generated from field: optional uint32 generation_time = 1;
   */
  generationTime: number;

  /**
   * @generated from field: optional uint32 redeemable_balance = 2;
   */
  redeemableBalance: number;

  /**
   * @generated from field: repeated uint64 items = 3;
   */
  items: bigint[];
};

/**
 * Describes the message CSOAccountItemPersonalStore.
 * Use `create(CSOAccountItemPersonalStoreSchema)` to create a new message.
 */
export const CSOAccountItemPersonalStoreSchema: GenMessage<CSOAccountItemPersonalStore> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 100);

/**
 * @generated from message CSOAccountXpShop
 */
export type CSOAccountXpShop = Message<"CSOAccountXpShop"> & {
  /**
   * @generated from field: optional uint32 generation_time = 1;
   */
  generationTime: number;

  /**
   * @generated from field: optional uint32 redeemable_balance = 2;
   */
  redeemableBalance: number;

  /**
   * @generated from field: repeated uint32 xp_tracks = 3;
   */
  xpTracks: number[];
};

/**
 * Describes the message CSOAccountXpShop.
 * Use `create(CSOAccountXpShopSchema)` to create a new message.
 */
export const CSOAccountXpShopSchema: GenMessage<CSOAccountXpShop> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 101);

/**
 * @generated from message CSOAccountXpShopBids
 */
export type CSOAccountXpShopBids = Message<"CSOAccountXpShopBids"> & {
  /**
   * @generated from field: optional uint32 campaign_id = 1;
   */
  campaignId: number;

  /**
   * @generated from field: optional uint32 redeem_id = 2;
   */
  redeemId: number;

  /**
   * @generated from field: optional uint32 expected_cost = 3;
   */
  expectedCost: number;

  /**
   * @generated from field: optional uint32 generation_time = 4;
   */
  generationTime: number;
};

/**
 * Describes the message CSOAccountXpShopBids.
 * Use `create(CSOAccountXpShopBidsSchema)` to create a new message.
 */
export const CSOAccountXpShopBidsSchema: GenMessage<CSOAccountXpShopBids> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 102);

/**
 * @generated from message CSOAccountKeychainRemoveToolCharges
 */
export type CSOAccountKeychainRemoveToolCharges = Message<"CSOAccountKeychainRemoveToolCharges"> & {
  /**
   * @generated from field: optional uint32 charges = 1;
   */
  charges: number;
};

/**
 * Describes the message CSOAccountKeychainRemoveToolCharges.
 * Use `create(CSOAccountKeychainRemoveToolChargesSchema)` to create a new message.
 */
export const CSOAccountKeychainRemoveToolChargesSchema: GenMessage<CSOAccountKeychainRemoveToolCharges> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 103);

/**
 * @generated from message CSOQuestProgress
 */
export type CSOQuestProgress = Message<"CSOQuestProgress"> & {
  /**
   * @generated from field: optional uint32 questid = 1;
   */
  questid: number;

  /**
   * @generated from field: optional uint32 points_remaining = 2;
   */
  pointsRemaining: number;

  /**
   * @generated from field: optional uint32 bonus_points = 3;
   */
  bonusPoints: number;
};

/**
 * Describes the message CSOQuestProgress.
 * Use `create(CSOQuestProgressSchema)` to create a new message.
 */
export const CSOQuestProgressSchema: GenMessage<CSOQuestProgress> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 104);

/**
 * @generated from message CSOAccountSeasonalOperation
 */
export type CSOAccountSeasonalOperation = Message<"CSOAccountSeasonalOperation"> & {
  /**
   * @generated from field: optional uint32 season_value = 1;
   */
  seasonValue: number;

  /**
   * @generated from field: optional uint32 tier_unlocked = 2;
   */
  tierUnlocked: number;

  /**
   * @generated from field: optional uint32 premium_tiers = 3;
   */
  premiumTiers: number;

  /**
   * @generated from field: optional uint32 mission_id = 4;
   */
  missionId: number;

  /**
   * @generated from field: optional uint32 missions_completed = 5;
   */
  missionsCompleted: number;

  /**
   * @generated from field: optional uint32 redeemable_balance = 6;
   */
  redeemableBalance: number;

  /**
   * @generated from field: optional uint32 season_pass_time = 7;
   */
  seasonPassTime: number;
};

/**
 * Describes the message CSOAccountSeasonalOperation.
 * Use `create(CSOAccountSeasonalOperationSchema)` to create a new message.
 */
export const CSOAccountSeasonalOperationSchema: GenMessage<CSOAccountSeasonalOperation> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 105);

/**
 * @generated from message CSOAccountRecurringSubscription
 */
export type CSOAccountRecurringSubscription = Message<"CSOAccountRecurringSubscription"> & {
  /**
   * @generated from field: optional uint32 time_next_cycle = 1;
   */
  timeNextCycle: number;

  /**
   * @generated from field: optional uint32 time_initiated = 2;
   */
  timeInitiated: number;
};

/**
 * Describes the message CSOAccountRecurringSubscription.
 * Use `create(CSOAccountRecurringSubscriptionSchema)` to create a new message.
 */
export const CSOAccountRecurringSubscriptionSchema: GenMessage<CSOAccountRecurringSubscription> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 106);

/**
 * @generated from message CSOGameAccountSteamChina
 */
export type CSOGameAccountSteamChina = Message<"CSOGameAccountSteamChina"> & {
  /**
   * @generated from field: optional uint32 time_last_update = 1;
   */
  timeLastUpdate: number;

  /**
   * @generated from field: optional uint32 time_comms_ban = 2;
   */
  timeCommsBan: number;

  /**
   * @generated from field: optional uint32 time_play_ban = 3;
   */
  timePlayBan: number;
};

/**
 * Describes the message CSOGameAccountSteamChina.
 * Use `create(CSOGameAccountSteamChinaSchema)` to create a new message.
 */
export const CSOGameAccountSteamChinaSchema: GenMessage<CSOGameAccountSteamChina> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 107);

/**
 * @generated from message CSOPersonaDataPublic
 */
export type CSOPersonaDataPublic = Message<"CSOPersonaDataPublic"> & {
  /**
   * @generated from field: optional int32 player_level = 1;
   */
  playerLevel: number;

  /**
   * @generated from field: optional PlayerCommendationInfo commendation = 2;
   */
  commendation?: PlayerCommendationInfo;

  /**
   * @generated from field: optional bool elevated_state = 3;
   */
  elevatedState: boolean;

  /**
   * @generated from field: optional uint32 xp_trail_timestamp_refresh = 4;
   */
  xpTrailTimestampRefresh: number;

  /**
   * @generated from field: optional uint32 xp_trail_level = 5;
   */
  xpTrailLevel: number;
};

/**
 * Describes the message CSOPersonaDataPublic.
 * Use `create(CSOPersonaDataPublicSchema)` to create a new message.
 */
export const CSOPersonaDataPublicSchema: GenMessage<CSOPersonaDataPublic> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 108);

/**
 * @generated from message CSOAccountRecurringMission
 */
export type CSOAccountRecurringMission = Message<"CSOAccountRecurringMission"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 mission_id = 2;
   */
  missionId: number;

  /**
   * @generated from field: optional uint32 period = 3;
   */
  period: number;

  /**
   * @generated from field: optional uint32 progress = 4;
   */
  progress: number;
};

/**
 * Describes the message CSOAccountRecurringMission.
 * Use `create(CSOAccountRecurringMissionSchema)` to create a new message.
 */
export const CSOAccountRecurringMissionSchema: GenMessage<CSOAccountRecurringMission> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 109);

/**
 * @generated from message CMsgGCCStrike15_v2_GC2ClientNotifyXPShop
 */
export type CMsgGCCStrike15_v2_GC2ClientNotifyXPShop = Message<"CMsgGCCStrike15_v2_GC2ClientNotifyXPShop"> & {
  /**
   * @generated from field: optional CSOAccountXpShop prematch = 1;
   */
  prematch?: CSOAccountXpShop;

  /**
   * @generated from field: optional CSOAccountXpShop postmatch = 2;
   */
  postmatch?: CSOAccountXpShop;

  /**
   * @generated from field: optional uint32 current_xp = 3;
   */
  currentXp: number;

  /**
   * @generated from field: optional uint32 current_level = 4;
   */
  currentLevel: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GC2ClientNotifyXPShop.
 * Use `create(CMsgGCCStrike15_v2_GC2ClientNotifyXPShopSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GC2ClientNotifyXPShopSchema: GenMessage<CMsgGCCStrike15_v2_GC2ClientNotifyXPShop> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 110);

/**
 * @generated from message CMsgGCCStrike15_v2_Client2GcAckXPShopTracks
 */
export type CMsgGCCStrike15_v2_Client2GcAckXPShopTracks = Message<"CMsgGCCStrike15_v2_Client2GcAckXPShopTracks"> & {
};

/**
 * Describes the message CMsgGCCStrike15_v2_Client2GcAckXPShopTracks.
 * Use `create(CMsgGCCStrike15_v2_Client2GcAckXPShopTracksSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Client2GcAckXPShopTracksSchema: GenMessage<CMsgGCCStrike15_v2_Client2GcAckXPShopTracks> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 111);

/**
 * @generated from message CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats
 */
export type CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats = Message<"CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats"> & {
  /**
   * @generated from field: optional uint32 gs_location_id = 1;
   */
  gsLocationId: number;

  /**
   * @generated from field: optional uint32 data_center_id = 2;
   */
  dataCenterId: number;

  /**
   * @generated from field: optional uint32 num_locked_in = 3;
   */
  numLockedIn: number;

  /**
   * @generated from field: optional uint32 num_found_nearby = 4;
   */
  numFoundNearby: number;

  /**
   * @generated from field: optional uint32 note_level = 5;
   */
  noteLevel: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats.
 * Use `create(CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStatsSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStatsSchema: GenMessage<CMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 112);

/**
 * @generated from message CMsgGC_GlobalGame_Subscribe
 */
export type CMsgGC_GlobalGame_Subscribe = Message<"CMsgGC_GlobalGame_Subscribe"> & {
  /**
   * @generated from field: optional uint64 ticket = 1;
   */
  ticket: bigint;
};

/**
 * Describes the message CMsgGC_GlobalGame_Subscribe.
 * Use `create(CMsgGC_GlobalGame_SubscribeSchema)` to create a new message.
 */
export const CMsgGC_GlobalGame_SubscribeSchema: GenMessage<CMsgGC_GlobalGame_Subscribe> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 113);

/**
 * @generated from message CMsgGC_GlobalGame_Unsubscribe
 */
export type CMsgGC_GlobalGame_Unsubscribe = Message<"CMsgGC_GlobalGame_Unsubscribe"> & {
  /**
   * @generated from field: optional int32 timeleft = 1;
   */
  timeleft: number;
};

/**
 * Describes the message CMsgGC_GlobalGame_Unsubscribe.
 * Use `create(CMsgGC_GlobalGame_UnsubscribeSchema)` to create a new message.
 */
export const CMsgGC_GlobalGame_UnsubscribeSchema: GenMessage<CMsgGC_GlobalGame_Unsubscribe> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 114);

/**
 * @generated from message CMsgGC_GlobalGame_Play
 */
export type CMsgGC_GlobalGame_Play = Message<"CMsgGC_GlobalGame_Play"> & {
  /**
   * @generated from field: optional uint64 ticket = 1;
   */
  ticket: bigint;

  /**
   * @generated from field: optional uint32 gametimems = 2;
   */
  gametimems: number;

  /**
   * @generated from field: optional uint32 msperpoint = 3;
   */
  msperpoint: number;
};

/**
 * Describes the message CMsgGC_GlobalGame_Play.
 * Use `create(CMsgGC_GlobalGame_PlaySchema)` to create a new message.
 */
export const CMsgGC_GlobalGame_PlaySchema: GenMessage<CMsgGC_GlobalGame_Play> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 115);

/**
 * @generated from message CMsgGCCStrike15_v2_AcknowledgePenalty
 */
export type CMsgGCCStrike15_v2_AcknowledgePenalty = Message<"CMsgGCCStrike15_v2_AcknowledgePenalty"> & {
  /**
   * @generated from field: optional int32 acknowledged = 1;
   */
  acknowledged: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_AcknowledgePenalty.
 * Use `create(CMsgGCCStrike15_v2_AcknowledgePenaltySchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_AcknowledgePenaltySchema: GenMessage<CMsgGCCStrike15_v2_AcknowledgePenalty> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 116);

/**
 * @generated from message CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin
 */
export type CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin = Message<"CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin"> & {
  /**
   * @generated from field: optional uint32 defindex = 1;
   */
  defindex: number;

  /**
   * @generated from field: optional uint64 upgradeid = 2;
   */
  upgradeid: bigint;

  /**
   * @generated from field: optional uint32 hours = 3;
   */
  hours: number;

  /**
   * @generated from field: optional uint32 prestigetime = 4;
   */
  prestigetime: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin.
 * Use `create(CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoinSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoinSchema: GenMessage<CMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 117);

/**
 * @generated from message CMsgGCCStrike15_v2_Client2GCStreamUnlock
 */
export type CMsgGCCStrike15_v2_Client2GCStreamUnlock = Message<"CMsgGCCStrike15_v2_Client2GCStreamUnlock"> & {
  /**
   * @generated from field: optional uint64 ticket = 1;
   */
  ticket: bigint;

  /**
   * @generated from field: optional int32 os = 2;
   */
  os: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Client2GCStreamUnlock.
 * Use `create(CMsgGCCStrike15_v2_Client2GCStreamUnlockSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Client2GCStreamUnlockSchema: GenMessage<CMsgGCCStrike15_v2_Client2GCStreamUnlock> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 118);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientToGCRequestElevate
 */
export type CMsgGCCStrike15_v2_ClientToGCRequestElevate = Message<"CMsgGCCStrike15_v2_ClientToGCRequestElevate"> & {
  /**
   * @generated from field: optional uint32 stage = 1;
   */
  stage: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientToGCRequestElevate.
 * Use `create(CMsgGCCStrike15_v2_ClientToGCRequestElevateSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientToGCRequestElevateSchema: GenMessage<CMsgGCCStrike15_v2_ClientToGCRequestElevate> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 119);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientToGCChat
 */
export type CMsgGCCStrike15_v2_ClientToGCChat = Message<"CMsgGCCStrike15_v2_ClientToGCChat"> & {
  /**
   * @generated from field: optional uint64 match_id = 1;
   */
  matchId: bigint;

  /**
   * @generated from field: optional string text = 2;
   */
  text: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientToGCChat.
 * Use `create(CMsgGCCStrike15_v2_ClientToGCChatSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientToGCChatSchema: GenMessage<CMsgGCCStrike15_v2_ClientToGCChat> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 120);

/**
 * @generated from message CMsgGCCStrike15_v2_GCToClientChat
 */
export type CMsgGCCStrike15_v2_GCToClientChat = Message<"CMsgGCCStrike15_v2_GCToClientChat"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional string text = 2;
   */
  text: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GCToClientChat.
 * Use `create(CMsgGCCStrike15_v2_GCToClientChatSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GCToClientChatSchema: GenMessage<CMsgGCCStrike15_v2_GCToClientChat> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 121);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientAuthKeyCode
 */
export type CMsgGCCStrike15_v2_ClientAuthKeyCode = Message<"CMsgGCCStrike15_v2_ClientAuthKeyCode"> & {
  /**
   * @generated from field: optional uint32 eventid = 1;
   */
  eventid: number;

  /**
   * @generated from field: optional string code = 2;
   */
  code: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientAuthKeyCode.
 * Use `create(CMsgGCCStrike15_v2_ClientAuthKeyCodeSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientAuthKeyCodeSchema: GenMessage<CMsgGCCStrike15_v2_ClientAuthKeyCode> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 122);

/**
 * @generated from message CMsgGCCStrike15_GotvSyncPacket
 */
export type CMsgGCCStrike15_GotvSyncPacket = Message<"CMsgGCCStrike15_GotvSyncPacket"> & {
  /**
   * @generated from field: optional CEngineGotvSyncPacket data = 1;
   */
  data?: CEngineGotvSyncPacket;
};

/**
 * Describes the message CMsgGCCStrike15_GotvSyncPacket.
 * Use `create(CMsgGCCStrike15_GotvSyncPacketSchema)` to create a new message.
 */
export const CMsgGCCStrike15_GotvSyncPacketSchema: GenMessage<CMsgGCCStrike15_GotvSyncPacket> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 123);

/**
 * @generated from message PlayerDecalDigitalSignature
 */
export type PlayerDecalDigitalSignature = Message<"PlayerDecalDigitalSignature"> & {
  /**
   * @generated from field: optional bytes signature = 1;
   */
  signature: Uint8Array;

  /**
   * @generated from field: optional uint32 accountid = 2;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 rtime = 3;
   */
  rtime: number;

  /**
   * @generated from field: repeated float endpos = 4;
   */
  endpos: number[];

  /**
   * @generated from field: repeated float startpos = 5;
   */
  startpos: number[];

  /**
   * @generated from field: repeated float left = 6;
   */
  left: number[];

  /**
   * @generated from field: optional uint32 tx_defidx = 7;
   */
  txDefidx: number;

  /**
   * @generated from field: optional int32 entindex = 8;
   */
  entindex: number;

  /**
   * @generated from field: optional uint32 hitbox = 9;
   */
  hitbox: number;

  /**
   * @generated from field: optional float creationtime = 10;
   */
  creationtime: number;

  /**
   * @generated from field: optional uint32 equipslot = 11;
   */
  equipslot: number;

  /**
   * @generated from field: optional uint32 trace_id = 12;
   */
  traceId: number;

  /**
   * @generated from field: repeated float normal = 13;
   */
  normal: number[];

  /**
   * @generated from field: optional uint32 tint_id = 14;
   */
  tintId: number;
};

/**
 * Describes the message PlayerDecalDigitalSignature.
 * Use `create(PlayerDecalDigitalSignatureSchema)` to create a new message.
 */
export const PlayerDecalDigitalSignatureSchema: GenMessage<PlayerDecalDigitalSignature> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 124);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientPlayerDecalSign
 */
export type CMsgGCCStrike15_v2_ClientPlayerDecalSign = Message<"CMsgGCCStrike15_v2_ClientPlayerDecalSign"> & {
  /**
   * @generated from field: optional PlayerDecalDigitalSignature data = 1;
   */
  data?: PlayerDecalDigitalSignature;

  /**
   * @generated from field: optional uint64 itemid = 2;
   */
  itemid: bigint;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientPlayerDecalSign.
 * Use `create(CMsgGCCStrike15_v2_ClientPlayerDecalSignSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientPlayerDecalSignSchema: GenMessage<CMsgGCCStrike15_v2_ClientPlayerDecalSign> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 125);

/**
 * @generated from message CMsgGCCStrike15_v2_BetaEnrollment
 */
export type CMsgGCCStrike15_v2_BetaEnrollment = Message<"CMsgGCCStrike15_v2_BetaEnrollment"> & {
  /**
   * @generated from field: optional uint32 eresult = 1;
   */
  eresult: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_BetaEnrollment.
 * Use `create(CMsgGCCStrike15_v2_BetaEnrollmentSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_BetaEnrollmentSchema: GenMessage<CMsgGCCStrike15_v2_BetaEnrollment> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 126);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientLogonFatalError
 */
export type CMsgGCCStrike15_v2_ClientLogonFatalError = Message<"CMsgGCCStrike15_v2_ClientLogonFatalError"> & {
  /**
   * @generated from field: optional uint32 errorcode = 1;
   */
  errorcode: number;

  /**
   * @generated from field: optional string message = 2;
   */
  message: string;

  /**
   * @generated from field: optional string country = 3;
   */
  country: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientLogonFatalError.
 * Use `create(CMsgGCCStrike15_v2_ClientLogonFatalErrorSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientLogonFatalErrorSchema: GenMessage<CMsgGCCStrike15_v2_ClientLogonFatalError> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 127);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientPollState
 */
export type CMsgGCCStrike15_v2_ClientPollState = Message<"CMsgGCCStrike15_v2_ClientPollState"> & {
  /**
   * @generated from field: optional uint32 pollid = 1;
   */
  pollid: number;

  /**
   * @generated from field: repeated string names = 2;
   */
  names: string[];

  /**
   * @generated from field: repeated int32 values = 3;
   */
  values: number[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientPollState.
 * Use `create(CMsgGCCStrike15_v2_ClientPollStateSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientPollStateSchema: GenMessage<CMsgGCCStrike15_v2_ClientPollState> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 128);

/**
 * @generated from message CMsgGCCStrike15_v2_Party_Register
 */
export type CMsgGCCStrike15_v2_Party_Register = Message<"CMsgGCCStrike15_v2_Party_Register"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional uint32 ver = 2;
   */
  ver: number;

  /**
   * @generated from field: optional uint32 apr = 3;
   */
  apr: number;

  /**
   * @generated from field: optional uint32 ark = 4;
   */
  ark: number;

  /**
   * @generated from field: optional uint32 nby = 5;
   */
  nby: number;

  /**
   * @generated from field: optional uint32 grp = 6;
   */
  grp: number;

  /**
   * @generated from field: optional uint32 slots = 7;
   */
  slots: number;

  /**
   * @generated from field: optional uint32 launcher = 8;
   */
  launcher: number;

  /**
   * @generated from field: optional uint32 game_type = 9;
   */
  gameType: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Party_Register.
 * Use `create(CMsgGCCStrike15_v2_Party_RegisterSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Party_RegisterSchema: GenMessage<CMsgGCCStrike15_v2_Party_Register> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 129);

/**
 * @generated from message CMsgGCCStrike15_v2_Party_Search
 */
export type CMsgGCCStrike15_v2_Party_Search = Message<"CMsgGCCStrike15_v2_Party_Search"> & {
  /**
   * @generated from field: optional uint32 ver = 1;
   */
  ver: number;

  /**
   * @generated from field: optional uint32 apr = 2;
   */
  apr: number;

  /**
   * @generated from field: optional uint32 ark = 3;
   */
  ark: number;

  /**
   * @generated from field: repeated uint32 grps = 4;
   */
  grps: number[];

  /**
   * @generated from field: optional uint32 launcher = 5;
   */
  launcher: number;

  /**
   * @generated from field: optional uint32 game_type = 6;
   */
  gameType: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Party_Search.
 * Use `create(CMsgGCCStrike15_v2_Party_SearchSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Party_SearchSchema: GenMessage<CMsgGCCStrike15_v2_Party_Search> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 130);

/**
 * @generated from message CMsgGCCStrike15_v2_Party_SearchResults
 */
export type CMsgGCCStrike15_v2_Party_SearchResults = Message<"CMsgGCCStrike15_v2_Party_SearchResults"> & {
  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_Party_SearchResults.Entry entries = 1;
   */
  entries: CMsgGCCStrike15_v2_Party_SearchResults_Entry[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_Party_SearchResults.
 * Use `create(CMsgGCCStrike15_v2_Party_SearchResultsSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Party_SearchResultsSchema: GenMessage<CMsgGCCStrike15_v2_Party_SearchResults> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 131);

/**
 * @generated from message CMsgGCCStrike15_v2_Party_SearchResults.Entry
 */
export type CMsgGCCStrike15_v2_Party_SearchResults_Entry = Message<"CMsgGCCStrike15_v2_Party_SearchResults.Entry"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional uint32 grp = 2;
   */
  grp: number;

  /**
   * @generated from field: optional uint32 game_type = 3;
   */
  gameType: number;

  /**
   * @generated from field: optional uint32 apr = 4;
   */
  apr: number;

  /**
   * @generated from field: optional uint32 ark = 5;
   */
  ark: number;

  /**
   * @generated from field: optional uint32 loc = 6;
   */
  loc: number;

  /**
   * @generated from field: optional uint32 accountid = 7;
   */
  accountid: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Party_SearchResults.Entry.
 * Use `create(CMsgGCCStrike15_v2_Party_SearchResults_EntrySchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Party_SearchResults_EntrySchema: GenMessage<CMsgGCCStrike15_v2_Party_SearchResults_Entry> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 131, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_Party_Invite
 */
export type CMsgGCCStrike15_v2_Party_Invite = Message<"CMsgGCCStrike15_v2_Party_Invite"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 lobbyid = 2;
   */
  lobbyid: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Party_Invite.
 * Use `create(CMsgGCCStrike15_v2_Party_InviteSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Party_InviteSchema: GenMessage<CMsgGCCStrike15_v2_Party_Invite> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 132);

/**
 * @generated from message CMsgGCCStrike15_v2_Account_RequestCoPlays
 */
export type CMsgGCCStrike15_v2_Account_RequestCoPlays = Message<"CMsgGCCStrike15_v2_Account_RequestCoPlays"> & {
  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_Account_RequestCoPlays.Player players = 1;
   */
  players: CMsgGCCStrike15_v2_Account_RequestCoPlays_Player[];

  /**
   * @generated from field: optional uint32 servertime = 2;
   */
  servertime: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Account_RequestCoPlays.
 * Use `create(CMsgGCCStrike15_v2_Account_RequestCoPlaysSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Account_RequestCoPlaysSchema: GenMessage<CMsgGCCStrike15_v2_Account_RequestCoPlays> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 133);

/**
 * @generated from message CMsgGCCStrike15_v2_Account_RequestCoPlays.Player
 */
export type CMsgGCCStrike15_v2_Account_RequestCoPlays_Player = Message<"CMsgGCCStrike15_v2_Account_RequestCoPlays.Player"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 rtcoplay = 2;
   */
  rtcoplay: number;

  /**
   * @generated from field: optional bool online = 3;
   */
  online: boolean;
};

/**
 * Describes the message CMsgGCCStrike15_v2_Account_RequestCoPlays.Player.
 * Use `create(CMsgGCCStrike15_v2_Account_RequestCoPlays_PlayerSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_Account_RequestCoPlays_PlayerSchema: GenMessage<CMsgGCCStrike15_v2_Account_RequestCoPlays_Player> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 133, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientToGCRequestTicket
 */
export type CMsgGCCStrike15_v2_ClientToGCRequestTicket = Message<"CMsgGCCStrike15_v2_ClientToGCRequestTicket"> & {
  /**
   * @generated from field: optional fixed64 authorized_steam_id = 1;
   */
  authorizedSteamId: bigint;

  /**
   * @generated from field: optional fixed32 authorized_public_ip = 2;
   */
  authorizedPublicIp: number;

  /**
   * @generated from field: optional fixed64 gameserver_steam_id = 3;
   */
  gameserverSteamId: bigint;

  /**
   * @generated from field: optional string gameserver_sdr_routing = 5;
   */
  gameserverSdrRouting: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientToGCRequestTicket.
 * Use `create(CMsgGCCStrike15_v2_ClientToGCRequestTicketSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientToGCRequestTicketSchema: GenMessage<CMsgGCCStrike15_v2_ClientToGCRequestTicket> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 134);

/**
 * @generated from message CMsgGCToClientSteamDatagramTicket
 */
export type CMsgGCToClientSteamDatagramTicket = Message<"CMsgGCToClientSteamDatagramTicket"> & {
  /**
   * @generated from field: optional bytes serialized_ticket = 16;
   */
  serializedTicket: Uint8Array;
};

/**
 * Describes the message CMsgGCToClientSteamDatagramTicket.
 * Use `create(CMsgGCToClientSteamDatagramTicketSchema)` to create a new message.
 */
export const CMsgGCToClientSteamDatagramTicketSchema: GenMessage<CMsgGCToClientSteamDatagramTicket> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 135);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientRequestOffers
 */
export type CMsgGCCStrike15_v2_ClientRequestOffers = Message<"CMsgGCCStrike15_v2_ClientRequestOffers"> & {
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientRequestOffers.
 * Use `create(CMsgGCCStrike15_v2_ClientRequestOffersSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientRequestOffersSchema: GenMessage<CMsgGCCStrike15_v2_ClientRequestOffers> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 136);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientRequestSouvenir
 */
export type CMsgGCCStrike15_v2_ClientRequestSouvenir = Message<"CMsgGCCStrike15_v2_ClientRequestSouvenir"> & {
  /**
   * @generated from field: optional uint64 itemid = 1;
   */
  itemid: bigint;

  /**
   * @generated from field: optional uint64 matchid = 2;
   */
  matchid: bigint;

  /**
   * @generated from field: optional int32 eventid = 3;
   */
  eventid: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientRequestSouvenir.
 * Use `create(CMsgGCCStrike15_v2_ClientRequestSouvenirSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientRequestSouvenirSchema: GenMessage<CMsgGCCStrike15_v2_ClientRequestSouvenir> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 137);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientAccountBalance
 */
export type CMsgGCCStrike15_v2_ClientAccountBalance = Message<"CMsgGCCStrike15_v2_ClientAccountBalance"> & {
  /**
   * @generated from field: optional uint64 amount = 1;
   */
  amount: bigint;

  /**
   * @generated from field: optional string url = 2;
   */
  url: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientAccountBalance.
 * Use `create(CMsgGCCStrike15_v2_ClientAccountBalanceSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientAccountBalanceSchema: GenMessage<CMsgGCCStrike15_v2_ClientAccountBalance> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 138);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientPartyJoinRelay
 */
export type CMsgGCCStrike15_v2_ClientPartyJoinRelay = Message<"CMsgGCCStrike15_v2_ClientPartyJoinRelay"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint64 lobbyid = 2;
   */
  lobbyid: bigint;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientPartyJoinRelay.
 * Use `create(CMsgGCCStrike15_v2_ClientPartyJoinRelaySchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientPartyJoinRelaySchema: GenMessage<CMsgGCCStrike15_v2_ClientPartyJoinRelay> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 139);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientPartyWarning
 */
export type CMsgGCCStrike15_v2_ClientPartyWarning = Message<"CMsgGCCStrike15_v2_ClientPartyWarning"> & {
  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_ClientPartyWarning.Entry entries = 1;
   */
  entries: CMsgGCCStrike15_v2_ClientPartyWarning_Entry[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientPartyWarning.
 * Use `create(CMsgGCCStrike15_v2_ClientPartyWarningSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientPartyWarningSchema: GenMessage<CMsgGCCStrike15_v2_ClientPartyWarning> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 140);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientPartyWarning.Entry
 */
export type CMsgGCCStrike15_v2_ClientPartyWarning_Entry = Message<"CMsgGCCStrike15_v2_ClientPartyWarning.Entry"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 warntype = 2;
   */
  warntype: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientPartyWarning.Entry.
 * Use `create(CMsgGCCStrike15_v2_ClientPartyWarning_EntrySchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientPartyWarning_EntrySchema: GenMessage<CMsgGCCStrike15_v2_ClientPartyWarning_Entry> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 140, 0);

/**
 * @generated from message CMsgGCCStrike15_v2_SetEventFavorite
 */
export type CMsgGCCStrike15_v2_SetEventFavorite = Message<"CMsgGCCStrike15_v2_SetEventFavorite"> & {
  /**
   * @generated from field: optional uint64 eventid = 1;
   */
  eventid: bigint;

  /**
   * @generated from field: optional bool is_favorite = 2;
   */
  isFavorite: boolean;
};

/**
 * Describes the message CMsgGCCStrike15_v2_SetEventFavorite.
 * Use `create(CMsgGCCStrike15_v2_SetEventFavoriteSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_SetEventFavoriteSchema: GenMessage<CMsgGCCStrike15_v2_SetEventFavorite> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 141);

/**
 * @generated from message CMsgGCCStrike15_v2_GetEventFavorites_Request
 */
export type CMsgGCCStrike15_v2_GetEventFavorites_Request = Message<"CMsgGCCStrike15_v2_GetEventFavorites_Request"> & {
  /**
   * @generated from field: optional bool all_events = 1;
   */
  allEvents: boolean;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GetEventFavorites_Request.
 * Use `create(CMsgGCCStrike15_v2_GetEventFavorites_RequestSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GetEventFavorites_RequestSchema: GenMessage<CMsgGCCStrike15_v2_GetEventFavorites_Request> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 142);

/**
 * @generated from message CMsgGCCStrike15_v2_GetEventFavorites_Response
 */
export type CMsgGCCStrike15_v2_GetEventFavorites_Response = Message<"CMsgGCCStrike15_v2_GetEventFavorites_Response"> & {
  /**
   * @generated from field: optional bool all_events = 1;
   */
  allEvents: boolean;

  /**
   * @generated from field: optional string json_favorites = 2;
   */
  jsonFavorites: string;

  /**
   * @generated from field: optional string json_featured = 3;
   */
  jsonFeatured: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GetEventFavorites_Response.
 * Use `create(CMsgGCCStrike15_v2_GetEventFavorites_ResponseSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GetEventFavorites_ResponseSchema: GenMessage<CMsgGCCStrike15_v2_GetEventFavorites_Response> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 143);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientPerfReport
 */
export type CMsgGCCStrike15_v2_ClientPerfReport = Message<"CMsgGCCStrike15_v2_ClientPerfReport"> & {
  /**
   * @generated from field: repeated CMsgGCCStrike15_v2_ClientPerfReport.Entry entries = 1;
   */
  entries: CMsgGCCStrike15_v2_ClientPerfReport_Entry[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientPerfReport.
 * Use `create(CMsgGCCStrike15_v2_ClientPerfReportSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientPerfReportSchema: GenMessage<CMsgGCCStrike15_v2_ClientPerfReport> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 144);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientPerfReport.Entry
 */
export type CMsgGCCStrike15_v2_ClientPerfReport_Entry = Message<"CMsgGCCStrike15_v2_ClientPerfReport.Entry"> & {
  /**
   * @generated from field: optional uint32 perfcounter = 1;
   */
  perfcounter: number;

  /**
   * @generated from field: optional uint32 length = 2;
   */
  length: number;

  /**
   * @generated from field: optional bytes reference = 3;
   */
  reference: Uint8Array;

  /**
   * @generated from field: optional bytes actual = 4;
   */
  actual: Uint8Array;

  /**
   * @generated from field: optional uint32 sourceid = 5;
   */
  sourceid: number;

  /**
   * @generated from field: optional uint32 status = 6;
   */
  status: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientPerfReport.Entry.
 * Use `create(CMsgGCCStrike15_v2_ClientPerfReport_EntrySchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientPerfReport_EntrySchema: GenMessage<CMsgGCCStrike15_v2_ClientPerfReport_Entry> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 144, 0);

/**
 * @generated from message CVDiagnostic
 */
export type CVDiagnostic = Message<"CVDiagnostic"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional uint32 extended = 2;
   */
  extended: number;

  /**
   * @generated from field: optional uint64 value = 3;
   */
  value: bigint;

  /**
   * @generated from field: optional string string_value = 4;
   */
  stringValue: string;
};

/**
 * Describes the message CVDiagnostic.
 * Use `create(CVDiagnosticSchema)` to create a new message.
 */
export const CVDiagnosticSchema: GenMessage<CVDiagnostic> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 145);

/**
 * @generated from message CMsgGCCStrike15_v2_ClientReportValidation
 */
export type CMsgGCCStrike15_v2_ClientReportValidation = Message<"CMsgGCCStrike15_v2_ClientReportValidation"> & {
  /**
   * @generated from field: optional string file_report = 1;
   */
  fileReport: string;

  /**
   * @generated from field: optional string command_line = 2;
   */
  commandLine: string;

  /**
   * @generated from field: optional uint32 total_files = 3;
   */
  totalFiles: number;

  /**
   * @generated from field: optional uint32 internal_error = 4;
   */
  internalError: number;

  /**
   * @generated from field: optional uint32 trust_time = 5;
   */
  trustTime: number;

  /**
   * @generated from field: optional uint32 count_pending = 6;
   */
  countPending: number;

  /**
   * @generated from field: optional uint32 count_completed = 7;
   */
  countCompleted: number;

  /**
   * @generated from field: optional uint32 process_id = 8;
   */
  processId: number;

  /**
   * @generated from field: optional int32 osversion = 9;
   */
  osversion: number;

  /**
   * @generated from field: optional uint32 clientreportversion = 10;
   */
  clientreportversion: number;

  /**
   * @generated from field: optional uint32 status_id = 11;
   */
  statusId: number;

  /**
   * @generated from field: optional uint32 diagnostic1 = 12;
   */
  diagnostic1: number;

  /**
   * @generated from field: optional uint64 diagnostic2 = 13;
   */
  diagnostic2: bigint;

  /**
   * @generated from field: optional uint64 diagnostic3 = 14;
   */
  diagnostic3: bigint;

  /**
   * @generated from field: optional string last_launch_data = 15;
   */
  lastLaunchData: string;

  /**
   * @generated from field: optional uint32 report_count = 16;
   */
  reportCount: number;

  /**
   * @generated from field: optional uint64 client_time = 17;
   */
  clientTime: bigint;

  /**
   * @generated from field: optional uint64 diagnostic4 = 18;
   */
  diagnostic4: bigint;

  /**
   * @generated from field: optional uint64 diagnostic5 = 19;
   */
  diagnostic5: bigint;

  /**
   * @generated from field: repeated CVDiagnostic diagnostics = 20;
   */
  diagnostics: CVDiagnostic[];
};

/**
 * Describes the message CMsgGCCStrike15_v2_ClientReportValidation.
 * Use `create(CMsgGCCStrike15_v2_ClientReportValidationSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_ClientReportValidationSchema: GenMessage<CMsgGCCStrike15_v2_ClientReportValidation> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 146);

/**
 * @generated from message CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode
 */
export type CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode = Message<"CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode"> & {
  /**
   * @generated from field: optional string file_report = 1;
   */
  fileReport: string;

  /**
   * @generated from field: optional bool offer_insecure_mode = 2;
   */
  offerInsecureMode: boolean;

  /**
   * @generated from field: optional bool offer_secure_mode = 3;
   */
  offerSecureMode: boolean;

  /**
   * @generated from field: optional bool show_unsigned_ui = 4;
   */
  showUnsignedUi: boolean;

  /**
   * @generated from field: optional bool kick_user = 5;
   */
  kickUser: boolean;

  /**
   * @generated from field: optional bool show_trusted_ui = 6;
   */
  showTrustedUi: boolean;

  /**
   * @generated from field: optional bool show_warning_not_trusted = 7;
   */
  showWarningNotTrusted: boolean;

  /**
   * @generated from field: optional bool show_warning_not_trusted_2 = 8;
   */
  showWarningNotTrusted2: boolean;

  /**
   * @generated from field: optional string files_prevented_trusted = 9;
   */
  filesPreventedTrusted: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode.
 * Use `create(CMsgGCCStrike15_v2_GC2ClientRefuseSecureModeSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GC2ClientRefuseSecureModeSchema: GenMessage<CMsgGCCStrike15_v2_GC2ClientRefuseSecureMode> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 147);

/**
 * @generated from message CMsgGCCStrike15_v2_GC2ClientRequestValidation
 */
export type CMsgGCCStrike15_v2_GC2ClientRequestValidation = Message<"CMsgGCCStrike15_v2_GC2ClientRequestValidation"> & {
  /**
   * @generated from field: optional bool full_report = 1;
   */
  fullReport: boolean;

  /**
   * @generated from field: optional string module = 2;
   */
  module: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GC2ClientRequestValidation.
 * Use `create(CMsgGCCStrike15_v2_GC2ClientRequestValidationSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GC2ClientRequestValidationSchema: GenMessage<CMsgGCCStrike15_v2_GC2ClientRequestValidation> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 148);

/**
 * @generated from message CMsgGCCStrike15_v2_GC2ClientInitSystem
 */
export type CMsgGCCStrike15_v2_GC2ClientInitSystem = Message<"CMsgGCCStrike15_v2_GC2ClientInitSystem"> & {
  /**
   * @generated from field: optional bool load = 1;
   */
  load: boolean;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string outputname = 3;
   */
  outputname: string;

  /**
   * @generated from field: optional bytes key_data = 4;
   */
  keyData: Uint8Array;

  /**
   * @generated from field: optional bytes sha_hash = 5;
   */
  shaHash: Uint8Array;

  /**
   * @generated from field: optional int32 cookie = 6;
   */
  cookie: number;

  /**
   * @generated from field: optional string manifest = 7;
   */
  manifest: string;

  /**
   * @generated from field: optional bytes system_package = 8;
   */
  systemPackage: Uint8Array;

  /**
   * @generated from field: optional bool load_system = 9;
   */
  loadSystem: boolean;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GC2ClientInitSystem.
 * Use `create(CMsgGCCStrike15_v2_GC2ClientInitSystemSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GC2ClientInitSystemSchema: GenMessage<CMsgGCCStrike15_v2_GC2ClientInitSystem> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 149);

/**
 * @generated from message CMsgGCCStrike15_v2_GC2ClientInitSystem_Response
 */
export type CMsgGCCStrike15_v2_GC2ClientInitSystem_Response = Message<"CMsgGCCStrike15_v2_GC2ClientInitSystem_Response"> & {
  /**
   * @generated from field: optional bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: optional string diagnostic = 2;
   */
  diagnostic: string;

  /**
   * @generated from field: optional bytes sha_hash = 3;
   */
  shaHash: Uint8Array;

  /**
   * @generated from field: optional int32 response = 4;
   */
  response: number;

  /**
   * @generated from field: optional int32 error_code1 = 5;
   */
  errorCode1: number;

  /**
   * @generated from field: optional int32 error_code2 = 6;
   */
  errorCode2: number;

  /**
   * @generated from field: optional int64 handle = 7;
   */
  handle: bigint;

  /**
   * @generated from field: optional EInitSystemResult einit_result = 8 [default = k_EInitSystemResult_Invalid];
   */
  einitResult: EInitSystemResult;

  /**
   * @generated from field: optional int32 aux_system1 = 9;
   */
  auxSystem1: number;

  /**
   * @generated from field: optional int32 aux_system2 = 10;
   */
  auxSystem2: number;
};

/**
 * Describes the message CMsgGCCStrike15_v2_GC2ClientInitSystem_Response.
 * Use `create(CMsgGCCStrike15_v2_GC2ClientInitSystem_ResponseSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_GC2ClientInitSystem_ResponseSchema: GenMessage<CMsgGCCStrike15_v2_GC2ClientInitSystem_Response> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 150);

/**
 * @generated from message CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName
 */
export type CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName = Message<"CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName"> & {
  /**
   * @generated from field: optional string leaderboard_safe_name = 1;
   */
  leaderboardSafeName: string;
};

/**
 * Describes the message CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName.
 * Use `create(CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeNameSchema)` to create a new message.
 */
export const CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeNameSchema: GenMessage<CMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 151);

/**
 * @generated from message CMsgRequestRecurringMissionSchedule
 */
export type CMsgRequestRecurringMissionSchedule = Message<"CMsgRequestRecurringMissionSchedule"> & {
};

/**
 * Describes the message CMsgRequestRecurringMissionSchedule.
 * Use `create(CMsgRequestRecurringMissionScheduleSchema)` to create a new message.
 */
export const CMsgRequestRecurringMissionScheduleSchema: GenMessage<CMsgRequestRecurringMissionSchedule> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 152);

/**
 * @generated from message CMsgRecurringMissionSchema
 */
export type CMsgRecurringMissionSchema = Message<"CMsgRecurringMissionSchema"> & {
  /**
   * @generated from field: repeated CMsgRecurringMissionSchema.MissionTemplateList missions = 1;
   */
  missions: CMsgRecurringMissionSchema_MissionTemplateList[];
};

/**
 * Describes the message CMsgRecurringMissionSchema.
 * Use `create(CMsgRecurringMissionSchemaSchema)` to create a new message.
 */
export const CMsgRecurringMissionSchemaSchema: GenMessage<CMsgRecurringMissionSchema> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 153);

/**
 * @generated from message CMsgRecurringMissionSchema.MissionTemplateList
 */
export type CMsgRecurringMissionSchema_MissionTemplateList = Message<"CMsgRecurringMissionSchema.MissionTemplateList"> & {
  /**
   * @generated from field: optional uint32 period = 1;
   */
  period: number;

  /**
   * @generated from field: repeated bytes mission_templates = 2;
   */
  missionTemplates: Uint8Array[];
};

/**
 * Describes the message CMsgRecurringMissionSchema.MissionTemplateList.
 * Use `create(CMsgRecurringMissionSchema_MissionTemplateListSchema)` to create a new message.
 */
export const CMsgRecurringMissionSchema_MissionTemplateListSchema: GenMessage<CMsgRecurringMissionSchema_MissionTemplateList> = /*@__PURE__*/
  messageDesc(file_cstrike15_gcmessages, 153, 0);

/**
 * @generated from enum ECsgoGCMsg
 */
export enum ECsgoGCMsg {
  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Base = 9100;
   */
  k_EMsgGCCStrike15_v2_Base = 9100,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingStart = 9101;
   */
  k_EMsgGCCStrike15_v2_MatchmakingStart = 9101,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingStop = 9102;
   */
  k_EMsgGCCStrike15_v2_MatchmakingStop = 9102,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingClient2ServerPing = 9103;
   */
  k_EMsgGCCStrike15_v2_MatchmakingClient2ServerPing = 9103,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate = 9104;
   */
  k_EMsgGCCStrike15_v2_MatchmakingGC2ClientUpdate = 9104,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingServerReservationResponse = 9106;
   */
  k_EMsgGCCStrike15_v2_MatchmakingServerReservationResponse = 9106,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingGC2ClientReserve = 9107;
   */
  k_EMsgGCCStrike15_v2_MatchmakingGC2ClientReserve = 9107,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingClient2GCHello = 9109;
   */
  k_EMsgGCCStrike15_v2_MatchmakingClient2GCHello = 9109,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingGC2ClientHello = 9110;
   */
  k_EMsgGCCStrike15_v2_MatchmakingGC2ClientHello = 9110,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon = 9112;
   */
  k_EMsgGCCStrike15_v2_MatchmakingGC2ClientAbandon = 9112,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate = 9117;
   */
  k_EMsgGCCStrike15_v2_MatchmakingOperator2GCBlogUpdate = 9117,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty = 9118;
   */
  k_EMsgGCCStrike15_v2_ServerNotificationForUserPenalty = 9118,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientReportPlayer = 9119;
   */
  k_EMsgGCCStrike15_v2_ClientReportPlayer = 9119,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientReportServer = 9120;
   */
  k_EMsgGCCStrike15_v2_ClientReportServer = 9120,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientCommendPlayer = 9121;
   */
  k_EMsgGCCStrike15_v2_ClientCommendPlayer = 9121,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientReportResponse = 9122;
   */
  k_EMsgGCCStrike15_v2_ClientReportResponse = 9122,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientCommendPlayerQuery = 9123;
   */
  k_EMsgGCCStrike15_v2_ClientCommendPlayerQuery = 9123,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientCommendPlayerQueryResponse = 9124;
   */
  k_EMsgGCCStrike15_v2_ClientCommendPlayerQueryResponse = 9124,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_WatchInfoUsers = 9126;
   */
  k_EMsgGCCStrike15_v2_WatchInfoUsers = 9126,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientRequestPlayersProfile = 9127;
   */
  k_EMsgGCCStrike15_v2_ClientRequestPlayersProfile = 9127,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_PlayersProfile = 9128;
   */
  k_EMsgGCCStrike15_v2_PlayersProfile = 9128,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate = 9131;
   */
  k_EMsgGCCStrike15_v2_PlayerOverwatchCaseUpdate = 9131,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment = 9132;
   */
  k_EMsgGCCStrike15_v2_PlayerOverwatchCaseAssignment = 9132,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_PlayerOverwatchCaseStatus = 9133;
   */
  k_EMsgGCCStrike15_v2_PlayerOverwatchCaseStatus = 9133,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GC2ClientTextMsg = 9134;
   */
  k_EMsgGCCStrike15_v2_GC2ClientTextMsg = 9134,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Client2GCTextMsg = 9135;
   */
  k_EMsgGCCStrike15_v2_Client2GCTextMsg = 9135,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchEndRunRewardDrops = 9136;
   */
  k_EMsgGCCStrike15_v2_MatchEndRunRewardDrops = 9136,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification = 9137;
   */
  k_EMsgGCCStrike15_v2_MatchEndRewardDropsNotification = 9137,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientRequestWatchInfoFriends2 = 9138;
   */
  k_EMsgGCCStrike15_v2_ClientRequestWatchInfoFriends2 = 9138,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchList = 9139;
   */
  k_EMsgGCCStrike15_v2_MatchList = 9139,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames = 9140;
   */
  k_EMsgGCCStrike15_v2_MatchListRequestCurrentLiveGames = 9140,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchListRequestRecentUserGames = 9141;
   */
  k_EMsgGCCStrike15_v2_MatchListRequestRecentUserGames = 9141,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GC2ServerReservationUpdate = 9142;
   */
  k_EMsgGCCStrike15_v2_GC2ServerReservationUpdate = 9142,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientVarValueNotificationInfo = 9144;
   */
  k_EMsgGCCStrike15_v2_ClientVarValueNotificationInfo = 9144,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchListRequestTournamentGames = 9146;
   */
  k_EMsgGCCStrike15_v2_MatchListRequestTournamentGames = 9146,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchListRequestFullGameInfo = 9147;
   */
  k_EMsgGCCStrike15_v2_MatchListRequestFullGameInfo = 9147,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GiftsLeaderboardRequest = 9148;
   */
  k_EMsgGCCStrike15_v2_GiftsLeaderboardRequest = 9148,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GiftsLeaderboardResponse = 9149;
   */
  k_EMsgGCCStrike15_v2_GiftsLeaderboardResponse = 9149,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ServerVarValueNotificationInfo = 9150;
   */
  k_EMsgGCCStrike15_v2_ServerVarValueNotificationInfo = 9150,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientSubmitSurveyVote = 9152;
   */
  k_EMsgGCCStrike15_v2_ClientSubmitSurveyVote = 9152,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Server2GCClientValidate = 9153;
   */
  k_EMsgGCCStrike15_v2_Server2GCClientValidate = 9153,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchListRequestLiveGameForUser = 9154;
   */
  k_EMsgGCCStrike15_v2_MatchListRequestLiveGameForUser = 9154,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest = 9156;
   */
  k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockRequest = 9156,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse = 9157;
   */
  k_EMsgGCCStrike15_v2_Client2GCEconPreviewDataBlockResponse = 9157,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_AccountPrivacySettings = 9158;
   */
  k_EMsgGCCStrike15_v2_AccountPrivacySettings = 9158,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_SetMyActivityInfo = 9159;
   */
  k_EMsgGCCStrike15_v2_SetMyActivityInfo = 9159,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchListRequestTournamentPredictions = 9160;
   */
  k_EMsgGCCStrike15_v2_MatchListRequestTournamentPredictions = 9160,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchListUploadTournamentPredictions = 9161;
   */
  k_EMsgGCCStrike15_v2_MatchListUploadTournamentPredictions = 9161,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_DraftSummary = 9162;
   */
  k_EMsgGCCStrike15_v2_DraftSummary = 9162,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientRequestJoinFriendData = 9163;
   */
  k_EMsgGCCStrike15_v2_ClientRequestJoinFriendData = 9163,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientRequestJoinServerData = 9164;
   */
  k_EMsgGCCStrike15_v2_ClientRequestJoinServerData = 9164,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GC2ClientTournamentInfo = 9167;
   */
  k_EMsgGCCStrike15_v2_GC2ClientTournamentInfo = 9167,

  /**
   * @generated from enum value: k_EMsgGC_GlobalGame_Subscribe = 9168;
   */
  k_EMsgGC_GlobalGame_Subscribe = 9168,

  /**
   * @generated from enum value: k_EMsgGC_GlobalGame_Unsubscribe = 9169;
   */
  k_EMsgGC_GlobalGame_Unsubscribe = 9169,

  /**
   * @generated from enum value: k_EMsgGC_GlobalGame_Play = 9170;
   */
  k_EMsgGC_GlobalGame_Play = 9170,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_AcknowledgePenalty = 9171;
   */
  k_EMsgGCCStrike15_v2_AcknowledgePenalty = 9171,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin = 9172;
   */
  k_EMsgGCCStrike15_v2_Client2GCRequestPrestigeCoin = 9172,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GC2ClientGlobalStats = 9173;
   */
  k_EMsgGCCStrike15_v2_GC2ClientGlobalStats = 9173,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Client2GCStreamUnlock = 9174;
   */
  k_EMsgGCCStrike15_v2_Client2GCStreamUnlock = 9174,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_FantasyRequestClientData = 9175;
   */
  k_EMsgGCCStrike15_v2_FantasyRequestClientData = 9175,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_FantasyUpdateClientData = 9176;
   */
  k_EMsgGCCStrike15_v2_FantasyUpdateClientData = 9176,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GCToClientSteamdatagramTicket = 9177;
   */
  k_EMsgGCCStrike15_v2_GCToClientSteamdatagramTicket = 9177,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientToGCRequestTicket = 9178;
   */
  k_EMsgGCCStrike15_v2_ClientToGCRequestTicket = 9178,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientToGCRequestElevate = 9179;
   */
  k_EMsgGCCStrike15_v2_ClientToGCRequestElevate = 9179,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GlobalChat = 9180;
   */
  k_EMsgGCCStrike15_v2_GlobalChat = 9180,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GlobalChat_Subscribe = 9181;
   */
  k_EMsgGCCStrike15_v2_GlobalChat_Subscribe = 9181,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GlobalChat_Unsubscribe = 9182;
   */
  k_EMsgGCCStrike15_v2_GlobalChat_Unsubscribe = 9182,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientAuthKeyCode = 9183;
   */
  k_EMsgGCCStrike15_v2_ClientAuthKeyCode = 9183,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GotvSyncPacket = 9184;
   */
  k_EMsgGCCStrike15_v2_GotvSyncPacket = 9184,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientPlayerDecalSign = 9185;
   */
  k_EMsgGCCStrike15_v2_ClientPlayerDecalSign = 9185,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientLogonFatalError = 9187;
   */
  k_EMsgGCCStrike15_v2_ClientLogonFatalError = 9187,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientPollState = 9188;
   */
  k_EMsgGCCStrike15_v2_ClientPollState = 9188,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Party_Register = 9189;
   */
  k_EMsgGCCStrike15_v2_Party_Register = 9189,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Party_Unregister = 9190;
   */
  k_EMsgGCCStrike15_v2_Party_Unregister = 9190,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Party_Search = 9191;
   */
  k_EMsgGCCStrike15_v2_Party_Search = 9191,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Party_Invite = 9192;
   */
  k_EMsgGCCStrike15_v2_Party_Invite = 9192,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Account_RequestCoPlays = 9193;
   */
  k_EMsgGCCStrike15_v2_Account_RequestCoPlays = 9193,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientGCRankUpdate = 9194;
   */
  k_EMsgGCCStrike15_v2_ClientGCRankUpdate = 9194,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientRequestOffers = 9195;
   */
  k_EMsgGCCStrike15_v2_ClientRequestOffers = 9195,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientAccountBalance = 9196;
   */
  k_EMsgGCCStrike15_v2_ClientAccountBalance = 9196,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientPartyJoinRelay = 9197;
   */
  k_EMsgGCCStrike15_v2_ClientPartyJoinRelay = 9197,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientPartyWarning = 9198;
   */
  k_EMsgGCCStrike15_v2_ClientPartyWarning = 9198,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_SetEventFavorite = 9200;
   */
  k_EMsgGCCStrike15_v2_SetEventFavorite = 9200,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GetEventFavorites_Request = 9201;
   */
  k_EMsgGCCStrike15_v2_GetEventFavorites_Request = 9201,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientPerfReport = 9202;
   */
  k_EMsgGCCStrike15_v2_ClientPerfReport = 9202,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GetEventFavorites_Response = 9203;
   */
  k_EMsgGCCStrike15_v2_GetEventFavorites_Response = 9203,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientRequestSouvenir = 9204;
   */
  k_EMsgGCCStrike15_v2_ClientRequestSouvenir = 9204,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientReportValidation = 9205;
   */
  k_EMsgGCCStrike15_v2_ClientReportValidation = 9205,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GC2ClientRefuseSecureMode = 9206;
   */
  k_EMsgGCCStrike15_v2_GC2ClientRefuseSecureMode = 9206,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GC2ClientRequestValidation = 9207;
   */
  k_EMsgGCCStrike15_v2_GC2ClientRequestValidation = 9207,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientRedeemMissionReward = 9209;
   */
  k_EMsgGCCStrike15_v2_ClientRedeemMissionReward = 9209,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_ClientDeepStats = 9210;
   */
  k_EMsgGCCStrike15_ClientDeepStats = 9210,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_StartAgreementSessionInGame = 9211;
   */
  k_EMsgGCCStrike15_StartAgreementSessionInGame = 9211,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GC2ClientInitSystem = 9212;
   */
  k_EMsgGCCStrike15_v2_GC2ClientInitSystem = 9212,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GC2ClientInitSystem_Response = 9213;
   */
  k_EMsgGCCStrike15_v2_GC2ClientInitSystem_Response = 9213,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_PrivateQueues = 9214;
   */
  k_EMsgGCCStrike15_v2_PrivateQueues = 9214,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt = 9215;
   */
  k_EMsgGCCStrike15_v2_MatchListTournamentOperatorMgmt = 9215,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_BetaEnrollment = 9217;
   */
  k_EMsgGCCStrike15_v2_BetaEnrollment = 9217,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName = 9218;
   */
  k_EMsgGCCStrike15_v2_SetPlayerLeaderboardSafeName = 9218,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientRedeemFreeReward = 9219;
   */
  k_EMsgGCCStrike15_v2_ClientRedeemFreeReward = 9219,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_ClientNetworkConfig = 9220;
   */
  k_EMsgGCCStrike15_v2_ClientNetworkConfig = 9220,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_GC2ClientNotifyXPShop = 9221;
   */
  k_EMsgGCCStrike15_v2_GC2ClientNotifyXPShop = 9221,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_Client2GcAckXPShopTracks = 9222;
   */
  k_EMsgGCCStrike15_v2_Client2GcAckXPShopTracks = 9222,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats = 9223;
   */
  k_EMsgGCCStrike15_v2_MatchmakingGC2ClientSearchStats = 9223,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_PremierSeasonSummary = 9224;
   */
  k_EMsgGCCStrike15_v2_PremierSeasonSummary = 9224,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_RequestRecurringMissionSchedule = 9225;
   */
  k_EMsgGCCStrike15_v2_RequestRecurringMissionSchedule = 9225,

  /**
   * @generated from enum value: k_EMsgGCCStrike15_v2_RecurringMissionSchema = 9226;
   */
  k_EMsgGCCStrike15_v2_RecurringMissionSchema = 9226,
}

/**
 * Describes the enum ECsgoGCMsg.
 */
export const ECsgoGCMsgSchema: GenEnum<ECsgoGCMsg> = /*@__PURE__*/
  enumDesc(file_cstrike15_gcmessages, 0);

/**
 * @generated from enum ECsgoSteamUserStat
 */
export enum ECsgoSteamUserStat {
  /**
   * @generated from enum value: k_ECsgoSteamUserStat_XpEarnedGames = 1;
   */
  k_ECsgoSteamUserStat_XpEarnedGames = 1,

  /**
   * @generated from enum value: k_ECsgoSteamUserStat_MatchWinsCompetitive = 2;
   */
  k_ECsgoSteamUserStat_MatchWinsCompetitive = 2,

  /**
   * @generated from enum value: k_ECsgoSteamUserStat_SurvivedDangerZone = 3;
   */
  k_ECsgoSteamUserStat_SurvivedDangerZone = 3,
}

/**
 * Describes the enum ECsgoSteamUserStat.
 */
export const ECsgoSteamUserStatSchema: GenEnum<ECsgoSteamUserStat> = /*@__PURE__*/
  enumDesc(file_cstrike15_gcmessages, 1);

/**
 * @generated from enum QuestType
 */
export enum QuestType {
  /**
   * @generated from enum value: k_EQuestType_Operation = 1;
   */
  k_EQuestType_Operation = 1,

  /**
   * @generated from enum value: k_EQuestType_RecurringMission = 2;
   */
  k_EQuestType_RecurringMission = 2,
}

/**
 * Describes the enum QuestType.
 */
export const QuestTypeSchema: GenEnum<QuestType> = /*@__PURE__*/
  enumDesc(file_cstrike15_gcmessages, 2);

/**
 * @generated from enum EClientReportingVersion
 */
export enum EClientReportingVersion {
  /**
   * @generated from enum value: k_EClientReportingVersion_OldVersion = 0;
   */
  k_EClientReportingVersion_OldVersion = 0,

  /**
   * @generated from enum value: k_EClientReportingVersion_BetaVersion = 1;
   */
  k_EClientReportingVersion_BetaVersion = 1,

  /**
   * @generated from enum value: k_EClientReportingVersion_SupportsTrustedMode = 2;
   */
  k_EClientReportingVersion_SupportsTrustedMode = 2,
}

/**
 * Describes the enum EClientReportingVersion.
 */
export const EClientReportingVersionSchema: GenEnum<EClientReportingVersion> = /*@__PURE__*/
  enumDesc(file_cstrike15_gcmessages, 3);

/**
 * @generated from enum EInitSystemResult
 */
export enum EInitSystemResult {
  /**
   * @generated from enum value: k_EInitSystemResult_Invalid = 0;
   */
  k_EInitSystemResult_Invalid = 0,

  /**
   * @generated from enum value: k_EInitSystemResult_Success = 1;
   */
  k_EInitSystemResult_Success = 1,

  /**
   * @generated from enum value: k_EInitSystemResult_None = 2;
   */
  k_EInitSystemResult_None = 2,

  /**
   * @generated from enum value: k_EInitSystemResult_NotFound = 3;
   */
  k_EInitSystemResult_NotFound = 3,

  /**
   * @generated from enum value: k_EInitSystemResult_Existing = 4;
   */
  k_EInitSystemResult_Existing = 4,

  /**
   * @generated from enum value: k_EInitSystemResult_FailedOpen = 5;
   */
  k_EInitSystemResult_FailedOpen = 5,

  /**
   * @generated from enum value: k_EInitSystemResult_Mismatch = 6;
   */
  k_EInitSystemResult_Mismatch = 6,

  /**
   * @generated from enum value: k_EInitSystemResult_FailedInit = 7;
   */
  k_EInitSystemResult_FailedInit = 7,

  /**
   * @generated from enum value: k_EInitSystemResult_Max = 8;
   */
  k_EInitSystemResult_Max = 8,
}

/**
 * Describes the enum EInitSystemResult.
 */
export const EInitSystemResultSchema: GenEnum<EInitSystemResult> = /*@__PURE__*/
  enumDesc(file_cstrike15_gcmessages, 4);


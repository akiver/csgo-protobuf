// @generated by protoc-gen-es v1.8.0 with parameter "target=ts"
// @generated from file gameevents.proto (syntax proto2)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";
import { CMsgVector } from "./networkbasetypes_pb.js";

/**
 * @generated from enum EBaseGameEvents
 */
export enum EBaseGameEvents {
  /**
   * @generated from enum value: GE_VDebugGameSessionIDEvent = 200;
   */
  GE_VDebugGameSessionIDEvent = 200,

  /**
   * @generated from enum value: GE_PlaceDecalEvent = 201;
   */
  GE_PlaceDecalEvent = 201,

  /**
   * @generated from enum value: GE_ClearWorldDecalsEvent = 202;
   */
  GE_ClearWorldDecalsEvent = 202,

  /**
   * @generated from enum value: GE_ClearEntityDecalsEvent = 203;
   */
  GE_ClearEntityDecalsEvent = 203,

  /**
   * @generated from enum value: GE_ClearDecalsForSkeletonInstanceEvent = 204;
   */
  GE_ClearDecalsForSkeletonInstanceEvent = 204,

  /**
   * @generated from enum value: GE_Source1LegacyGameEventList = 205;
   */
  GE_Source1LegacyGameEventList = 205,

  /**
   * @generated from enum value: GE_Source1LegacyListenEvents = 206;
   */
  GE_Source1LegacyListenEvents = 206,

  /**
   * @generated from enum value: GE_Source1LegacyGameEvent = 207;
   */
  GE_Source1LegacyGameEvent = 207,

  /**
   * @generated from enum value: GE_SosStartSoundEvent = 208;
   */
  GE_SosStartSoundEvent = 208,

  /**
   * @generated from enum value: GE_SosStopSoundEvent = 209;
   */
  GE_SosStopSoundEvent = 209,

  /**
   * @generated from enum value: GE_SosSetSoundEventParams = 210;
   */
  GE_SosSetSoundEventParams = 210,

  /**
   * @generated from enum value: GE_SosSetLibraryStackFields = 211;
   */
  GE_SosSetLibraryStackFields = 211,

  /**
   * @generated from enum value: GE_SosStopSoundEventHash = 212;
   */
  GE_SosStopSoundEventHash = 212,
}
// Retrieve enum metadata with: proto2.getEnumType(EBaseGameEvents)
proto2.util.setEnumType(EBaseGameEvents, "EBaseGameEvents", [
  { no: 200, name: "GE_VDebugGameSessionIDEvent" },
  { no: 201, name: "GE_PlaceDecalEvent" },
  { no: 202, name: "GE_ClearWorldDecalsEvent" },
  { no: 203, name: "GE_ClearEntityDecalsEvent" },
  { no: 204, name: "GE_ClearDecalsForSkeletonInstanceEvent" },
  { no: 205, name: "GE_Source1LegacyGameEventList" },
  { no: 206, name: "GE_Source1LegacyListenEvents" },
  { no: 207, name: "GE_Source1LegacyGameEvent" },
  { no: 208, name: "GE_SosStartSoundEvent" },
  { no: 209, name: "GE_SosStopSoundEvent" },
  { no: 210, name: "GE_SosSetSoundEventParams" },
  { no: 211, name: "GE_SosSetLibraryStackFields" },
  { no: 212, name: "GE_SosStopSoundEventHash" },
]);

/**
 * @generated from message CMsgVDebugGameSessionIDEvent
 */
export class CMsgVDebugGameSessionIDEvent extends Message<CMsgVDebugGameSessionIDEvent> {
  /**
   * @generated from field: optional int32 clientid = 1;
   */
  clientid?: number;

  /**
   * @generated from field: optional string gamesessionid = 2;
   */
  gamesessionid?: string;

  constructor(data?: PartialMessage<CMsgVDebugGameSessionIDEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgVDebugGameSessionIDEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "clientid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "gamesessionid", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgVDebugGameSessionIDEvent {
    return new CMsgVDebugGameSessionIDEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgVDebugGameSessionIDEvent {
    return new CMsgVDebugGameSessionIDEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgVDebugGameSessionIDEvent {
    return new CMsgVDebugGameSessionIDEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgVDebugGameSessionIDEvent | PlainMessage<CMsgVDebugGameSessionIDEvent> | undefined, b: CMsgVDebugGameSessionIDEvent | PlainMessage<CMsgVDebugGameSessionIDEvent> | undefined): boolean {
    return proto2.util.equals(CMsgVDebugGameSessionIDEvent, a, b);
  }
}

/**
 * @generated from message CMsgPlaceDecalEvent
 */
export class CMsgPlaceDecalEvent extends Message<CMsgPlaceDecalEvent> {
  /**
   * @generated from field: optional CMsgVector position = 1;
   */
  position?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector normal = 2;
   */
  normal?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector saxis = 3;
   */
  saxis?: CMsgVector;

  /**
   * @generated from field: optional uint32 decalmaterialindex = 4;
   */
  decalmaterialindex?: number;

  /**
   * @generated from field: optional uint32 flags = 5;
   */
  flags?: number;

  /**
   * @generated from field: optional fixed32 color = 6;
   */
  color?: number;

  /**
   * @generated from field: optional float width = 7;
   */
  width?: number;

  /**
   * @generated from field: optional float height = 8;
   */
  height?: number;

  /**
   * @generated from field: optional float depth = 9;
   */
  depth?: number;

  /**
   * @generated from field: optional uint32 entityhandleindex = 10;
   */
  entityhandleindex?: number;

  /**
   * @generated from field: optional fixed32 skeletoninstancehash = 11;
   */
  skeletoninstancehash?: number;

  /**
   * @generated from field: optional int32 boneindex = 12;
   */
  boneindex?: number;

  /**
   * @generated from field: optional bool translucenthit = 13;
   */
  translucenthit?: boolean;

  /**
   * @generated from field: optional bool is_adjacent = 14;
   */
  isAdjacent?: boolean;

  constructor(data?: PartialMessage<CMsgPlaceDecalEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgPlaceDecalEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "position", kind: "message", T: CMsgVector, opt: true },
    { no: 2, name: "normal", kind: "message", T: CMsgVector, opt: true },
    { no: 3, name: "saxis", kind: "message", T: CMsgVector, opt: true },
    { no: 4, name: "decalmaterialindex", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "color", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 7, name: "width", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 8, name: "height", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 9, name: "depth", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 10, name: "entityhandleindex", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 11, name: "skeletoninstancehash", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 12, name: "boneindex", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 13, name: "translucenthit", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 14, name: "is_adjacent", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgPlaceDecalEvent {
    return new CMsgPlaceDecalEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgPlaceDecalEvent {
    return new CMsgPlaceDecalEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgPlaceDecalEvent {
    return new CMsgPlaceDecalEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgPlaceDecalEvent | PlainMessage<CMsgPlaceDecalEvent> | undefined, b: CMsgPlaceDecalEvent | PlainMessage<CMsgPlaceDecalEvent> | undefined): boolean {
    return proto2.util.equals(CMsgPlaceDecalEvent, a, b);
  }
}

/**
 * @generated from message CMsgClearWorldDecalsEvent
 */
export class CMsgClearWorldDecalsEvent extends Message<CMsgClearWorldDecalsEvent> {
  /**
   * @generated from field: optional uint32 flagstoclear = 1;
   */
  flagstoclear?: number;

  constructor(data?: PartialMessage<CMsgClearWorldDecalsEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgClearWorldDecalsEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "flagstoclear", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgClearWorldDecalsEvent {
    return new CMsgClearWorldDecalsEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgClearWorldDecalsEvent {
    return new CMsgClearWorldDecalsEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgClearWorldDecalsEvent {
    return new CMsgClearWorldDecalsEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgClearWorldDecalsEvent | PlainMessage<CMsgClearWorldDecalsEvent> | undefined, b: CMsgClearWorldDecalsEvent | PlainMessage<CMsgClearWorldDecalsEvent> | undefined): boolean {
    return proto2.util.equals(CMsgClearWorldDecalsEvent, a, b);
  }
}

/**
 * @generated from message CMsgClearEntityDecalsEvent
 */
export class CMsgClearEntityDecalsEvent extends Message<CMsgClearEntityDecalsEvent> {
  /**
   * @generated from field: optional uint32 flagstoclear = 1;
   */
  flagstoclear?: number;

  constructor(data?: PartialMessage<CMsgClearEntityDecalsEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgClearEntityDecalsEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "flagstoclear", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgClearEntityDecalsEvent {
    return new CMsgClearEntityDecalsEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgClearEntityDecalsEvent {
    return new CMsgClearEntityDecalsEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgClearEntityDecalsEvent {
    return new CMsgClearEntityDecalsEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgClearEntityDecalsEvent | PlainMessage<CMsgClearEntityDecalsEvent> | undefined, b: CMsgClearEntityDecalsEvent | PlainMessage<CMsgClearEntityDecalsEvent> | undefined): boolean {
    return proto2.util.equals(CMsgClearEntityDecalsEvent, a, b);
  }
}

/**
 * @generated from message CMsgClearDecalsForSkeletonInstanceEvent
 */
export class CMsgClearDecalsForSkeletonInstanceEvent extends Message<CMsgClearDecalsForSkeletonInstanceEvent> {
  /**
   * @generated from field: optional uint32 flagstoclear = 1;
   */
  flagstoclear?: number;

  /**
   * @generated from field: optional uint32 entityhandleindex = 2;
   */
  entityhandleindex?: number;

  /**
   * @generated from field: optional uint32 skeletoninstancehash = 3;
   */
  skeletoninstancehash?: number;

  constructor(data?: PartialMessage<CMsgClearDecalsForSkeletonInstanceEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgClearDecalsForSkeletonInstanceEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "flagstoclear", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "entityhandleindex", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "skeletoninstancehash", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgClearDecalsForSkeletonInstanceEvent {
    return new CMsgClearDecalsForSkeletonInstanceEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgClearDecalsForSkeletonInstanceEvent {
    return new CMsgClearDecalsForSkeletonInstanceEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgClearDecalsForSkeletonInstanceEvent {
    return new CMsgClearDecalsForSkeletonInstanceEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgClearDecalsForSkeletonInstanceEvent | PlainMessage<CMsgClearDecalsForSkeletonInstanceEvent> | undefined, b: CMsgClearDecalsForSkeletonInstanceEvent | PlainMessage<CMsgClearDecalsForSkeletonInstanceEvent> | undefined): boolean {
    return proto2.util.equals(CMsgClearDecalsForSkeletonInstanceEvent, a, b);
  }
}

/**
 * @generated from message CMsgSource1LegacyGameEventList
 */
export class CMsgSource1LegacyGameEventList extends Message<CMsgSource1LegacyGameEventList> {
  /**
   * @generated from field: repeated CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
   */
  descriptors: CMsgSource1LegacyGameEventList_descriptor_t[] = [];

  constructor(data?: PartialMessage<CMsgSource1LegacyGameEventList>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSource1LegacyGameEventList";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "descriptors", kind: "message", T: CMsgSource1LegacyGameEventList_descriptor_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSource1LegacyGameEventList {
    return new CMsgSource1LegacyGameEventList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSource1LegacyGameEventList {
    return new CMsgSource1LegacyGameEventList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSource1LegacyGameEventList {
    return new CMsgSource1LegacyGameEventList().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSource1LegacyGameEventList | PlainMessage<CMsgSource1LegacyGameEventList> | undefined, b: CMsgSource1LegacyGameEventList | PlainMessage<CMsgSource1LegacyGameEventList> | undefined): boolean {
    return proto2.util.equals(CMsgSource1LegacyGameEventList, a, b);
  }
}

/**
 * @generated from message CMsgSource1LegacyGameEventList.key_t
 */
export class CMsgSource1LegacyGameEventList_key_t extends Message<CMsgSource1LegacyGameEventList_key_t> {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type?: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  constructor(data?: PartialMessage<CMsgSource1LegacyGameEventList_key_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSource1LegacyGameEventList.key_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSource1LegacyGameEventList_key_t {
    return new CMsgSource1LegacyGameEventList_key_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSource1LegacyGameEventList_key_t {
    return new CMsgSource1LegacyGameEventList_key_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSource1LegacyGameEventList_key_t {
    return new CMsgSource1LegacyGameEventList_key_t().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSource1LegacyGameEventList_key_t | PlainMessage<CMsgSource1LegacyGameEventList_key_t> | undefined, b: CMsgSource1LegacyGameEventList_key_t | PlainMessage<CMsgSource1LegacyGameEventList_key_t> | undefined): boolean {
    return proto2.util.equals(CMsgSource1LegacyGameEventList_key_t, a, b);
  }
}

/**
 * @generated from message CMsgSource1LegacyGameEventList.descriptor_t
 */
export class CMsgSource1LegacyGameEventList_descriptor_t extends Message<CMsgSource1LegacyGameEventList_descriptor_t> {
  /**
   * @generated from field: optional int32 eventid = 1;
   */
  eventid?: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: repeated CMsgSource1LegacyGameEventList.key_t keys = 3;
   */
  keys: CMsgSource1LegacyGameEventList_key_t[] = [];

  constructor(data?: PartialMessage<CMsgSource1LegacyGameEventList_descriptor_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSource1LegacyGameEventList.descriptor_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "eventid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "keys", kind: "message", T: CMsgSource1LegacyGameEventList_key_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSource1LegacyGameEventList_descriptor_t {
    return new CMsgSource1LegacyGameEventList_descriptor_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSource1LegacyGameEventList_descriptor_t {
    return new CMsgSource1LegacyGameEventList_descriptor_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSource1LegacyGameEventList_descriptor_t {
    return new CMsgSource1LegacyGameEventList_descriptor_t().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSource1LegacyGameEventList_descriptor_t | PlainMessage<CMsgSource1LegacyGameEventList_descriptor_t> | undefined, b: CMsgSource1LegacyGameEventList_descriptor_t | PlainMessage<CMsgSource1LegacyGameEventList_descriptor_t> | undefined): boolean {
    return proto2.util.equals(CMsgSource1LegacyGameEventList_descriptor_t, a, b);
  }
}

/**
 * @generated from message CMsgSource1LegacyListenEvents
 */
export class CMsgSource1LegacyListenEvents extends Message<CMsgSource1LegacyListenEvents> {
  /**
   * @generated from field: optional int32 playerslot = 1;
   */
  playerslot?: number;

  /**
   * @generated from field: repeated uint32 eventarraybits = 2;
   */
  eventarraybits: number[] = [];

  constructor(data?: PartialMessage<CMsgSource1LegacyListenEvents>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSource1LegacyListenEvents";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "playerslot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "eventarraybits", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSource1LegacyListenEvents {
    return new CMsgSource1LegacyListenEvents().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSource1LegacyListenEvents {
    return new CMsgSource1LegacyListenEvents().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSource1LegacyListenEvents {
    return new CMsgSource1LegacyListenEvents().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSource1LegacyListenEvents | PlainMessage<CMsgSource1LegacyListenEvents> | undefined, b: CMsgSource1LegacyListenEvents | PlainMessage<CMsgSource1LegacyListenEvents> | undefined): boolean {
    return proto2.util.equals(CMsgSource1LegacyListenEvents, a, b);
  }
}

/**
 * @generated from message CMsgSource1LegacyGameEvent
 */
export class CMsgSource1LegacyGameEvent extends Message<CMsgSource1LegacyGameEvent> {
  /**
   * @generated from field: optional string event_name = 1;
   */
  eventName?: string;

  /**
   * @generated from field: optional int32 eventid = 2;
   */
  eventid?: number;

  /**
   * @generated from field: repeated CMsgSource1LegacyGameEvent.key_t keys = 3;
   */
  keys: CMsgSource1LegacyGameEvent_key_t[] = [];

  /**
   * @generated from field: optional int32 server_tick = 4;
   */
  serverTick?: number;

  /**
   * @generated from field: optional int32 passthrough = 5;
   */
  passthrough?: number;

  constructor(data?: PartialMessage<CMsgSource1LegacyGameEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSource1LegacyGameEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "event_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "eventid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "keys", kind: "message", T: CMsgSource1LegacyGameEvent_key_t, repeated: true },
    { no: 4, name: "server_tick", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "passthrough", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSource1LegacyGameEvent {
    return new CMsgSource1LegacyGameEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSource1LegacyGameEvent {
    return new CMsgSource1LegacyGameEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSource1LegacyGameEvent {
    return new CMsgSource1LegacyGameEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSource1LegacyGameEvent | PlainMessage<CMsgSource1LegacyGameEvent> | undefined, b: CMsgSource1LegacyGameEvent | PlainMessage<CMsgSource1LegacyGameEvent> | undefined): boolean {
    return proto2.util.equals(CMsgSource1LegacyGameEvent, a, b);
  }
}

/**
 * @generated from message CMsgSource1LegacyGameEvent.key_t
 */
export class CMsgSource1LegacyGameEvent_key_t extends Message<CMsgSource1LegacyGameEvent_key_t> {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type?: number;

  /**
   * @generated from field: optional string val_string = 2;
   */
  valString?: string;

  /**
   * @generated from field: optional float val_float = 3;
   */
  valFloat?: number;

  /**
   * @generated from field: optional int32 val_long = 4;
   */
  valLong?: number;

  /**
   * @generated from field: optional int32 val_short = 5;
   */
  valShort?: number;

  /**
   * @generated from field: optional int32 val_byte = 6;
   */
  valByte?: number;

  /**
   * @generated from field: optional bool val_bool = 7;
   */
  valBool?: boolean;

  /**
   * @generated from field: optional uint64 val_uint64 = 8;
   */
  valUint64?: bigint;

  constructor(data?: PartialMessage<CMsgSource1LegacyGameEvent_key_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSource1LegacyGameEvent.key_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "val_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "val_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "val_long", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "val_short", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "val_byte", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "val_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 8, name: "val_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSource1LegacyGameEvent_key_t {
    return new CMsgSource1LegacyGameEvent_key_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSource1LegacyGameEvent_key_t {
    return new CMsgSource1LegacyGameEvent_key_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSource1LegacyGameEvent_key_t {
    return new CMsgSource1LegacyGameEvent_key_t().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSource1LegacyGameEvent_key_t | PlainMessage<CMsgSource1LegacyGameEvent_key_t> | undefined, b: CMsgSource1LegacyGameEvent_key_t | PlainMessage<CMsgSource1LegacyGameEvent_key_t> | undefined): boolean {
    return proto2.util.equals(CMsgSource1LegacyGameEvent_key_t, a, b);
  }
}

/**
 * @generated from message CMsgSosStartSoundEvent
 */
export class CMsgSosStartSoundEvent extends Message<CMsgSosStartSoundEvent> {
  /**
   * @generated from field: optional int32 soundevent_guid = 1;
   */
  soundeventGuid?: number;

  /**
   * @generated from field: optional fixed32 soundevent_hash = 2;
   */
  soundeventHash?: number;

  /**
   * @generated from field: optional int32 source_entity_index = 3 [default = -1];
   */
  sourceEntityIndex?: number;

  /**
   * @generated from field: optional int32 seed = 4;
   */
  seed?: number;

  /**
   * @generated from field: optional bytes packed_params = 5;
   */
  packedParams?: Uint8Array;

  /**
   * @generated from field: optional float start_time = 6;
   */
  startTime?: number;

  constructor(data?: PartialMessage<CMsgSosStartSoundEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSosStartSoundEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "soundevent_guid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "soundevent_hash", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 3, name: "source_entity_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 4, name: "seed", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "packed_params", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "start_time", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSosStartSoundEvent {
    return new CMsgSosStartSoundEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSosStartSoundEvent {
    return new CMsgSosStartSoundEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSosStartSoundEvent {
    return new CMsgSosStartSoundEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSosStartSoundEvent | PlainMessage<CMsgSosStartSoundEvent> | undefined, b: CMsgSosStartSoundEvent | PlainMessage<CMsgSosStartSoundEvent> | undefined): boolean {
    return proto2.util.equals(CMsgSosStartSoundEvent, a, b);
  }
}

/**
 * @generated from message CMsgSosStopSoundEvent
 */
export class CMsgSosStopSoundEvent extends Message<CMsgSosStopSoundEvent> {
  /**
   * @generated from field: optional int32 soundevent_guid = 1;
   */
  soundeventGuid?: number;

  constructor(data?: PartialMessage<CMsgSosStopSoundEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSosStopSoundEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "soundevent_guid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSosStopSoundEvent {
    return new CMsgSosStopSoundEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSosStopSoundEvent {
    return new CMsgSosStopSoundEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSosStopSoundEvent {
    return new CMsgSosStopSoundEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSosStopSoundEvent | PlainMessage<CMsgSosStopSoundEvent> | undefined, b: CMsgSosStopSoundEvent | PlainMessage<CMsgSosStopSoundEvent> | undefined): boolean {
    return proto2.util.equals(CMsgSosStopSoundEvent, a, b);
  }
}

/**
 * @generated from message CMsgSosStopSoundEventHash
 */
export class CMsgSosStopSoundEventHash extends Message<CMsgSosStopSoundEventHash> {
  /**
   * @generated from field: optional fixed32 soundevent_hash = 1;
   */
  soundeventHash?: number;

  /**
   * @generated from field: optional int32 source_entity_index = 2 [default = -1];
   */
  sourceEntityIndex?: number;

  constructor(data?: PartialMessage<CMsgSosStopSoundEventHash>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSosStopSoundEventHash";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "soundevent_hash", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "source_entity_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSosStopSoundEventHash {
    return new CMsgSosStopSoundEventHash().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSosStopSoundEventHash {
    return new CMsgSosStopSoundEventHash().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSosStopSoundEventHash {
    return new CMsgSosStopSoundEventHash().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSosStopSoundEventHash | PlainMessage<CMsgSosStopSoundEventHash> | undefined, b: CMsgSosStopSoundEventHash | PlainMessage<CMsgSosStopSoundEventHash> | undefined): boolean {
    return proto2.util.equals(CMsgSosStopSoundEventHash, a, b);
  }
}

/**
 * @generated from message CMsgSosSetSoundEventParams
 */
export class CMsgSosSetSoundEventParams extends Message<CMsgSosSetSoundEventParams> {
  /**
   * @generated from field: optional int32 soundevent_guid = 1;
   */
  soundeventGuid?: number;

  /**
   * @generated from field: optional bytes packed_params = 5;
   */
  packedParams?: Uint8Array;

  constructor(data?: PartialMessage<CMsgSosSetSoundEventParams>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSosSetSoundEventParams";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "soundevent_guid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "packed_params", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSosSetSoundEventParams {
    return new CMsgSosSetSoundEventParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSosSetSoundEventParams {
    return new CMsgSosSetSoundEventParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSosSetSoundEventParams {
    return new CMsgSosSetSoundEventParams().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSosSetSoundEventParams | PlainMessage<CMsgSosSetSoundEventParams> | undefined, b: CMsgSosSetSoundEventParams | PlainMessage<CMsgSosSetSoundEventParams> | undefined): boolean {
    return proto2.util.equals(CMsgSosSetSoundEventParams, a, b);
  }
}

/**
 * @generated from message CMsgSosSetLibraryStackFields
 */
export class CMsgSosSetLibraryStackFields extends Message<CMsgSosSetLibraryStackFields> {
  /**
   * @generated from field: optional fixed32 stack_hash = 1;
   */
  stackHash?: number;

  /**
   * @generated from field: optional bytes packed_fields = 5;
   */
  packedFields?: Uint8Array;

  constructor(data?: PartialMessage<CMsgSosSetLibraryStackFields>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgSosSetLibraryStackFields";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "stack_hash", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 5, name: "packed_fields", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgSosSetLibraryStackFields {
    return new CMsgSosSetLibraryStackFields().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgSosSetLibraryStackFields {
    return new CMsgSosSetLibraryStackFields().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgSosSetLibraryStackFields {
    return new CMsgSosSetLibraryStackFields().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgSosSetLibraryStackFields | PlainMessage<CMsgSosSetLibraryStackFields> | undefined, b: CMsgSosSetLibraryStackFields | PlainMessage<CMsgSosSetLibraryStackFields> | undefined): boolean {
    return proto2.util.equals(CMsgSosSetLibraryStackFields, a, b);
  }
}


// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file usermessages.proto (syntax proto2)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";
import { CEntityMsg, CMsgQAngle, CMsgQuaternion, CMsgVector } from "./networkbasetypes_pb.js";

/**
 * @generated from enum EBaseUserMessages
 */
export enum EBaseUserMessages {
  /**
   * @generated from enum value: UM_AchievementEvent = 101;
   */
  UM_AchievementEvent = 101,

  /**
   * @generated from enum value: UM_CloseCaption = 102;
   */
  UM_CloseCaption = 102,

  /**
   * @generated from enum value: UM_CloseCaptionDirect = 103;
   */
  UM_CloseCaptionDirect = 103,

  /**
   * @generated from enum value: UM_CurrentTimescale = 104;
   */
  UM_CurrentTimescale = 104,

  /**
   * @generated from enum value: UM_DesiredTimescale = 105;
   */
  UM_DesiredTimescale = 105,

  /**
   * @generated from enum value: UM_Fade = 106;
   */
  UM_Fade = 106,

  /**
   * @generated from enum value: UM_GameTitle = 107;
   */
  UM_GameTitle = 107,

  /**
   * @generated from enum value: UM_HudMsg = 110;
   */
  UM_HudMsg = 110,

  /**
   * @generated from enum value: UM_HudText = 111;
   */
  UM_HudText = 111,

  /**
   * @generated from enum value: UM_ColoredText = 113;
   */
  UM_ColoredText = 113,

  /**
   * @generated from enum value: UM_RequestState = 114;
   */
  UM_RequestState = 114,

  /**
   * @generated from enum value: UM_ResetHUD = 115;
   */
  UM_ResetHUD = 115,

  /**
   * @generated from enum value: UM_Rumble = 116;
   */
  UM_Rumble = 116,

  /**
   * @generated from enum value: UM_SayText = 117;
   */
  UM_SayText = 117,

  /**
   * @generated from enum value: UM_SayText2 = 118;
   */
  UM_SayText2 = 118,

  /**
   * @generated from enum value: UM_SayTextChannel = 119;
   */
  UM_SayTextChannel = 119,

  /**
   * @generated from enum value: UM_Shake = 120;
   */
  UM_Shake = 120,

  /**
   * @generated from enum value: UM_ShakeDir = 121;
   */
  UM_ShakeDir = 121,

  /**
   * @generated from enum value: UM_TextMsg = 124;
   */
  UM_TextMsg = 124,

  /**
   * @generated from enum value: UM_ScreenTilt = 125;
   */
  UM_ScreenTilt = 125,

  /**
   * @generated from enum value: UM_VoiceMask = 128;
   */
  UM_VoiceMask = 128,

  /**
   * @generated from enum value: UM_SendAudio = 130;
   */
  UM_SendAudio = 130,

  /**
   * @generated from enum value: UM_ItemPickup = 131;
   */
  UM_ItemPickup = 131,

  /**
   * @generated from enum value: UM_AmmoDenied = 132;
   */
  UM_AmmoDenied = 132,

  /**
   * @generated from enum value: UM_ShowMenu = 134;
   */
  UM_ShowMenu = 134,

  /**
   * @generated from enum value: UM_CreditsMsg = 135;
   */
  UM_CreditsMsg = 135,

  /**
   * @generated from enum value: UM_CloseCaptionPlaceholder = 142;
   */
  UM_CloseCaptionPlaceholder = 142,

  /**
   * @generated from enum value: UM_CameraTransition = 143;
   */
  UM_CameraTransition = 143,

  /**
   * @generated from enum value: UM_AudioParameter = 144;
   */
  UM_AudioParameter = 144,

  /**
   * @generated from enum value: UM_ParticleManager = 145;
   */
  UM_ParticleManager = 145,

  /**
   * @generated from enum value: UM_HudError = 146;
   */
  UM_HudError = 146,

  /**
   * @generated from enum value: UM_CustomGameEvent = 148;
   */
  UM_CustomGameEvent = 148,

  /**
   * @generated from enum value: UM_AnimGraphUpdate = 149;
   */
  UM_AnimGraphUpdate = 149,

  /**
   * @generated from enum value: UM_HapticsManagerPulse = 150;
   */
  UM_HapticsManagerPulse = 150,

  /**
   * @generated from enum value: UM_HapticsManagerEffect = 151;
   */
  UM_HapticsManagerEffect = 151,

  /**
   * @generated from enum value: UM_CommandQueueState = 152;
   */
  UM_CommandQueueState = 152,

  /**
   * @generated from enum value: UM_UpdateCssClasses = 153;
   */
  UM_UpdateCssClasses = 153,

  /**
   * @generated from enum value: UM_ServerFrameTime = 154;
   */
  UM_ServerFrameTime = 154,

  /**
   * @generated from enum value: UM_LagCompensationError = 155;
   */
  UM_LagCompensationError = 155,

  /**
   * @generated from enum value: UM_RequestDllStatus = 156;
   */
  UM_RequestDllStatus = 156,

  /**
   * @generated from enum value: UM_RequestUtilAction = 157;
   */
  UM_RequestUtilAction = 157,

  /**
   * @generated from enum value: UM_UtilActionResponse = 158;
   */
  UM_UtilActionResponse = 158,

  /**
   * @generated from enum value: UM_DllStatusResponse = 159;
   */
  UM_DllStatusResponse = 159,

  /**
   * @generated from enum value: UM_RequestInventory = 160;
   */
  UM_RequestInventory = 160,

  /**
   * @generated from enum value: UM_InventoryResponse = 161;
   */
  UM_InventoryResponse = 161,

  /**
   * @generated from enum value: UM_MAX_BASE = 200;
   */
  UM_MAX_BASE = 200,
}
// Retrieve enum metadata with: proto2.getEnumType(EBaseUserMessages)
proto2.util.setEnumType(EBaseUserMessages, "EBaseUserMessages", [
  { no: 101, name: "UM_AchievementEvent" },
  { no: 102, name: "UM_CloseCaption" },
  { no: 103, name: "UM_CloseCaptionDirect" },
  { no: 104, name: "UM_CurrentTimescale" },
  { no: 105, name: "UM_DesiredTimescale" },
  { no: 106, name: "UM_Fade" },
  { no: 107, name: "UM_GameTitle" },
  { no: 110, name: "UM_HudMsg" },
  { no: 111, name: "UM_HudText" },
  { no: 113, name: "UM_ColoredText" },
  { no: 114, name: "UM_RequestState" },
  { no: 115, name: "UM_ResetHUD" },
  { no: 116, name: "UM_Rumble" },
  { no: 117, name: "UM_SayText" },
  { no: 118, name: "UM_SayText2" },
  { no: 119, name: "UM_SayTextChannel" },
  { no: 120, name: "UM_Shake" },
  { no: 121, name: "UM_ShakeDir" },
  { no: 124, name: "UM_TextMsg" },
  { no: 125, name: "UM_ScreenTilt" },
  { no: 128, name: "UM_VoiceMask" },
  { no: 130, name: "UM_SendAudio" },
  { no: 131, name: "UM_ItemPickup" },
  { no: 132, name: "UM_AmmoDenied" },
  { no: 134, name: "UM_ShowMenu" },
  { no: 135, name: "UM_CreditsMsg" },
  { no: 142, name: "UM_CloseCaptionPlaceholder" },
  { no: 143, name: "UM_CameraTransition" },
  { no: 144, name: "UM_AudioParameter" },
  { no: 145, name: "UM_ParticleManager" },
  { no: 146, name: "UM_HudError" },
  { no: 148, name: "UM_CustomGameEvent" },
  { no: 149, name: "UM_AnimGraphUpdate" },
  { no: 150, name: "UM_HapticsManagerPulse" },
  { no: 151, name: "UM_HapticsManagerEffect" },
  { no: 152, name: "UM_CommandQueueState" },
  { no: 153, name: "UM_UpdateCssClasses" },
  { no: 154, name: "UM_ServerFrameTime" },
  { no: 155, name: "UM_LagCompensationError" },
  { no: 156, name: "UM_RequestDllStatus" },
  { no: 157, name: "UM_RequestUtilAction" },
  { no: 158, name: "UM_UtilActionResponse" },
  { no: 159, name: "UM_DllStatusResponse" },
  { no: 160, name: "UM_RequestInventory" },
  { no: 161, name: "UM_InventoryResponse" },
  { no: 200, name: "UM_MAX_BASE" },
]);

/**
 * @generated from enum EBaseEntityMessages
 */
export enum EBaseEntityMessages {
  /**
   * @generated from enum value: EM_PlayJingle = 136;
   */
  EM_PlayJingle = 136,

  /**
   * @generated from enum value: EM_ScreenOverlay = 137;
   */
  EM_ScreenOverlay = 137,

  /**
   * @generated from enum value: EM_RemoveAllDecals = 138;
   */
  EM_RemoveAllDecals = 138,

  /**
   * @generated from enum value: EM_PropagateForce = 139;
   */
  EM_PropagateForce = 139,

  /**
   * @generated from enum value: EM_DoSpark = 140;
   */
  EM_DoSpark = 140,

  /**
   * @generated from enum value: EM_FixAngle = 141;
   */
  EM_FixAngle = 141,
}
// Retrieve enum metadata with: proto2.getEnumType(EBaseEntityMessages)
proto2.util.setEnumType(EBaseEntityMessages, "EBaseEntityMessages", [
  { no: 136, name: "EM_PlayJingle" },
  { no: 137, name: "EM_ScreenOverlay" },
  { no: 138, name: "EM_RemoveAllDecals" },
  { no: 139, name: "EM_PropagateForce" },
  { no: 140, name: "EM_DoSpark" },
  { no: 141, name: "EM_FixAngle" },
]);

/**
 * @generated from enum eRollType
 */
export enum eRollType {
  /**
   * @generated from enum value: ROLL_NONE = -1;
   */
  ROLL_NONE = -1,

  /**
   * @generated from enum value: ROLL_STATS = 0;
   */
  ROLL_STATS = 0,

  /**
   * @generated from enum value: ROLL_CREDITS = 1;
   */
  ROLL_CREDITS = 1,

  /**
   * @generated from enum value: ROLL_LATE_JOIN_LOGO = 2;
   */
  ROLL_LATE_JOIN_LOGO = 2,

  /**
   * @generated from enum value: ROLL_OUTTRO = 3;
   */
  ROLL_OUTTRO = 3,
}
// Retrieve enum metadata with: proto2.getEnumType(eRollType)
proto2.util.setEnumType(eRollType, "eRollType", [
  { no: -1, name: "ROLL_NONE" },
  { no: 0, name: "ROLL_STATS" },
  { no: 1, name: "ROLL_CREDITS" },
  { no: 2, name: "ROLL_LATE_JOIN_LOGO" },
  { no: 3, name: "ROLL_OUTTRO" },
]);

/**
 * @generated from enum PARTICLE_MESSAGE
 */
export enum PARTICLE_MESSAGE {
  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_CREATE = 0;
   */
  GAME_PARTICLE_MANAGER_EVENT_CREATE = 0,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_UPDATE = 1;
   */
  GAME_PARTICLE_MANAGER_EVENT_UPDATE = 1,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD = 2;
   */
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD = 2,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION = 3;
   */
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION = 3,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK = 4;
   */
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK = 4,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT = 5;
   */
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT = 5,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET = 6;
   */
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET = 6,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_DESTROY = 7;
   */
  GAME_PARTICLE_MANAGER_EVENT_DESTROY = 7,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING = 8;
   */
  GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING = 8,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_RELEASE = 9;
   */
  GAME_PARTICLE_MANAGER_EVENT_RELEASE = 9,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_LATENCY = 10;
   */
  GAME_PARTICLE_MANAGER_EVENT_LATENCY = 10,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW = 11;
   */
  GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW = 11,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_FROZEN = 12;
   */
  GAME_PARTICLE_MANAGER_EVENT_FROZEN = 12,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT = 13;
   */
  GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT = 13,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION = 14;
   */
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION = 14,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES = 15;
   */
  GAME_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES = 15,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SET_TEXT = 16;
   */
  GAME_PARTICLE_MANAGER_EVENT_SET_TEXT = 16,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW = 17;
   */
  GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW = 17,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_MODEL = 18;
   */
  GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_MODEL = 18,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_SNAPSHOT = 19;
   */
  GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_SNAPSHOT = 19,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SET_TEXTURE_ATTRIBUTE = 20;
   */
  GAME_PARTICLE_MANAGER_EVENT_SET_TEXTURE_ATTRIBUTE = 20,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_GENERIC_FLAG = 21;
   */
  GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_GENERIC_FLAG = 21,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_TINT_AND_DESAT = 22;
   */
  GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_TINT_AND_DESAT = 22,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_DESTROY_NAMED = 23;
   */
  GAME_PARTICLE_MANAGER_EVENT_DESTROY_NAMED = 23,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SKIP_TO_TIME = 24;
   */
  GAME_PARTICLE_MANAGER_EVENT_SKIP_TO_TIME = 24,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_CAN_FREEZE = 25;
   */
  GAME_PARTICLE_MANAGER_EVENT_CAN_FREEZE = 25,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_SET_NAMED_VALUE_CONTEXT = 26;
   */
  GAME_PARTICLE_MANAGER_EVENT_SET_NAMED_VALUE_CONTEXT = 26,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_UPDATE_TRANSFORM = 27;
   */
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_TRANSFORM = 27,

  /**
   * @generated from enum value: GAME_PARTICLE_MANAGER_EVENT_FREEZE_TRANSITION_OVERRIDE = 28;
   */
  GAME_PARTICLE_MANAGER_EVENT_FREEZE_TRANSITION_OVERRIDE = 28,
}
// Retrieve enum metadata with: proto2.getEnumType(PARTICLE_MESSAGE)
proto2.util.setEnumType(PARTICLE_MESSAGE, "PARTICLE_MESSAGE", [
  { no: 0, name: "GAME_PARTICLE_MANAGER_EVENT_CREATE" },
  { no: 1, name: "GAME_PARTICLE_MANAGER_EVENT_UPDATE" },
  { no: 2, name: "GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD" },
  { no: 3, name: "GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION" },
  { no: 4, name: "GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK" },
  { no: 5, name: "GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT" },
  { no: 6, name: "GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET" },
  { no: 7, name: "GAME_PARTICLE_MANAGER_EVENT_DESTROY" },
  { no: 8, name: "GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING" },
  { no: 9, name: "GAME_PARTICLE_MANAGER_EVENT_RELEASE" },
  { no: 10, name: "GAME_PARTICLE_MANAGER_EVENT_LATENCY" },
  { no: 11, name: "GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW" },
  { no: 12, name: "GAME_PARTICLE_MANAGER_EVENT_FROZEN" },
  { no: 13, name: "GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT" },
  { no: 14, name: "GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION" },
  { no: 15, name: "GAME_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES" },
  { no: 16, name: "GAME_PARTICLE_MANAGER_EVENT_SET_TEXT" },
  { no: 17, name: "GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW" },
  { no: 18, name: "GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_MODEL" },
  { no: 19, name: "GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_SNAPSHOT" },
  { no: 20, name: "GAME_PARTICLE_MANAGER_EVENT_SET_TEXTURE_ATTRIBUTE" },
  { no: 21, name: "GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_GENERIC_FLAG" },
  { no: 22, name: "GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_TINT_AND_DESAT" },
  { no: 23, name: "GAME_PARTICLE_MANAGER_EVENT_DESTROY_NAMED" },
  { no: 24, name: "GAME_PARTICLE_MANAGER_EVENT_SKIP_TO_TIME" },
  { no: 25, name: "GAME_PARTICLE_MANAGER_EVENT_CAN_FREEZE" },
  { no: 26, name: "GAME_PARTICLE_MANAGER_EVENT_SET_NAMED_VALUE_CONTEXT" },
  { no: 27, name: "GAME_PARTICLE_MANAGER_EVENT_UPDATE_TRANSFORM" },
  { no: 28, name: "GAME_PARTICLE_MANAGER_EVENT_FREEZE_TRANSITION_OVERRIDE" },
]);

/**
 * @generated from enum EHapticPulseType
 */
export enum EHapticPulseType {
  /**
   * @generated from enum value: VR_HAND_HAPTIC_PULSE_LIGHT = 0;
   */
  VR_HAND_HAPTIC_PULSE_LIGHT = 0,

  /**
   * @generated from enum value: VR_HAND_HAPTIC_PULSE_MEDIUM = 1;
   */
  VR_HAND_HAPTIC_PULSE_MEDIUM = 1,

  /**
   * @generated from enum value: VR_HAND_HAPTIC_PULSE_STRONG = 2;
   */
  VR_HAND_HAPTIC_PULSE_STRONG = 2,
}
// Retrieve enum metadata with: proto2.getEnumType(EHapticPulseType)
proto2.util.setEnumType(EHapticPulseType, "EHapticPulseType", [
  { no: 0, name: "VR_HAND_HAPTIC_PULSE_LIGHT" },
  { no: 1, name: "VR_HAND_HAPTIC_PULSE_MEDIUM" },
  { no: 2, name: "VR_HAND_HAPTIC_PULSE_STRONG" },
]);

/**
 * @generated from message CUserMessageAchievementEvent
 */
export class CUserMessageAchievementEvent extends Message<CUserMessageAchievementEvent> {
  /**
   * @generated from field: optional uint32 achievement = 1;
   */
  achievement?: number;

  constructor(data?: PartialMessage<CUserMessageAchievementEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageAchievementEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "achievement", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageAchievementEvent {
    return new CUserMessageAchievementEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageAchievementEvent {
    return new CUserMessageAchievementEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageAchievementEvent {
    return new CUserMessageAchievementEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageAchievementEvent | PlainMessage<CUserMessageAchievementEvent> | undefined, b: CUserMessageAchievementEvent | PlainMessage<CUserMessageAchievementEvent> | undefined): boolean {
    return proto2.util.equals(CUserMessageAchievementEvent, a, b);
  }
}

/**
 * @generated from message CUserMessageCloseCaption
 */
export class CUserMessageCloseCaption extends Message<CUserMessageCloseCaption> {
  /**
   * @generated from field: optional fixed32 hash = 1;
   */
  hash?: number;

  /**
   * @generated from field: optional float duration = 2;
   */
  duration?: number;

  /**
   * @generated from field: optional bool from_player = 3;
   */
  fromPlayer?: boolean;

  /**
   * @generated from field: optional int32 ent_index = 4 [default = -1];
   */
  entIndex?: number;

  constructor(data?: PartialMessage<CUserMessageCloseCaption>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageCloseCaption";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "hash", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "from_player", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "ent_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageCloseCaption {
    return new CUserMessageCloseCaption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageCloseCaption {
    return new CUserMessageCloseCaption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageCloseCaption {
    return new CUserMessageCloseCaption().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageCloseCaption | PlainMessage<CUserMessageCloseCaption> | undefined, b: CUserMessageCloseCaption | PlainMessage<CUserMessageCloseCaption> | undefined): boolean {
    return proto2.util.equals(CUserMessageCloseCaption, a, b);
  }
}

/**
 * @generated from message CUserMessageCloseCaptionDirect
 */
export class CUserMessageCloseCaptionDirect extends Message<CUserMessageCloseCaptionDirect> {
  /**
   * @generated from field: optional fixed32 hash = 1;
   */
  hash?: number;

  /**
   * @generated from field: optional float duration = 2;
   */
  duration?: number;

  /**
   * @generated from field: optional bool from_player = 3;
   */
  fromPlayer?: boolean;

  /**
   * @generated from field: optional int32 ent_index = 4 [default = -1];
   */
  entIndex?: number;

  constructor(data?: PartialMessage<CUserMessageCloseCaptionDirect>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageCloseCaptionDirect";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "hash", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "from_player", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "ent_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageCloseCaptionDirect {
    return new CUserMessageCloseCaptionDirect().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageCloseCaptionDirect {
    return new CUserMessageCloseCaptionDirect().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageCloseCaptionDirect {
    return new CUserMessageCloseCaptionDirect().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageCloseCaptionDirect | PlainMessage<CUserMessageCloseCaptionDirect> | undefined, b: CUserMessageCloseCaptionDirect | PlainMessage<CUserMessageCloseCaptionDirect> | undefined): boolean {
    return proto2.util.equals(CUserMessageCloseCaptionDirect, a, b);
  }
}

/**
 * @generated from message CUserMessageCloseCaptionPlaceholder
 */
export class CUserMessageCloseCaptionPlaceholder extends Message<CUserMessageCloseCaptionPlaceholder> {
  /**
   * @generated from field: optional string string = 1;
   */
  string?: string;

  /**
   * @generated from field: optional float duration = 2;
   */
  duration?: number;

  /**
   * @generated from field: optional bool from_player = 3;
   */
  fromPlayer?: boolean;

  /**
   * @generated from field: optional int32 ent_index = 4 [default = -1];
   */
  entIndex?: number;

  constructor(data?: PartialMessage<CUserMessageCloseCaptionPlaceholder>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageCloseCaptionPlaceholder";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "from_player", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "ent_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageCloseCaptionPlaceholder {
    return new CUserMessageCloseCaptionPlaceholder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageCloseCaptionPlaceholder {
    return new CUserMessageCloseCaptionPlaceholder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageCloseCaptionPlaceholder {
    return new CUserMessageCloseCaptionPlaceholder().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageCloseCaptionPlaceholder | PlainMessage<CUserMessageCloseCaptionPlaceholder> | undefined, b: CUserMessageCloseCaptionPlaceholder | PlainMessage<CUserMessageCloseCaptionPlaceholder> | undefined): boolean {
    return proto2.util.equals(CUserMessageCloseCaptionPlaceholder, a, b);
  }
}

/**
 * @generated from message CUserMessageCurrentTimescale
 */
export class CUserMessageCurrentTimescale extends Message<CUserMessageCurrentTimescale> {
  /**
   * @generated from field: optional float current = 1;
   */
  current?: number;

  constructor(data?: PartialMessage<CUserMessageCurrentTimescale>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageCurrentTimescale";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "current", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageCurrentTimescale {
    return new CUserMessageCurrentTimescale().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageCurrentTimescale {
    return new CUserMessageCurrentTimescale().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageCurrentTimescale {
    return new CUserMessageCurrentTimescale().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageCurrentTimescale | PlainMessage<CUserMessageCurrentTimescale> | undefined, b: CUserMessageCurrentTimescale | PlainMessage<CUserMessageCurrentTimescale> | undefined): boolean {
    return proto2.util.equals(CUserMessageCurrentTimescale, a, b);
  }
}

/**
 * @generated from message CUserMessageDesiredTimescale
 */
export class CUserMessageDesiredTimescale extends Message<CUserMessageDesiredTimescale> {
  /**
   * @generated from field: optional float desired = 1;
   */
  desired?: number;

  /**
   * @generated from field: optional float acceleration = 2;
   */
  acceleration?: number;

  /**
   * @generated from field: optional float minblendrate = 3;
   */
  minblendrate?: number;

  /**
   * @generated from field: optional float blenddeltamultiplier = 4;
   */
  blenddeltamultiplier?: number;

  constructor(data?: PartialMessage<CUserMessageDesiredTimescale>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageDesiredTimescale";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "desired", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 2, name: "acceleration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "minblendrate", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "blenddeltamultiplier", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageDesiredTimescale {
    return new CUserMessageDesiredTimescale().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageDesiredTimescale {
    return new CUserMessageDesiredTimescale().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageDesiredTimescale {
    return new CUserMessageDesiredTimescale().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageDesiredTimescale | PlainMessage<CUserMessageDesiredTimescale> | undefined, b: CUserMessageDesiredTimescale | PlainMessage<CUserMessageDesiredTimescale> | undefined): boolean {
    return proto2.util.equals(CUserMessageDesiredTimescale, a, b);
  }
}

/**
 * @generated from message CUserMessageFade
 */
export class CUserMessageFade extends Message<CUserMessageFade> {
  /**
   * @generated from field: optional uint32 duration = 1;
   */
  duration?: number;

  /**
   * @generated from field: optional uint32 hold_time = 2;
   */
  holdTime?: number;

  /**
   * @generated from field: optional uint32 flags = 3;
   */
  flags?: number;

  /**
   * @generated from field: optional fixed32 color = 4;
   */
  color?: number;

  constructor(data?: PartialMessage<CUserMessageFade>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageFade";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "duration", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "hold_time", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "color", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageFade {
    return new CUserMessageFade().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageFade {
    return new CUserMessageFade().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageFade {
    return new CUserMessageFade().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageFade | PlainMessage<CUserMessageFade> | undefined, b: CUserMessageFade | PlainMessage<CUserMessageFade> | undefined): boolean {
    return proto2.util.equals(CUserMessageFade, a, b);
  }
}

/**
 * @generated from message CUserMessageShake
 */
export class CUserMessageShake extends Message<CUserMessageShake> {
  /**
   * @generated from field: optional uint32 command = 1;
   */
  command?: number;

  /**
   * @generated from field: optional float amplitude = 2;
   */
  amplitude?: number;

  /**
   * @generated from field: optional float frequency = 3;
   */
  frequency?: number;

  /**
   * @generated from field: optional float duration = 4;
   */
  duration?: number;

  constructor(data?: PartialMessage<CUserMessageShake>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageShake";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "command", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "amplitude", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "frequency", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageShake {
    return new CUserMessageShake().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageShake {
    return new CUserMessageShake().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageShake {
    return new CUserMessageShake().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageShake | PlainMessage<CUserMessageShake> | undefined, b: CUserMessageShake | PlainMessage<CUserMessageShake> | undefined): boolean {
    return proto2.util.equals(CUserMessageShake, a, b);
  }
}

/**
 * @generated from message CUserMessageShakeDir
 */
export class CUserMessageShakeDir extends Message<CUserMessageShakeDir> {
  /**
   * @generated from field: optional CUserMessageShake shake = 1;
   */
  shake?: CUserMessageShake;

  /**
   * @generated from field: optional CMsgVector direction = 2;
   */
  direction?: CMsgVector;

  constructor(data?: PartialMessage<CUserMessageShakeDir>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageShakeDir";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "shake", kind: "message", T: CUserMessageShake, opt: true },
    { no: 2, name: "direction", kind: "message", T: CMsgVector, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageShakeDir {
    return new CUserMessageShakeDir().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageShakeDir {
    return new CUserMessageShakeDir().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageShakeDir {
    return new CUserMessageShakeDir().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageShakeDir | PlainMessage<CUserMessageShakeDir> | undefined, b: CUserMessageShakeDir | PlainMessage<CUserMessageShakeDir> | undefined): boolean {
    return proto2.util.equals(CUserMessageShakeDir, a, b);
  }
}

/**
 * @generated from message CUserMessageScreenTilt
 */
export class CUserMessageScreenTilt extends Message<CUserMessageScreenTilt> {
  /**
   * @generated from field: optional uint32 command = 1;
   */
  command?: number;

  /**
   * @generated from field: optional bool ease_in_out = 2;
   */
  easeInOut?: boolean;

  /**
   * @generated from field: optional CMsgVector angle = 3;
   */
  angle?: CMsgVector;

  /**
   * @generated from field: optional float duration = 4;
   */
  duration?: number;

  /**
   * @generated from field: optional float time = 5;
   */
  time?: number;

  constructor(data?: PartialMessage<CUserMessageScreenTilt>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageScreenTilt";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "command", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "ease_in_out", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "angle", kind: "message", T: CMsgVector, opt: true },
    { no: 4, name: "duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 5, name: "time", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageScreenTilt {
    return new CUserMessageScreenTilt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageScreenTilt {
    return new CUserMessageScreenTilt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageScreenTilt {
    return new CUserMessageScreenTilt().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageScreenTilt | PlainMessage<CUserMessageScreenTilt> | undefined, b: CUserMessageScreenTilt | PlainMessage<CUserMessageScreenTilt> | undefined): boolean {
    return proto2.util.equals(CUserMessageScreenTilt, a, b);
  }
}

/**
 * @generated from message CUserMessageSayText
 */
export class CUserMessageSayText extends Message<CUserMessageSayText> {
  /**
   * @generated from field: optional int32 playerindex = 1 [default = -1];
   */
  playerindex?: number;

  /**
   * @generated from field: optional string text = 2;
   */
  text?: string;

  /**
   * @generated from field: optional bool chat = 3;
   */
  chat?: boolean;

  constructor(data?: PartialMessage<CUserMessageSayText>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageSayText";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "playerindex", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 2, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "chat", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageSayText {
    return new CUserMessageSayText().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageSayText {
    return new CUserMessageSayText().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageSayText {
    return new CUserMessageSayText().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageSayText | PlainMessage<CUserMessageSayText> | undefined, b: CUserMessageSayText | PlainMessage<CUserMessageSayText> | undefined): boolean {
    return proto2.util.equals(CUserMessageSayText, a, b);
  }
}

/**
 * @generated from message CUserMessageSayText2
 */
export class CUserMessageSayText2 extends Message<CUserMessageSayText2> {
  /**
   * @generated from field: optional int32 entityindex = 1 [default = -1];
   */
  entityindex?: number;

  /**
   * @generated from field: optional bool chat = 2;
   */
  chat?: boolean;

  /**
   * @generated from field: optional string messagename = 3;
   */
  messagename?: string;

  /**
   * @generated from field: optional string param1 = 4;
   */
  param1?: string;

  /**
   * @generated from field: optional string param2 = 5;
   */
  param2?: string;

  /**
   * @generated from field: optional string param3 = 6;
   */
  param3?: string;

  /**
   * @generated from field: optional string param4 = 7;
   */
  param4?: string;

  constructor(data?: PartialMessage<CUserMessageSayText2>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageSayText2";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "entityindex", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 2, name: "chat", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "messagename", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "param1", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "param2", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "param3", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "param4", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageSayText2 {
    return new CUserMessageSayText2().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageSayText2 {
    return new CUserMessageSayText2().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageSayText2 {
    return new CUserMessageSayText2().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageSayText2 | PlainMessage<CUserMessageSayText2> | undefined, b: CUserMessageSayText2 | PlainMessage<CUserMessageSayText2> | undefined): boolean {
    return proto2.util.equals(CUserMessageSayText2, a, b);
  }
}

/**
 * @generated from message CUserMessageHudMsg
 */
export class CUserMessageHudMsg extends Message<CUserMessageHudMsg> {
  /**
   * @generated from field: optional uint32 channel = 1;
   */
  channel?: number;

  /**
   * @generated from field: optional float x = 2;
   */
  x?: number;

  /**
   * @generated from field: optional float y = 3;
   */
  y?: number;

  /**
   * @generated from field: optional fixed32 color1 = 4;
   */
  color1?: number;

  /**
   * @generated from field: optional fixed32 color2 = 5;
   */
  color2?: number;

  /**
   * @generated from field: optional uint32 effect = 6;
   */
  effect?: number;

  /**
   * @generated from field: optional string message = 11;
   */
  message?: string;

  constructor(data?: PartialMessage<CUserMessageHudMsg>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageHudMsg";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "channel", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "x", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "y", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "color1", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 5, name: "color2", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 6, name: "effect", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 11, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageHudMsg {
    return new CUserMessageHudMsg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageHudMsg {
    return new CUserMessageHudMsg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageHudMsg {
    return new CUserMessageHudMsg().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageHudMsg | PlainMessage<CUserMessageHudMsg> | undefined, b: CUserMessageHudMsg | PlainMessage<CUserMessageHudMsg> | undefined): boolean {
    return proto2.util.equals(CUserMessageHudMsg, a, b);
  }
}

/**
 * @generated from message CUserMessageHudText
 */
export class CUserMessageHudText extends Message<CUserMessageHudText> {
  /**
   * @generated from field: optional string message = 1;
   */
  message?: string;

  constructor(data?: PartialMessage<CUserMessageHudText>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageHudText";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageHudText {
    return new CUserMessageHudText().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageHudText {
    return new CUserMessageHudText().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageHudText {
    return new CUserMessageHudText().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageHudText | PlainMessage<CUserMessageHudText> | undefined, b: CUserMessageHudText | PlainMessage<CUserMessageHudText> | undefined): boolean {
    return proto2.util.equals(CUserMessageHudText, a, b);
  }
}

/**
 * @generated from message CUserMessageTextMsg
 */
export class CUserMessageTextMsg extends Message<CUserMessageTextMsg> {
  /**
   * @generated from field: optional uint32 dest = 1;
   */
  dest?: number;

  /**
   * @generated from field: repeated string param = 2;
   */
  param: string[] = [];

  constructor(data?: PartialMessage<CUserMessageTextMsg>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageTextMsg";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "dest", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "param", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageTextMsg {
    return new CUserMessageTextMsg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageTextMsg {
    return new CUserMessageTextMsg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageTextMsg {
    return new CUserMessageTextMsg().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageTextMsg | PlainMessage<CUserMessageTextMsg> | undefined, b: CUserMessageTextMsg | PlainMessage<CUserMessageTextMsg> | undefined): boolean {
    return proto2.util.equals(CUserMessageTextMsg, a, b);
  }
}

/**
 * @generated from message CUserMessageGameTitle
 */
export class CUserMessageGameTitle extends Message<CUserMessageGameTitle> {
  constructor(data?: PartialMessage<CUserMessageGameTitle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageGameTitle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageGameTitle {
    return new CUserMessageGameTitle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageGameTitle {
    return new CUserMessageGameTitle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageGameTitle {
    return new CUserMessageGameTitle().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageGameTitle | PlainMessage<CUserMessageGameTitle> | undefined, b: CUserMessageGameTitle | PlainMessage<CUserMessageGameTitle> | undefined): boolean {
    return proto2.util.equals(CUserMessageGameTitle, a, b);
  }
}

/**
 * @generated from message CUserMessageResetHUD
 */
export class CUserMessageResetHUD extends Message<CUserMessageResetHUD> {
  constructor(data?: PartialMessage<CUserMessageResetHUD>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageResetHUD";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageResetHUD {
    return new CUserMessageResetHUD().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageResetHUD {
    return new CUserMessageResetHUD().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageResetHUD {
    return new CUserMessageResetHUD().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageResetHUD | PlainMessage<CUserMessageResetHUD> | undefined, b: CUserMessageResetHUD | PlainMessage<CUserMessageResetHUD> | undefined): boolean {
    return proto2.util.equals(CUserMessageResetHUD, a, b);
  }
}

/**
 * @generated from message CUserMessageSendAudio
 */
export class CUserMessageSendAudio extends Message<CUserMessageSendAudio> {
  /**
   * @generated from field: optional string soundname = 1;
   */
  soundname?: string;

  /**
   * @generated from field: optional bool stop = 2;
   */
  stop?: boolean;

  constructor(data?: PartialMessage<CUserMessageSendAudio>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageSendAudio";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "soundname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "stop", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageSendAudio {
    return new CUserMessageSendAudio().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageSendAudio {
    return new CUserMessageSendAudio().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageSendAudio {
    return new CUserMessageSendAudio().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageSendAudio | PlainMessage<CUserMessageSendAudio> | undefined, b: CUserMessageSendAudio | PlainMessage<CUserMessageSendAudio> | undefined): boolean {
    return proto2.util.equals(CUserMessageSendAudio, a, b);
  }
}

/**
 * @generated from message CUserMessageAudioParameter
 */
export class CUserMessageAudioParameter extends Message<CUserMessageAudioParameter> {
  /**
   * @generated from field: optional uint32 parameter_type = 1;
   */
  parameterType?: number;

  /**
   * @generated from field: optional uint32 name_hash_code = 2;
   */
  nameHashCode?: number;

  /**
   * @generated from field: optional float value = 3;
   */
  value?: number;

  /**
   * @generated from field: optional uint32 int_value = 4;
   */
  intValue?: number;

  constructor(data?: PartialMessage<CUserMessageAudioParameter>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageAudioParameter";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "parameter_type", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "name_hash_code", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "int_value", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageAudioParameter {
    return new CUserMessageAudioParameter().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageAudioParameter {
    return new CUserMessageAudioParameter().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageAudioParameter {
    return new CUserMessageAudioParameter().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageAudioParameter | PlainMessage<CUserMessageAudioParameter> | undefined, b: CUserMessageAudioParameter | PlainMessage<CUserMessageAudioParameter> | undefined): boolean {
    return proto2.util.equals(CUserMessageAudioParameter, a, b);
  }
}

/**
 * @generated from message CUserMessageVoiceMask
 */
export class CUserMessageVoiceMask extends Message<CUserMessageVoiceMask> {
  /**
   * @generated from field: repeated uint32 gamerules_masks = 1;
   */
  gamerulesMasks: number[] = [];

  /**
   * @generated from field: repeated uint32 ban_masks = 2;
   */
  banMasks: number[] = [];

  /**
   * @generated from field: optional bool mod_enable = 3;
   */
  modEnable?: boolean;

  constructor(data?: PartialMessage<CUserMessageVoiceMask>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageVoiceMask";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "gamerules_masks", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 2, name: "ban_masks", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 3, name: "mod_enable", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageVoiceMask {
    return new CUserMessageVoiceMask().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageVoiceMask {
    return new CUserMessageVoiceMask().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageVoiceMask {
    return new CUserMessageVoiceMask().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageVoiceMask | PlainMessage<CUserMessageVoiceMask> | undefined, b: CUserMessageVoiceMask | PlainMessage<CUserMessageVoiceMask> | undefined): boolean {
    return proto2.util.equals(CUserMessageVoiceMask, a, b);
  }
}

/**
 * @generated from message CUserMessageRequestState
 */
export class CUserMessageRequestState extends Message<CUserMessageRequestState> {
  constructor(data?: PartialMessage<CUserMessageRequestState>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageRequestState";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageRequestState {
    return new CUserMessageRequestState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageRequestState {
    return new CUserMessageRequestState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageRequestState {
    return new CUserMessageRequestState().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageRequestState | PlainMessage<CUserMessageRequestState> | undefined, b: CUserMessageRequestState | PlainMessage<CUserMessageRequestState> | undefined): boolean {
    return proto2.util.equals(CUserMessageRequestState, a, b);
  }
}

/**
 * @generated from message CUserMessageRumble
 */
export class CUserMessageRumble extends Message<CUserMessageRumble> {
  /**
   * @generated from field: optional int32 index = 1;
   */
  index?: number;

  /**
   * @generated from field: optional int32 data = 2;
   */
  data?: number;

  /**
   * @generated from field: optional int32 flags = 3;
   */
  flags?: number;

  constructor(data?: PartialMessage<CUserMessageRumble>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageRumble";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "data", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "flags", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageRumble {
    return new CUserMessageRumble().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageRumble {
    return new CUserMessageRumble().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageRumble {
    return new CUserMessageRumble().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageRumble | PlainMessage<CUserMessageRumble> | undefined, b: CUserMessageRumble | PlainMessage<CUserMessageRumble> | undefined): boolean {
    return proto2.util.equals(CUserMessageRumble, a, b);
  }
}

/**
 * @generated from message CUserMessageSayTextChannel
 */
export class CUserMessageSayTextChannel extends Message<CUserMessageSayTextChannel> {
  /**
   * @generated from field: optional int32 player = 1;
   */
  player?: number;

  /**
   * @generated from field: optional int32 channel = 2;
   */
  channel?: number;

  /**
   * @generated from field: optional string text = 3;
   */
  text?: string;

  constructor(data?: PartialMessage<CUserMessageSayTextChannel>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageSayTextChannel";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "player", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "channel", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageSayTextChannel {
    return new CUserMessageSayTextChannel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageSayTextChannel {
    return new CUserMessageSayTextChannel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageSayTextChannel {
    return new CUserMessageSayTextChannel().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageSayTextChannel | PlainMessage<CUserMessageSayTextChannel> | undefined, b: CUserMessageSayTextChannel | PlainMessage<CUserMessageSayTextChannel> | undefined): boolean {
    return proto2.util.equals(CUserMessageSayTextChannel, a, b);
  }
}

/**
 * @generated from message CUserMessageColoredText
 */
export class CUserMessageColoredText extends Message<CUserMessageColoredText> {
  /**
   * @generated from field: optional uint32 color = 1;
   */
  color?: number;

  /**
   * @generated from field: optional string text = 2;
   */
  text?: string;

  /**
   * @generated from field: optional bool reset = 3;
   */
  reset?: boolean;

  /**
   * @generated from field: optional int32 context_player_slot = 4 [default = -1];
   */
  contextPlayerSlot?: number;

  /**
   * @generated from field: optional int32 context_value = 5;
   */
  contextValue?: number;

  /**
   * @generated from field: optional int32 context_team_id = 6;
   */
  contextTeamId?: number;

  constructor(data?: PartialMessage<CUserMessageColoredText>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageColoredText";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "color", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "reset", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "context_player_slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 5, name: "context_value", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "context_team_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageColoredText {
    return new CUserMessageColoredText().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageColoredText {
    return new CUserMessageColoredText().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageColoredText {
    return new CUserMessageColoredText().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageColoredText | PlainMessage<CUserMessageColoredText> | undefined, b: CUserMessageColoredText | PlainMessage<CUserMessageColoredText> | undefined): boolean {
    return proto2.util.equals(CUserMessageColoredText, a, b);
  }
}

/**
 * @generated from message CUserMessageItemPickup
 */
export class CUserMessageItemPickup extends Message<CUserMessageItemPickup> {
  /**
   * @generated from field: optional string itemname = 1;
   */
  itemname?: string;

  constructor(data?: PartialMessage<CUserMessageItemPickup>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageItemPickup";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "itemname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageItemPickup {
    return new CUserMessageItemPickup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageItemPickup {
    return new CUserMessageItemPickup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageItemPickup {
    return new CUserMessageItemPickup().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageItemPickup | PlainMessage<CUserMessageItemPickup> | undefined, b: CUserMessageItemPickup | PlainMessage<CUserMessageItemPickup> | undefined): boolean {
    return proto2.util.equals(CUserMessageItemPickup, a, b);
  }
}

/**
 * @generated from message CUserMessageAmmoDenied
 */
export class CUserMessageAmmoDenied extends Message<CUserMessageAmmoDenied> {
  /**
   * @generated from field: optional uint32 ammo_id = 1;
   */
  ammoId?: number;

  constructor(data?: PartialMessage<CUserMessageAmmoDenied>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageAmmoDenied";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "ammo_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageAmmoDenied {
    return new CUserMessageAmmoDenied().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageAmmoDenied {
    return new CUserMessageAmmoDenied().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageAmmoDenied {
    return new CUserMessageAmmoDenied().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageAmmoDenied | PlainMessage<CUserMessageAmmoDenied> | undefined, b: CUserMessageAmmoDenied | PlainMessage<CUserMessageAmmoDenied> | undefined): boolean {
    return proto2.util.equals(CUserMessageAmmoDenied, a, b);
  }
}

/**
 * @generated from message CUserMessageShowMenu
 */
export class CUserMessageShowMenu extends Message<CUserMessageShowMenu> {
  /**
   * @generated from field: optional uint32 validslots = 1;
   */
  validslots?: number;

  /**
   * @generated from field: optional uint32 displaytime = 2;
   */
  displaytime?: number;

  /**
   * @generated from field: optional bool needmore = 3;
   */
  needmore?: boolean;

  /**
   * @generated from field: optional string menustring = 4;
   */
  menustring?: string;

  constructor(data?: PartialMessage<CUserMessageShowMenu>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageShowMenu";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "validslots", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "displaytime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "needmore", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "menustring", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageShowMenu {
    return new CUserMessageShowMenu().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageShowMenu {
    return new CUserMessageShowMenu().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageShowMenu {
    return new CUserMessageShowMenu().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageShowMenu | PlainMessage<CUserMessageShowMenu> | undefined, b: CUserMessageShowMenu | PlainMessage<CUserMessageShowMenu> | undefined): boolean {
    return proto2.util.equals(CUserMessageShowMenu, a, b);
  }
}

/**
 * @generated from message CUserMessageCreditsMsg
 */
export class CUserMessageCreditsMsg extends Message<CUserMessageCreditsMsg> {
  /**
   * @generated from field: optional eRollType rolltype = 1 [default = ROLL_NONE];
   */
  rolltype?: eRollType;

  /**
   * @generated from field: optional float logo_length = 2;
   */
  logoLength?: number;

  constructor(data?: PartialMessage<CUserMessageCreditsMsg>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageCreditsMsg";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "rolltype", kind: "enum", T: proto2.getEnumType(eRollType), opt: true, default: eRollType.ROLL_NONE },
    { no: 2, name: "logo_length", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageCreditsMsg {
    return new CUserMessageCreditsMsg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageCreditsMsg {
    return new CUserMessageCreditsMsg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageCreditsMsg {
    return new CUserMessageCreditsMsg().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageCreditsMsg | PlainMessage<CUserMessageCreditsMsg> | undefined, b: CUserMessageCreditsMsg | PlainMessage<CUserMessageCreditsMsg> | undefined): boolean {
    return proto2.util.equals(CUserMessageCreditsMsg, a, b);
  }
}

/**
 * @generated from message CEntityMessagePlayJingle
 */
export class CEntityMessagePlayJingle extends Message<CEntityMessagePlayJingle> {
  /**
   * @generated from field: optional CEntityMsg entity_msg = 1;
   */
  entityMsg?: CEntityMsg;

  constructor(data?: PartialMessage<CEntityMessagePlayJingle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CEntityMessagePlayJingle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "entity_msg", kind: "message", T: CEntityMsg, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CEntityMessagePlayJingle {
    return new CEntityMessagePlayJingle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CEntityMessagePlayJingle {
    return new CEntityMessagePlayJingle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CEntityMessagePlayJingle {
    return new CEntityMessagePlayJingle().fromJsonString(jsonString, options);
  }

  static equals(a: CEntityMessagePlayJingle | PlainMessage<CEntityMessagePlayJingle> | undefined, b: CEntityMessagePlayJingle | PlainMessage<CEntityMessagePlayJingle> | undefined): boolean {
    return proto2.util.equals(CEntityMessagePlayJingle, a, b);
  }
}

/**
 * @generated from message CEntityMessageScreenOverlay
 */
export class CEntityMessageScreenOverlay extends Message<CEntityMessageScreenOverlay> {
  /**
   * @generated from field: optional bool start_effect = 1;
   */
  startEffect?: boolean;

  /**
   * @generated from field: optional CEntityMsg entity_msg = 2;
   */
  entityMsg?: CEntityMsg;

  constructor(data?: PartialMessage<CEntityMessageScreenOverlay>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CEntityMessageScreenOverlay";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "start_effect", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "entity_msg", kind: "message", T: CEntityMsg, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CEntityMessageScreenOverlay {
    return new CEntityMessageScreenOverlay().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CEntityMessageScreenOverlay {
    return new CEntityMessageScreenOverlay().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CEntityMessageScreenOverlay {
    return new CEntityMessageScreenOverlay().fromJsonString(jsonString, options);
  }

  static equals(a: CEntityMessageScreenOverlay | PlainMessage<CEntityMessageScreenOverlay> | undefined, b: CEntityMessageScreenOverlay | PlainMessage<CEntityMessageScreenOverlay> | undefined): boolean {
    return proto2.util.equals(CEntityMessageScreenOverlay, a, b);
  }
}

/**
 * @generated from message CEntityMessageRemoveAllDecals
 */
export class CEntityMessageRemoveAllDecals extends Message<CEntityMessageRemoveAllDecals> {
  /**
   * @generated from field: optional bool remove_decals = 1;
   */
  removeDecals?: boolean;

  /**
   * @generated from field: optional CEntityMsg entity_msg = 2;
   */
  entityMsg?: CEntityMsg;

  constructor(data?: PartialMessage<CEntityMessageRemoveAllDecals>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CEntityMessageRemoveAllDecals";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "remove_decals", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "entity_msg", kind: "message", T: CEntityMsg, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CEntityMessageRemoveAllDecals {
    return new CEntityMessageRemoveAllDecals().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CEntityMessageRemoveAllDecals {
    return new CEntityMessageRemoveAllDecals().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CEntityMessageRemoveAllDecals {
    return new CEntityMessageRemoveAllDecals().fromJsonString(jsonString, options);
  }

  static equals(a: CEntityMessageRemoveAllDecals | PlainMessage<CEntityMessageRemoveAllDecals> | undefined, b: CEntityMessageRemoveAllDecals | PlainMessage<CEntityMessageRemoveAllDecals> | undefined): boolean {
    return proto2.util.equals(CEntityMessageRemoveAllDecals, a, b);
  }
}

/**
 * @generated from message CEntityMessagePropagateForce
 */
export class CEntityMessagePropagateForce extends Message<CEntityMessagePropagateForce> {
  /**
   * @generated from field: optional CMsgVector impulse = 1;
   */
  impulse?: CMsgVector;

  /**
   * @generated from field: optional CEntityMsg entity_msg = 2;
   */
  entityMsg?: CEntityMsg;

  constructor(data?: PartialMessage<CEntityMessagePropagateForce>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CEntityMessagePropagateForce";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "impulse", kind: "message", T: CMsgVector, opt: true },
    { no: 2, name: "entity_msg", kind: "message", T: CEntityMsg, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CEntityMessagePropagateForce {
    return new CEntityMessagePropagateForce().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CEntityMessagePropagateForce {
    return new CEntityMessagePropagateForce().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CEntityMessagePropagateForce {
    return new CEntityMessagePropagateForce().fromJsonString(jsonString, options);
  }

  static equals(a: CEntityMessagePropagateForce | PlainMessage<CEntityMessagePropagateForce> | undefined, b: CEntityMessagePropagateForce | PlainMessage<CEntityMessagePropagateForce> | undefined): boolean {
    return proto2.util.equals(CEntityMessagePropagateForce, a, b);
  }
}

/**
 * @generated from message CEntityMessageDoSpark
 */
export class CEntityMessageDoSpark extends Message<CEntityMessageDoSpark> {
  /**
   * @generated from field: optional CMsgVector origin = 1;
   */
  origin?: CMsgVector;

  /**
   * @generated from field: optional int32 entityindex = 2 [default = -1];
   */
  entityindex?: number;

  /**
   * @generated from field: optional float radius = 3;
   */
  radius?: number;

  /**
   * @generated from field: optional fixed32 color = 4;
   */
  color?: number;

  /**
   * @generated from field: optional uint32 beams = 5;
   */
  beams?: number;

  /**
   * @generated from field: optional float thick = 6;
   */
  thick?: number;

  /**
   * @generated from field: optional float duration = 7;
   */
  duration?: number;

  /**
   * @generated from field: optional CEntityMsg entity_msg = 8;
   */
  entityMsg?: CEntityMsg;

  constructor(data?: PartialMessage<CEntityMessageDoSpark>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CEntityMessageDoSpark";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "origin", kind: "message", T: CMsgVector, opt: true },
    { no: 2, name: "entityindex", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 3, name: "radius", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "color", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 5, name: "beams", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "thick", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 7, name: "duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 8, name: "entity_msg", kind: "message", T: CEntityMsg, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CEntityMessageDoSpark {
    return new CEntityMessageDoSpark().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CEntityMessageDoSpark {
    return new CEntityMessageDoSpark().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CEntityMessageDoSpark {
    return new CEntityMessageDoSpark().fromJsonString(jsonString, options);
  }

  static equals(a: CEntityMessageDoSpark | PlainMessage<CEntityMessageDoSpark> | undefined, b: CEntityMessageDoSpark | PlainMessage<CEntityMessageDoSpark> | undefined): boolean {
    return proto2.util.equals(CEntityMessageDoSpark, a, b);
  }
}

/**
 * @generated from message CEntityMessageFixAngle
 */
export class CEntityMessageFixAngle extends Message<CEntityMessageFixAngle> {
  /**
   * @generated from field: optional bool relative = 1;
   */
  relative?: boolean;

  /**
   * @generated from field: optional CMsgQAngle angle = 2;
   */
  angle?: CMsgQAngle;

  /**
   * @generated from field: optional CEntityMsg entity_msg = 3;
   */
  entityMsg?: CEntityMsg;

  constructor(data?: PartialMessage<CEntityMessageFixAngle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CEntityMessageFixAngle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "relative", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "angle", kind: "message", T: CMsgQAngle, opt: true },
    { no: 3, name: "entity_msg", kind: "message", T: CEntityMsg, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CEntityMessageFixAngle {
    return new CEntityMessageFixAngle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CEntityMessageFixAngle {
    return new CEntityMessageFixAngle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CEntityMessageFixAngle {
    return new CEntityMessageFixAngle().fromJsonString(jsonString, options);
  }

  static equals(a: CEntityMessageFixAngle | PlainMessage<CEntityMessageFixAngle> | undefined, b: CEntityMessageFixAngle | PlainMessage<CEntityMessageFixAngle> | undefined): boolean {
    return proto2.util.equals(CEntityMessageFixAngle, a, b);
  }
}

/**
 * @generated from message CUserMessageCameraTransition
 */
export class CUserMessageCameraTransition extends Message<CUserMessageCameraTransition> {
  /**
   * @generated from field: optional uint32 camera_type = 1;
   */
  cameraType?: number;

  /**
   * @generated from field: optional float duration = 2;
   */
  duration?: number;

  /**
   * @generated from field: optional CUserMessageCameraTransition.Transition_DataDriven params_data_driven = 3;
   */
  paramsDataDriven?: CUserMessageCameraTransition_Transition_DataDriven;

  constructor(data?: PartialMessage<CUserMessageCameraTransition>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageCameraTransition";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "camera_type", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "params_data_driven", kind: "message", T: CUserMessageCameraTransition_Transition_DataDriven, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageCameraTransition {
    return new CUserMessageCameraTransition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageCameraTransition {
    return new CUserMessageCameraTransition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageCameraTransition {
    return new CUserMessageCameraTransition().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageCameraTransition | PlainMessage<CUserMessageCameraTransition> | undefined, b: CUserMessageCameraTransition | PlainMessage<CUserMessageCameraTransition> | undefined): boolean {
    return proto2.util.equals(CUserMessageCameraTransition, a, b);
  }
}

/**
 * @generated from message CUserMessageCameraTransition.Transition_DataDriven
 */
export class CUserMessageCameraTransition_Transition_DataDriven extends Message<CUserMessageCameraTransition_Transition_DataDriven> {
  /**
   * @generated from field: optional string filename = 1;
   */
  filename?: string;

  /**
   * @generated from field: optional int32 attach_ent_index = 2 [default = -1];
   */
  attachEntIndex?: number;

  /**
   * @generated from field: optional float duration = 3;
   */
  duration?: number;

  constructor(data?: PartialMessage<CUserMessageCameraTransition_Transition_DataDriven>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageCameraTransition.Transition_DataDriven";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "filename", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "attach_ent_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 3, name: "duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageCameraTransition_Transition_DataDriven {
    return new CUserMessageCameraTransition_Transition_DataDriven().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageCameraTransition_Transition_DataDriven {
    return new CUserMessageCameraTransition_Transition_DataDriven().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageCameraTransition_Transition_DataDriven {
    return new CUserMessageCameraTransition_Transition_DataDriven().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageCameraTransition_Transition_DataDriven | PlainMessage<CUserMessageCameraTransition_Transition_DataDriven> | undefined, b: CUserMessageCameraTransition_Transition_DataDriven | PlainMessage<CUserMessageCameraTransition_Transition_DataDriven> | undefined): boolean {
    return proto2.util.equals(CUserMessageCameraTransition_Transition_DataDriven, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager
 */
export class CUserMsg_ParticleManager extends Message<CUserMsg_ParticleManager> {
  /**
   * @generated from field: required PARTICLE_MESSAGE type = 1 [default = GAME_PARTICLE_MANAGER_EVENT_CREATE];
   */
  type?: PARTICLE_MESSAGE;

  /**
   * @generated from field: required uint32 index = 2;
   */
  index?: number;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
   */
  releaseParticleIndex?: CUserMsg_ParticleManager_ReleaseParticleIndex;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.CreateParticle create_particle = 4;
   */
  createParticle?: CUserMsg_ParticleManager_CreateParticle;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
   */
  destroyParticle?: CUserMsg_ParticleManager_DestroyParticle;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
   */
  destroyParticleInvolving?: CUserMsg_ParticleManager_DestroyParticleInvolving;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.UpdateParticle_OBSOLETE update_particle = 7;
   */
  updateParticle?: CUserMsg_ParticleManager_UpdateParticle_OBSOLETE;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.UpdateParticleFwd_OBSOLETE update_particle_fwd = 8;
   */
  updateParticleFwd?: CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.UpdateParticleOrient_OBSOLETE update_particle_orient = 9;
   */
  updateParticleOrient?: CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
   */
  updateParticleFallback?: CUserMsg_ParticleManager_UpdateParticleFallback;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
   */
  updateParticleOffset?: CUserMsg_ParticleManager_UpdateParticleOffset;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
   */
  updateParticleEnt?: CUserMsg_ParticleManager_UpdateParticleEnt;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
   */
  updateParticleShouldDraw?: CUserMsg_ParticleManager_UpdateParticleShouldDraw;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
   */
  updateParticleSetFrozen?: CUserMsg_ParticleManager_UpdateParticleSetFrozen;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;
   */
  changeControlPointAttachment?: CUserMsg_ParticleManager_ChangeControlPointAttachment;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;
   */
  updateEntityPosition?: CUserMsg_ParticleManager_UpdateEntityPosition;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.SetParticleFoWProperties set_particle_fow_properties = 18;
   */
  setParticleFowProperties?: CUserMsg_ParticleManager_SetParticleFoWProperties;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.SetParticleText set_particle_text = 19;
   */
  setParticleText?: CUserMsg_ParticleManager_SetParticleText;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.SetParticleShouldCheckFoW set_particle_should_check_fow = 20;
   */
  setParticleShouldCheckFow?: CUserMsg_ParticleManager_SetParticleShouldCheckFoW;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.SetControlPointModel set_control_point_model = 21;
   */
  setControlPointModel?: CUserMsg_ParticleManager_SetControlPointModel;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.SetControlPointSnapshot set_control_point_snapshot = 22;
   */
  setControlPointSnapshot?: CUserMsg_ParticleManager_SetControlPointSnapshot;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.SetTextureAttribute set_texture_attribute = 23;
   */
  setTextureAttribute?: CUserMsg_ParticleManager_SetTextureAttribute;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.SetSceneObjectGenericFlag set_scene_object_generic_flag = 24;
   */
  setSceneObjectGenericFlag?: CUserMsg_ParticleManager_SetSceneObjectGenericFlag;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.SetSceneObjectTintAndDesat set_scene_object_tint_and_desat = 25;
   */
  setSceneObjectTintAndDesat?: CUserMsg_ParticleManager_SetSceneObjectTintAndDesat;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.DestroyParticleNamed destroy_particle_named = 26;
   */
  destroyParticleNamed?: CUserMsg_ParticleManager_DestroyParticleNamed;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.ParticleSkipToTime particle_skip_to_time = 27;
   */
  particleSkipToTime?: CUserMsg_ParticleManager_ParticleSkipToTime;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.ParticleCanFreeze particle_can_freeze = 28;
   */
  particleCanFreeze?: CUserMsg_ParticleManager_ParticleCanFreeze;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.SetParticleNamedValueContext set_named_value_context = 29;
   */
  setNamedValueContext?: CUserMsg_ParticleManager_SetParticleNamedValueContext;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.UpdateParticleTransform update_particle_transform = 30;
   */
  updateParticleTransform?: CUserMsg_ParticleManager_UpdateParticleTransform;

  /**
   * @generated from field: optional CUserMsg_ParticleManager.ParticleFreezeTransitionOverride particle_freeze_transition_override = 31;
   */
  particleFreezeTransitionOverride?: CUserMsg_ParticleManager_ParticleFreezeTransitionOverride;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto2.getEnumType(PARTICLE_MESSAGE), default: PARTICLE_MESSAGE.GAME_PARTICLE_MANAGER_EVENT_CREATE },
    { no: 2, name: "index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "release_particle_index", kind: "message", T: CUserMsg_ParticleManager_ReleaseParticleIndex, opt: true },
    { no: 4, name: "create_particle", kind: "message", T: CUserMsg_ParticleManager_CreateParticle, opt: true },
    { no: 5, name: "destroy_particle", kind: "message", T: CUserMsg_ParticleManager_DestroyParticle, opt: true },
    { no: 6, name: "destroy_particle_involving", kind: "message", T: CUserMsg_ParticleManager_DestroyParticleInvolving, opt: true },
    { no: 7, name: "update_particle", kind: "message", T: CUserMsg_ParticleManager_UpdateParticle_OBSOLETE, opt: true },
    { no: 8, name: "update_particle_fwd", kind: "message", T: CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE, opt: true },
    { no: 9, name: "update_particle_orient", kind: "message", T: CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE, opt: true },
    { no: 10, name: "update_particle_fallback", kind: "message", T: CUserMsg_ParticleManager_UpdateParticleFallback, opt: true },
    { no: 11, name: "update_particle_offset", kind: "message", T: CUserMsg_ParticleManager_UpdateParticleOffset, opt: true },
    { no: 12, name: "update_particle_ent", kind: "message", T: CUserMsg_ParticleManager_UpdateParticleEnt, opt: true },
    { no: 14, name: "update_particle_should_draw", kind: "message", T: CUserMsg_ParticleManager_UpdateParticleShouldDraw, opt: true },
    { no: 15, name: "update_particle_set_frozen", kind: "message", T: CUserMsg_ParticleManager_UpdateParticleSetFrozen, opt: true },
    { no: 16, name: "change_control_point_attachment", kind: "message", T: CUserMsg_ParticleManager_ChangeControlPointAttachment, opt: true },
    { no: 17, name: "update_entity_position", kind: "message", T: CUserMsg_ParticleManager_UpdateEntityPosition, opt: true },
    { no: 18, name: "set_particle_fow_properties", kind: "message", T: CUserMsg_ParticleManager_SetParticleFoWProperties, opt: true },
    { no: 19, name: "set_particle_text", kind: "message", T: CUserMsg_ParticleManager_SetParticleText, opt: true },
    { no: 20, name: "set_particle_should_check_fow", kind: "message", T: CUserMsg_ParticleManager_SetParticleShouldCheckFoW, opt: true },
    { no: 21, name: "set_control_point_model", kind: "message", T: CUserMsg_ParticleManager_SetControlPointModel, opt: true },
    { no: 22, name: "set_control_point_snapshot", kind: "message", T: CUserMsg_ParticleManager_SetControlPointSnapshot, opt: true },
    { no: 23, name: "set_texture_attribute", kind: "message", T: CUserMsg_ParticleManager_SetTextureAttribute, opt: true },
    { no: 24, name: "set_scene_object_generic_flag", kind: "message", T: CUserMsg_ParticleManager_SetSceneObjectGenericFlag, opt: true },
    { no: 25, name: "set_scene_object_tint_and_desat", kind: "message", T: CUserMsg_ParticleManager_SetSceneObjectTintAndDesat, opt: true },
    { no: 26, name: "destroy_particle_named", kind: "message", T: CUserMsg_ParticleManager_DestroyParticleNamed, opt: true },
    { no: 27, name: "particle_skip_to_time", kind: "message", T: CUserMsg_ParticleManager_ParticleSkipToTime, opt: true },
    { no: 28, name: "particle_can_freeze", kind: "message", T: CUserMsg_ParticleManager_ParticleCanFreeze, opt: true },
    { no: 29, name: "set_named_value_context", kind: "message", T: CUserMsg_ParticleManager_SetParticleNamedValueContext, opt: true },
    { no: 30, name: "update_particle_transform", kind: "message", T: CUserMsg_ParticleManager_UpdateParticleTransform, opt: true },
    { no: 31, name: "particle_freeze_transition_override", kind: "message", T: CUserMsg_ParticleManager_ParticleFreezeTransitionOverride, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager {
    return new CUserMsg_ParticleManager().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager {
    return new CUserMsg_ParticleManager().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager {
    return new CUserMsg_ParticleManager().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager | PlainMessage<CUserMsg_ParticleManager> | undefined, b: CUserMsg_ParticleManager | PlainMessage<CUserMsg_ParticleManager> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.ReleaseParticleIndex
 */
export class CUserMsg_ParticleManager_ReleaseParticleIndex extends Message<CUserMsg_ParticleManager_ReleaseParticleIndex> {
  constructor(data?: PartialMessage<CUserMsg_ParticleManager_ReleaseParticleIndex>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.ReleaseParticleIndex";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_ReleaseParticleIndex {
    return new CUserMsg_ParticleManager_ReleaseParticleIndex().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_ReleaseParticleIndex {
    return new CUserMsg_ParticleManager_ReleaseParticleIndex().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_ReleaseParticleIndex {
    return new CUserMsg_ParticleManager_ReleaseParticleIndex().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_ReleaseParticleIndex | PlainMessage<CUserMsg_ParticleManager_ReleaseParticleIndex> | undefined, b: CUserMsg_ParticleManager_ReleaseParticleIndex | PlainMessage<CUserMsg_ParticleManager_ReleaseParticleIndex> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_ReleaseParticleIndex, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.CreateParticle
 */
export class CUserMsg_ParticleManager_CreateParticle extends Message<CUserMsg_ParticleManager_CreateParticle> {
  /**
   * @generated from field: optional fixed64 particle_name_index = 1;
   */
  particleNameIndex?: bigint;

  /**
   * @generated from field: optional int32 attach_type = 2;
   */
  attachType?: number;

  /**
   * @generated from field: optional uint32 entity_handle = 3 [default = 16777215];
   */
  entityHandle?: number;

  /**
   * @generated from field: optional uint32 entity_handle_for_modifiers = 4 [default = 16777215];
   */
  entityHandleForModifiers?: number;

  /**
   * @generated from field: optional bool apply_voice_ban_rules = 5;
   */
  applyVoiceBanRules?: boolean;

  /**
   * @generated from field: optional int32 team_behavior = 6;
   */
  teamBehavior?: number;

  /**
   * @generated from field: optional string control_point_configuration = 7;
   */
  controlPointConfiguration?: string;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_CreateParticle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.CreateParticle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "particle_name_index", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "attach_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "entity_handle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 16777215 },
    { no: 4, name: "entity_handle_for_modifiers", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 16777215 },
    { no: 5, name: "apply_voice_ban_rules", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "team_behavior", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "control_point_configuration", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_CreateParticle {
    return new CUserMsg_ParticleManager_CreateParticle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_CreateParticle {
    return new CUserMsg_ParticleManager_CreateParticle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_CreateParticle {
    return new CUserMsg_ParticleManager_CreateParticle().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_CreateParticle | PlainMessage<CUserMsg_ParticleManager_CreateParticle> | undefined, b: CUserMsg_ParticleManager_CreateParticle | PlainMessage<CUserMsg_ParticleManager_CreateParticle> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_CreateParticle, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.DestroyParticle
 */
export class CUserMsg_ParticleManager_DestroyParticle extends Message<CUserMsg_ParticleManager_DestroyParticle> {
  /**
   * @generated from field: optional bool destroy_immediately = 1;
   */
  destroyImmediately?: boolean;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_DestroyParticle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.DestroyParticle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "destroy_immediately", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_DestroyParticle {
    return new CUserMsg_ParticleManager_DestroyParticle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_DestroyParticle {
    return new CUserMsg_ParticleManager_DestroyParticle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_DestroyParticle {
    return new CUserMsg_ParticleManager_DestroyParticle().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_DestroyParticle | PlainMessage<CUserMsg_ParticleManager_DestroyParticle> | undefined, b: CUserMsg_ParticleManager_DestroyParticle | PlainMessage<CUserMsg_ParticleManager_DestroyParticle> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_DestroyParticle, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.DestroyParticleInvolving
 */
export class CUserMsg_ParticleManager_DestroyParticleInvolving extends Message<CUserMsg_ParticleManager_DestroyParticleInvolving> {
  /**
   * @generated from field: optional bool destroy_immediately = 1;
   */
  destroyImmediately?: boolean;

  /**
   * @generated from field: optional uint32 entity_handle = 3 [default = 16777215];
   */
  entityHandle?: number;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_DestroyParticleInvolving>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.DestroyParticleInvolving";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "destroy_immediately", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "entity_handle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 16777215 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_DestroyParticleInvolving {
    return new CUserMsg_ParticleManager_DestroyParticleInvolving().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_DestroyParticleInvolving {
    return new CUserMsg_ParticleManager_DestroyParticleInvolving().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_DestroyParticleInvolving {
    return new CUserMsg_ParticleManager_DestroyParticleInvolving().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_DestroyParticleInvolving | PlainMessage<CUserMsg_ParticleManager_DestroyParticleInvolving> | undefined, b: CUserMsg_ParticleManager_DestroyParticleInvolving | PlainMessage<CUserMsg_ParticleManager_DestroyParticleInvolving> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_DestroyParticleInvolving, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.DestroyParticleNamed
 */
export class CUserMsg_ParticleManager_DestroyParticleNamed extends Message<CUserMsg_ParticleManager_DestroyParticleNamed> {
  /**
   * @generated from field: optional fixed64 particle_name_index = 1;
   */
  particleNameIndex?: bigint;

  /**
   * @generated from field: optional uint32 entity_handle = 2 [default = 16777215];
   */
  entityHandle?: number;

  /**
   * @generated from field: optional bool destroy_immediately = 3;
   */
  destroyImmediately?: boolean;

  /**
   * @generated from field: optional bool play_endcap = 4;
   */
  playEndcap?: boolean;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_DestroyParticleNamed>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.DestroyParticleNamed";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "particle_name_index", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "entity_handle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 16777215 },
    { no: 3, name: "destroy_immediately", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "play_endcap", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_DestroyParticleNamed {
    return new CUserMsg_ParticleManager_DestroyParticleNamed().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_DestroyParticleNamed {
    return new CUserMsg_ParticleManager_DestroyParticleNamed().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_DestroyParticleNamed {
    return new CUserMsg_ParticleManager_DestroyParticleNamed().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_DestroyParticleNamed | PlainMessage<CUserMsg_ParticleManager_DestroyParticleNamed> | undefined, b: CUserMsg_ParticleManager_DestroyParticleNamed | PlainMessage<CUserMsg_ParticleManager_DestroyParticleNamed> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_DestroyParticleNamed, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.UpdateParticle_OBSOLETE
 */
export class CUserMsg_ParticleManager_UpdateParticle_OBSOLETE extends Message<CUserMsg_ParticleManager_UpdateParticle_OBSOLETE> {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector position = 2;
   */
  position?: CMsgVector;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_UpdateParticle_OBSOLETE>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.UpdateParticle_OBSOLETE";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "control_point", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "position", kind: "message", T: CMsgVector, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_UpdateParticle_OBSOLETE {
    return new CUserMsg_ParticleManager_UpdateParticle_OBSOLETE().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticle_OBSOLETE {
    return new CUserMsg_ParticleManager_UpdateParticle_OBSOLETE().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticle_OBSOLETE {
    return new CUserMsg_ParticleManager_UpdateParticle_OBSOLETE().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_UpdateParticle_OBSOLETE | PlainMessage<CUserMsg_ParticleManager_UpdateParticle_OBSOLETE> | undefined, b: CUserMsg_ParticleManager_UpdateParticle_OBSOLETE | PlainMessage<CUserMsg_ParticleManager_UpdateParticle_OBSOLETE> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_UpdateParticle_OBSOLETE, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.UpdateParticleFwd_OBSOLETE
 */
export class CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE extends Message<CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE> {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector forward = 2;
   */
  forward?: CMsgVector;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.UpdateParticleFwd_OBSOLETE";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "control_point", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "forward", kind: "message", T: CMsgVector, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE {
    return new CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE {
    return new CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE {
    return new CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE | PlainMessage<CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE> | undefined, b: CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE | PlainMessage<CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_UpdateParticleFwd_OBSOLETE, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.UpdateParticleOrient_OBSOLETE
 */
export class CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE extends Message<CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE> {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector forward = 2;
   */
  forward?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector deprecated_right = 3;
   */
  deprecatedRight?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector up = 4;
   */
  up?: CMsgVector;

  /**
   * @generated from field: optional CMsgVector left = 5;
   */
  left?: CMsgVector;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.UpdateParticleOrient_OBSOLETE";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "control_point", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "forward", kind: "message", T: CMsgVector, opt: true },
    { no: 3, name: "deprecated_right", kind: "message", T: CMsgVector, opt: true },
    { no: 4, name: "up", kind: "message", T: CMsgVector, opt: true },
    { no: 5, name: "left", kind: "message", T: CMsgVector, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE {
    return new CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE {
    return new CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE {
    return new CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE | PlainMessage<CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE> | undefined, b: CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE | PlainMessage<CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_UpdateParticleOrient_OBSOLETE, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.UpdateParticleTransform
 */
export class CUserMsg_ParticleManager_UpdateParticleTransform extends Message<CUserMsg_ParticleManager_UpdateParticleTransform> {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector position = 2;
   */
  position?: CMsgVector;

  /**
   * @generated from field: optional CMsgQuaternion orientation = 3;
   */
  orientation?: CMsgQuaternion;

  /**
   * @generated from field: optional float interpolation_interval = 4;
   */
  interpolationInterval?: number;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_UpdateParticleTransform>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.UpdateParticleTransform";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "control_point", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "position", kind: "message", T: CMsgVector, opt: true },
    { no: 3, name: "orientation", kind: "message", T: CMsgQuaternion, opt: true },
    { no: 4, name: "interpolation_interval", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_UpdateParticleTransform {
    return new CUserMsg_ParticleManager_UpdateParticleTransform().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleTransform {
    return new CUserMsg_ParticleManager_UpdateParticleTransform().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleTransform {
    return new CUserMsg_ParticleManager_UpdateParticleTransform().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_UpdateParticleTransform | PlainMessage<CUserMsg_ParticleManager_UpdateParticleTransform> | undefined, b: CUserMsg_ParticleManager_UpdateParticleTransform | PlainMessage<CUserMsg_ParticleManager_UpdateParticleTransform> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_UpdateParticleTransform, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.UpdateParticleFallback
 */
export class CUserMsg_ParticleManager_UpdateParticleFallback extends Message<CUserMsg_ParticleManager_UpdateParticleFallback> {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector position = 2;
   */
  position?: CMsgVector;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_UpdateParticleFallback>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.UpdateParticleFallback";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "control_point", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "position", kind: "message", T: CMsgVector, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_UpdateParticleFallback {
    return new CUserMsg_ParticleManager_UpdateParticleFallback().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleFallback {
    return new CUserMsg_ParticleManager_UpdateParticleFallback().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleFallback {
    return new CUserMsg_ParticleManager_UpdateParticleFallback().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_UpdateParticleFallback | PlainMessage<CUserMsg_ParticleManager_UpdateParticleFallback> | undefined, b: CUserMsg_ParticleManager_UpdateParticleFallback | PlainMessage<CUserMsg_ParticleManager_UpdateParticleFallback> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_UpdateParticleFallback, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.UpdateParticleOffset
 */
export class CUserMsg_ParticleManager_UpdateParticleOffset extends Message<CUserMsg_ParticleManager_UpdateParticleOffset> {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional CMsgVector origin_offset = 2;
   */
  originOffset?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle angle_offset = 3;
   */
  angleOffset?: CMsgQAngle;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_UpdateParticleOffset>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.UpdateParticleOffset";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "control_point", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "origin_offset", kind: "message", T: CMsgVector, opt: true },
    { no: 3, name: "angle_offset", kind: "message", T: CMsgQAngle, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_UpdateParticleOffset {
    return new CUserMsg_ParticleManager_UpdateParticleOffset().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleOffset {
    return new CUserMsg_ParticleManager_UpdateParticleOffset().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleOffset {
    return new CUserMsg_ParticleManager_UpdateParticleOffset().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_UpdateParticleOffset | PlainMessage<CUserMsg_ParticleManager_UpdateParticleOffset> | undefined, b: CUserMsg_ParticleManager_UpdateParticleOffset | PlainMessage<CUserMsg_ParticleManager_UpdateParticleOffset> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_UpdateParticleOffset, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.UpdateParticleEnt
 */
export class CUserMsg_ParticleManager_UpdateParticleEnt extends Message<CUserMsg_ParticleManager_UpdateParticleEnt> {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional uint32 entity_handle = 2 [default = 16777215];
   */
  entityHandle?: number;

  /**
   * @generated from field: optional int32 attach_type = 3;
   */
  attachType?: number;

  /**
   * @generated from field: optional int32 attachment = 4;
   */
  attachment?: number;

  /**
   * @generated from field: optional CMsgVector fallback_position = 5;
   */
  fallbackPosition?: CMsgVector;

  /**
   * @generated from field: optional bool include_wearables = 6;
   */
  includeWearables?: boolean;

  /**
   * @generated from field: optional CMsgVector offset_position = 7;
   */
  offsetPosition?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle offset_angles = 8;
   */
  offsetAngles?: CMsgQAngle;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_UpdateParticleEnt>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.UpdateParticleEnt";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "control_point", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "entity_handle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 16777215 },
    { no: 3, name: "attach_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "attachment", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "fallback_position", kind: "message", T: CMsgVector, opt: true },
    { no: 6, name: "include_wearables", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "offset_position", kind: "message", T: CMsgVector, opt: true },
    { no: 8, name: "offset_angles", kind: "message", T: CMsgQAngle, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_UpdateParticleEnt {
    return new CUserMsg_ParticleManager_UpdateParticleEnt().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleEnt {
    return new CUserMsg_ParticleManager_UpdateParticleEnt().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleEnt {
    return new CUserMsg_ParticleManager_UpdateParticleEnt().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_UpdateParticleEnt | PlainMessage<CUserMsg_ParticleManager_UpdateParticleEnt> | undefined, b: CUserMsg_ParticleManager_UpdateParticleEnt | PlainMessage<CUserMsg_ParticleManager_UpdateParticleEnt> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_UpdateParticleEnt, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.UpdateParticleSetFrozen
 */
export class CUserMsg_ParticleManager_UpdateParticleSetFrozen extends Message<CUserMsg_ParticleManager_UpdateParticleSetFrozen> {
  /**
   * @generated from field: optional bool set_frozen = 1;
   */
  setFrozen?: boolean;

  /**
   * @generated from field: optional float transition_duration = 2;
   */
  transitionDuration?: number;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_UpdateParticleSetFrozen>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.UpdateParticleSetFrozen";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "set_frozen", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "transition_duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_UpdateParticleSetFrozen {
    return new CUserMsg_ParticleManager_UpdateParticleSetFrozen().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleSetFrozen {
    return new CUserMsg_ParticleManager_UpdateParticleSetFrozen().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleSetFrozen {
    return new CUserMsg_ParticleManager_UpdateParticleSetFrozen().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_UpdateParticleSetFrozen | PlainMessage<CUserMsg_ParticleManager_UpdateParticleSetFrozen> | undefined, b: CUserMsg_ParticleManager_UpdateParticleSetFrozen | PlainMessage<CUserMsg_ParticleManager_UpdateParticleSetFrozen> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_UpdateParticleSetFrozen, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.UpdateParticleShouldDraw
 */
export class CUserMsg_ParticleManager_UpdateParticleShouldDraw extends Message<CUserMsg_ParticleManager_UpdateParticleShouldDraw> {
  /**
   * @generated from field: optional bool should_draw = 1;
   */
  shouldDraw?: boolean;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_UpdateParticleShouldDraw>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.UpdateParticleShouldDraw";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "should_draw", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_UpdateParticleShouldDraw {
    return new CUserMsg_ParticleManager_UpdateParticleShouldDraw().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleShouldDraw {
    return new CUserMsg_ParticleManager_UpdateParticleShouldDraw().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateParticleShouldDraw {
    return new CUserMsg_ParticleManager_UpdateParticleShouldDraw().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_UpdateParticleShouldDraw | PlainMessage<CUserMsg_ParticleManager_UpdateParticleShouldDraw> | undefined, b: CUserMsg_ParticleManager_UpdateParticleShouldDraw | PlainMessage<CUserMsg_ParticleManager_UpdateParticleShouldDraw> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_UpdateParticleShouldDraw, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.ChangeControlPointAttachment
 */
export class CUserMsg_ParticleManager_ChangeControlPointAttachment extends Message<CUserMsg_ParticleManager_ChangeControlPointAttachment> {
  /**
   * @generated from field: optional int32 attachment_old = 1;
   */
  attachmentOld?: number;

  /**
   * @generated from field: optional int32 attachment_new = 2;
   */
  attachmentNew?: number;

  /**
   * @generated from field: optional uint32 entity_handle = 3 [default = 16777215];
   */
  entityHandle?: number;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_ChangeControlPointAttachment>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.ChangeControlPointAttachment";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "attachment_old", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "attachment_new", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "entity_handle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 16777215 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_ChangeControlPointAttachment {
    return new CUserMsg_ParticleManager_ChangeControlPointAttachment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_ChangeControlPointAttachment {
    return new CUserMsg_ParticleManager_ChangeControlPointAttachment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_ChangeControlPointAttachment {
    return new CUserMsg_ParticleManager_ChangeControlPointAttachment().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_ChangeControlPointAttachment | PlainMessage<CUserMsg_ParticleManager_ChangeControlPointAttachment> | undefined, b: CUserMsg_ParticleManager_ChangeControlPointAttachment | PlainMessage<CUserMsg_ParticleManager_ChangeControlPointAttachment> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_ChangeControlPointAttachment, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.UpdateEntityPosition
 */
export class CUserMsg_ParticleManager_UpdateEntityPosition extends Message<CUserMsg_ParticleManager_UpdateEntityPosition> {
  /**
   * @generated from field: optional uint32 entity_handle = 1 [default = 16777215];
   */
  entityHandle?: number;

  /**
   * @generated from field: optional CMsgVector position = 2;
   */
  position?: CMsgVector;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_UpdateEntityPosition>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.UpdateEntityPosition";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "entity_handle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 16777215 },
    { no: 2, name: "position", kind: "message", T: CMsgVector, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_UpdateEntityPosition {
    return new CUserMsg_ParticleManager_UpdateEntityPosition().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateEntityPosition {
    return new CUserMsg_ParticleManager_UpdateEntityPosition().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_UpdateEntityPosition {
    return new CUserMsg_ParticleManager_UpdateEntityPosition().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_UpdateEntityPosition | PlainMessage<CUserMsg_ParticleManager_UpdateEntityPosition> | undefined, b: CUserMsg_ParticleManager_UpdateEntityPosition | PlainMessage<CUserMsg_ParticleManager_UpdateEntityPosition> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_UpdateEntityPosition, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetParticleFoWProperties
 */
export class CUserMsg_ParticleManager_SetParticleFoWProperties extends Message<CUserMsg_ParticleManager_SetParticleFoWProperties> {
  /**
   * @generated from field: optional int32 fow_control_point = 1;
   */
  fowControlPoint?: number;

  /**
   * @generated from field: optional int32 fow_control_point2 = 2;
   */
  fowControlPoint2?: number;

  /**
   * @generated from field: optional float fow_radius = 3;
   */
  fowRadius?: number;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetParticleFoWProperties>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetParticleFoWProperties";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "fow_control_point", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "fow_control_point2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "fow_radius", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetParticleFoWProperties {
    return new CUserMsg_ParticleManager_SetParticleFoWProperties().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleFoWProperties {
    return new CUserMsg_ParticleManager_SetParticleFoWProperties().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleFoWProperties {
    return new CUserMsg_ParticleManager_SetParticleFoWProperties().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetParticleFoWProperties | PlainMessage<CUserMsg_ParticleManager_SetParticleFoWProperties> | undefined, b: CUserMsg_ParticleManager_SetParticleFoWProperties | PlainMessage<CUserMsg_ParticleManager_SetParticleFoWProperties> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetParticleFoWProperties, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetParticleShouldCheckFoW
 */
export class CUserMsg_ParticleManager_SetParticleShouldCheckFoW extends Message<CUserMsg_ParticleManager_SetParticleShouldCheckFoW> {
  /**
   * @generated from field: optional bool check_fow = 1;
   */
  checkFow?: boolean;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetParticleShouldCheckFoW>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetParticleShouldCheckFoW";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "check_fow", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetParticleShouldCheckFoW {
    return new CUserMsg_ParticleManager_SetParticleShouldCheckFoW().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleShouldCheckFoW {
    return new CUserMsg_ParticleManager_SetParticleShouldCheckFoW().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleShouldCheckFoW {
    return new CUserMsg_ParticleManager_SetParticleShouldCheckFoW().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetParticleShouldCheckFoW | PlainMessage<CUserMsg_ParticleManager_SetParticleShouldCheckFoW> | undefined, b: CUserMsg_ParticleManager_SetParticleShouldCheckFoW | PlainMessage<CUserMsg_ParticleManager_SetParticleShouldCheckFoW> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetParticleShouldCheckFoW, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetControlPointModel
 */
export class CUserMsg_ParticleManager_SetControlPointModel extends Message<CUserMsg_ParticleManager_SetControlPointModel> {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional string model_name = 2;
   */
  modelName?: string;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetControlPointModel>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetControlPointModel";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "control_point", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "model_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetControlPointModel {
    return new CUserMsg_ParticleManager_SetControlPointModel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetControlPointModel {
    return new CUserMsg_ParticleManager_SetControlPointModel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetControlPointModel {
    return new CUserMsg_ParticleManager_SetControlPointModel().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetControlPointModel | PlainMessage<CUserMsg_ParticleManager_SetControlPointModel> | undefined, b: CUserMsg_ParticleManager_SetControlPointModel | PlainMessage<CUserMsg_ParticleManager_SetControlPointModel> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetControlPointModel, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetControlPointSnapshot
 */
export class CUserMsg_ParticleManager_SetControlPointSnapshot extends Message<CUserMsg_ParticleManager_SetControlPointSnapshot> {
  /**
   * @generated from field: optional int32 control_point = 1;
   */
  controlPoint?: number;

  /**
   * @generated from field: optional string snapshot_name = 2;
   */
  snapshotName?: string;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetControlPointSnapshot>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetControlPointSnapshot";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "control_point", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "snapshot_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetControlPointSnapshot {
    return new CUserMsg_ParticleManager_SetControlPointSnapshot().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetControlPointSnapshot {
    return new CUserMsg_ParticleManager_SetControlPointSnapshot().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetControlPointSnapshot {
    return new CUserMsg_ParticleManager_SetControlPointSnapshot().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetControlPointSnapshot | PlainMessage<CUserMsg_ParticleManager_SetControlPointSnapshot> | undefined, b: CUserMsg_ParticleManager_SetControlPointSnapshot | PlainMessage<CUserMsg_ParticleManager_SetControlPointSnapshot> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetControlPointSnapshot, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetParticleText
 */
export class CUserMsg_ParticleManager_SetParticleText extends Message<CUserMsg_ParticleManager_SetParticleText> {
  /**
   * @generated from field: optional string text = 1;
   */
  text?: string;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetParticleText>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetParticleText";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetParticleText {
    return new CUserMsg_ParticleManager_SetParticleText().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleText {
    return new CUserMsg_ParticleManager_SetParticleText().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleText {
    return new CUserMsg_ParticleManager_SetParticleText().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetParticleText | PlainMessage<CUserMsg_ParticleManager_SetParticleText> | undefined, b: CUserMsg_ParticleManager_SetParticleText | PlainMessage<CUserMsg_ParticleManager_SetParticleText> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetParticleText, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetTextureAttribute
 */
export class CUserMsg_ParticleManager_SetTextureAttribute extends Message<CUserMsg_ParticleManager_SetTextureAttribute> {
  /**
   * @generated from field: optional string attribute_name = 1;
   */
  attributeName?: string;

  /**
   * @generated from field: optional string texture_name = 2;
   */
  textureName?: string;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetTextureAttribute>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetTextureAttribute";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "attribute_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "texture_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetTextureAttribute {
    return new CUserMsg_ParticleManager_SetTextureAttribute().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetTextureAttribute {
    return new CUserMsg_ParticleManager_SetTextureAttribute().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetTextureAttribute {
    return new CUserMsg_ParticleManager_SetTextureAttribute().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetTextureAttribute | PlainMessage<CUserMsg_ParticleManager_SetTextureAttribute> | undefined, b: CUserMsg_ParticleManager_SetTextureAttribute | PlainMessage<CUserMsg_ParticleManager_SetTextureAttribute> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetTextureAttribute, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetSceneObjectGenericFlag
 */
export class CUserMsg_ParticleManager_SetSceneObjectGenericFlag extends Message<CUserMsg_ParticleManager_SetSceneObjectGenericFlag> {
  /**
   * @generated from field: optional bool flag_value = 1;
   */
  flagValue?: boolean;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetSceneObjectGenericFlag>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetSceneObjectGenericFlag";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "flag_value", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetSceneObjectGenericFlag {
    return new CUserMsg_ParticleManager_SetSceneObjectGenericFlag().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetSceneObjectGenericFlag {
    return new CUserMsg_ParticleManager_SetSceneObjectGenericFlag().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetSceneObjectGenericFlag {
    return new CUserMsg_ParticleManager_SetSceneObjectGenericFlag().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetSceneObjectGenericFlag | PlainMessage<CUserMsg_ParticleManager_SetSceneObjectGenericFlag> | undefined, b: CUserMsg_ParticleManager_SetSceneObjectGenericFlag | PlainMessage<CUserMsg_ParticleManager_SetSceneObjectGenericFlag> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetSceneObjectGenericFlag, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetSceneObjectTintAndDesat
 */
export class CUserMsg_ParticleManager_SetSceneObjectTintAndDesat extends Message<CUserMsg_ParticleManager_SetSceneObjectTintAndDesat> {
  /**
   * @generated from field: optional fixed32 tint = 1;
   */
  tint?: number;

  /**
   * @generated from field: optional float desat = 2;
   */
  desat?: number;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetSceneObjectTintAndDesat>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetSceneObjectTintAndDesat";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "tint", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "desat", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetSceneObjectTintAndDesat {
    return new CUserMsg_ParticleManager_SetSceneObjectTintAndDesat().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetSceneObjectTintAndDesat {
    return new CUserMsg_ParticleManager_SetSceneObjectTintAndDesat().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetSceneObjectTintAndDesat {
    return new CUserMsg_ParticleManager_SetSceneObjectTintAndDesat().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetSceneObjectTintAndDesat | PlainMessage<CUserMsg_ParticleManager_SetSceneObjectTintAndDesat> | undefined, b: CUserMsg_ParticleManager_SetSceneObjectTintAndDesat | PlainMessage<CUserMsg_ParticleManager_SetSceneObjectTintAndDesat> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetSceneObjectTintAndDesat, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.ParticleSkipToTime
 */
export class CUserMsg_ParticleManager_ParticleSkipToTime extends Message<CUserMsg_ParticleManager_ParticleSkipToTime> {
  /**
   * @generated from field: optional float skip_to_time = 1;
   */
  skipToTime?: number;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_ParticleSkipToTime>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.ParticleSkipToTime";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "skip_to_time", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_ParticleSkipToTime {
    return new CUserMsg_ParticleManager_ParticleSkipToTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_ParticleSkipToTime {
    return new CUserMsg_ParticleManager_ParticleSkipToTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_ParticleSkipToTime {
    return new CUserMsg_ParticleManager_ParticleSkipToTime().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_ParticleSkipToTime | PlainMessage<CUserMsg_ParticleManager_ParticleSkipToTime> | undefined, b: CUserMsg_ParticleManager_ParticleSkipToTime | PlainMessage<CUserMsg_ParticleManager_ParticleSkipToTime> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_ParticleSkipToTime, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.ParticleCanFreeze
 */
export class CUserMsg_ParticleManager_ParticleCanFreeze extends Message<CUserMsg_ParticleManager_ParticleCanFreeze> {
  /**
   * @generated from field: optional bool can_freeze = 1;
   */
  canFreeze?: boolean;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_ParticleCanFreeze>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.ParticleCanFreeze";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "can_freeze", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_ParticleCanFreeze {
    return new CUserMsg_ParticleManager_ParticleCanFreeze().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_ParticleCanFreeze {
    return new CUserMsg_ParticleManager_ParticleCanFreeze().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_ParticleCanFreeze {
    return new CUserMsg_ParticleManager_ParticleCanFreeze().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_ParticleCanFreeze | PlainMessage<CUserMsg_ParticleManager_ParticleCanFreeze> | undefined, b: CUserMsg_ParticleManager_ParticleCanFreeze | PlainMessage<CUserMsg_ParticleManager_ParticleCanFreeze> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_ParticleCanFreeze, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.ParticleFreezeTransitionOverride
 */
export class CUserMsg_ParticleManager_ParticleFreezeTransitionOverride extends Message<CUserMsg_ParticleManager_ParticleFreezeTransitionOverride> {
  /**
   * @generated from field: optional float freeze_transition_override = 1;
   */
  freezeTransitionOverride?: number;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_ParticleFreezeTransitionOverride>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.ParticleFreezeTransitionOverride";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "freeze_transition_override", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_ParticleFreezeTransitionOverride {
    return new CUserMsg_ParticleManager_ParticleFreezeTransitionOverride().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_ParticleFreezeTransitionOverride {
    return new CUserMsg_ParticleManager_ParticleFreezeTransitionOverride().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_ParticleFreezeTransitionOverride {
    return new CUserMsg_ParticleManager_ParticleFreezeTransitionOverride().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_ParticleFreezeTransitionOverride | PlainMessage<CUserMsg_ParticleManager_ParticleFreezeTransitionOverride> | undefined, b: CUserMsg_ParticleManager_ParticleFreezeTransitionOverride | PlainMessage<CUserMsg_ParticleManager_ParticleFreezeTransitionOverride> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_ParticleFreezeTransitionOverride, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetParticleNamedValueContext
 */
export class CUserMsg_ParticleManager_SetParticleNamedValueContext extends Message<CUserMsg_ParticleManager_SetParticleNamedValueContext> {
  /**
   * @generated from field: repeated CUserMsg_ParticleManager.SetParticleNamedValueContext.FloatContextValue float_values = 1;
   */
  floatValues: CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue[] = [];

  /**
   * @generated from field: repeated CUserMsg_ParticleManager.SetParticleNamedValueContext.VectorContextValue vector_values = 2;
   */
  vectorValues: CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue[] = [];

  /**
   * @generated from field: repeated CUserMsg_ParticleManager.SetParticleNamedValueContext.TransformContextValue transform_values = 3;
   */
  transformValues: CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue[] = [];

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetParticleNamedValueContext";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "float_values", kind: "message", T: CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue, repeated: true },
    { no: 2, name: "vector_values", kind: "message", T: CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue, repeated: true },
    { no: 3, name: "transform_values", kind: "message", T: CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetParticleNamedValueContext | PlainMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext> | undefined, b: CUserMsg_ParticleManager_SetParticleNamedValueContext | PlainMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetParticleNamedValueContext, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetParticleNamedValueContext.FloatContextValue
 */
export class CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue extends Message<CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue> {
  /**
   * @generated from field: optional string value_name = 1;
   */
  valueName?: string;

  /**
   * @generated from field: optional float value = 2;
   */
  value?: number;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetParticleNamedValueContext.FloatContextValue";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "value_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue | PlainMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue> | undefined, b: CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue | PlainMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetParticleNamedValueContext_FloatContextValue, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetParticleNamedValueContext.VectorContextValue
 */
export class CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue extends Message<CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue> {
  /**
   * @generated from field: optional string value_name = 1;
   */
  valueName?: string;

  /**
   * @generated from field: optional CMsgVector value = 2;
   */
  value?: CMsgVector;

  /**
   * @generated from field: optional uint32 ent_index = 3 [default = 16777215];
   */
  entIndex?: number;

  /**
   * @generated from field: optional string attachment_name = 4;
   */
  attachmentName?: string;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetParticleNamedValueContext.VectorContextValue";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "value_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "value", kind: "message", T: CMsgVector, opt: true },
    { no: 3, name: "ent_index", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 16777215 },
    { no: 4, name: "attachment_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue | PlainMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue> | undefined, b: CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue | PlainMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetParticleNamedValueContext_VectorContextValue, a, b);
  }
}

/**
 * @generated from message CUserMsg_ParticleManager.SetParticleNamedValueContext.TransformContextValue
 */
export class CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue extends Message<CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue> {
  /**
   * @generated from field: optional string value_name = 1;
   */
  valueName?: string;

  /**
   * @generated from field: optional CMsgQAngle angles = 2;
   */
  angles?: CMsgQAngle;

  /**
   * @generated from field: optional CMsgVector translation = 3;
   */
  translation?: CMsgVector;

  /**
   * @generated from field: optional uint32 ent_index = 4 [default = 16777215];
   */
  entIndex?: number;

  /**
   * @generated from field: optional string attachment_name = 5;
   */
  attachmentName?: string;

  constructor(data?: PartialMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_ParticleManager.SetParticleNamedValueContext.TransformContextValue";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "value_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "angles", kind: "message", T: CMsgQAngle, opt: true },
    { no: 3, name: "translation", kind: "message", T: CMsgVector, opt: true },
    { no: 4, name: "ent_index", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 16777215 },
    { no: 5, name: "attachment_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue {
    return new CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue | PlainMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue> | undefined, b: CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue | PlainMessage<CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue> | undefined): boolean {
    return proto2.util.equals(CUserMsg_ParticleManager_SetParticleNamedValueContext_TransformContextValue, a, b);
  }
}

/**
 * @generated from message CUserMsg_HudError
 */
export class CUserMsg_HudError extends Message<CUserMsg_HudError> {
  /**
   * @generated from field: optional int32 order_id = 1;
   */
  orderId?: number;

  constructor(data?: PartialMessage<CUserMsg_HudError>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_HudError";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "order_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_HudError {
    return new CUserMsg_HudError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_HudError {
    return new CUserMsg_HudError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_HudError {
    return new CUserMsg_HudError().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_HudError | PlainMessage<CUserMsg_HudError> | undefined, b: CUserMsg_HudError | PlainMessage<CUserMsg_HudError> | undefined): boolean {
    return proto2.util.equals(CUserMsg_HudError, a, b);
  }
}

/**
 * @generated from message CUserMsg_CustomGameEvent
 */
export class CUserMsg_CustomGameEvent extends Message<CUserMsg_CustomGameEvent> {
  /**
   * @generated from field: optional string event_name = 1;
   */
  eventName?: string;

  /**
   * @generated from field: optional bytes data = 2;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CUserMsg_CustomGameEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMsg_CustomGameEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "event_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMsg_CustomGameEvent {
    return new CUserMsg_CustomGameEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMsg_CustomGameEvent {
    return new CUserMsg_CustomGameEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMsg_CustomGameEvent {
    return new CUserMsg_CustomGameEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMsg_CustomGameEvent | PlainMessage<CUserMsg_CustomGameEvent> | undefined, b: CUserMsg_CustomGameEvent | PlainMessage<CUserMsg_CustomGameEvent> | undefined): boolean {
    return proto2.util.equals(CUserMsg_CustomGameEvent, a, b);
  }
}

/**
 * @generated from message CUserMessageHapticsManagerPulse
 */
export class CUserMessageHapticsManagerPulse extends Message<CUserMessageHapticsManagerPulse> {
  /**
   * @generated from field: optional int32 hand_id = 1;
   */
  handId?: number;

  /**
   * @generated from field: optional float effect_amplitude = 2;
   */
  effectAmplitude?: number;

  /**
   * @generated from field: optional float effect_frequency = 3;
   */
  effectFrequency?: number;

  /**
   * @generated from field: optional float effect_duration = 4;
   */
  effectDuration?: number;

  constructor(data?: PartialMessage<CUserMessageHapticsManagerPulse>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageHapticsManagerPulse";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "hand_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "effect_amplitude", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "effect_frequency", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "effect_duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageHapticsManagerPulse {
    return new CUserMessageHapticsManagerPulse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageHapticsManagerPulse {
    return new CUserMessageHapticsManagerPulse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageHapticsManagerPulse {
    return new CUserMessageHapticsManagerPulse().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageHapticsManagerPulse | PlainMessage<CUserMessageHapticsManagerPulse> | undefined, b: CUserMessageHapticsManagerPulse | PlainMessage<CUserMessageHapticsManagerPulse> | undefined): boolean {
    return proto2.util.equals(CUserMessageHapticsManagerPulse, a, b);
  }
}

/**
 * @generated from message CUserMessageHapticsManagerEffect
 */
export class CUserMessageHapticsManagerEffect extends Message<CUserMessageHapticsManagerEffect> {
  /**
   * @generated from field: optional int32 hand_id = 1;
   */
  handId?: number;

  /**
   * @generated from field: optional uint32 effect_name_hash_code = 2;
   */
  effectNameHashCode?: number;

  /**
   * @generated from field: optional float effect_scale = 3;
   */
  effectScale?: number;

  constructor(data?: PartialMessage<CUserMessageHapticsManagerEffect>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageHapticsManagerEffect";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "hand_id", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "effect_name_hash_code", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "effect_scale", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageHapticsManagerEffect {
    return new CUserMessageHapticsManagerEffect().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageHapticsManagerEffect {
    return new CUserMessageHapticsManagerEffect().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageHapticsManagerEffect {
    return new CUserMessageHapticsManagerEffect().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageHapticsManagerEffect | PlainMessage<CUserMessageHapticsManagerEffect> | undefined, b: CUserMessageHapticsManagerEffect | PlainMessage<CUserMessageHapticsManagerEffect> | undefined): boolean {
    return proto2.util.equals(CUserMessageHapticsManagerEffect, a, b);
  }
}

/**
 * @generated from message CUserMessageAnimStateGraphState
 */
export class CUserMessageAnimStateGraphState extends Message<CUserMessageAnimStateGraphState> {
  /**
   * @generated from field: optional int32 entity_index = 1;
   */
  entityIndex?: number;

  /**
   * @generated from field: optional bytes data = 2;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<CUserMessageAnimStateGraphState>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageAnimStateGraphState";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "entity_index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageAnimStateGraphState {
    return new CUserMessageAnimStateGraphState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageAnimStateGraphState {
    return new CUserMessageAnimStateGraphState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageAnimStateGraphState {
    return new CUserMessageAnimStateGraphState().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageAnimStateGraphState | PlainMessage<CUserMessageAnimStateGraphState> | undefined, b: CUserMessageAnimStateGraphState | PlainMessage<CUserMessageAnimStateGraphState> | undefined): boolean {
    return proto2.util.equals(CUserMessageAnimStateGraphState, a, b);
  }
}

/**
 * @generated from message CUserMessageCommandQueueState
 */
export class CUserMessageCommandQueueState extends Message<CUserMessageCommandQueueState> {
  /**
   * @generated from field: optional int32 player_slot = 1 [default = -1];
   */
  playerSlot?: number;

  /**
   * @generated from field: optional CUserMessageCommandQueueState.command_queue_info_t command_queue_info = 2;
   */
  commandQueueInfo?: CUserMessageCommandQueueState_command_queue_info_t;

  constructor(data?: PartialMessage<CUserMessageCommandQueueState>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageCommandQueueState";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "player_slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true, default: -1 },
    { no: 2, name: "command_queue_info", kind: "message", T: CUserMessageCommandQueueState_command_queue_info_t, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageCommandQueueState {
    return new CUserMessageCommandQueueState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageCommandQueueState {
    return new CUserMessageCommandQueueState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageCommandQueueState {
    return new CUserMessageCommandQueueState().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageCommandQueueState | PlainMessage<CUserMessageCommandQueueState> | undefined, b: CUserMessageCommandQueueState | PlainMessage<CUserMessageCommandQueueState> | undefined): boolean {
    return proto2.util.equals(CUserMessageCommandQueueState, a, b);
  }
}

/**
 * @generated from message CUserMessageCommandQueueState.command_queue_info_t
 */
export class CUserMessageCommandQueueState_command_queue_info_t extends Message<CUserMessageCommandQueueState_command_queue_info_t> {
  /**
   * @generated from field: optional uint32 commands_queued = 1;
   */
  commandsQueued?: number;

  /**
   * @generated from field: optional uint32 command_queue_desired_size = 2;
   */
  commandQueueDesiredSize?: number;

  /**
   * @generated from field: optional uint32 starved_command_ticks = 3;
   */
  starvedCommandTicks?: number;

  /**
   * @generated from field: optional int32 time_dilation_percent = 4;
   */
  timeDilationPercent?: number;

  constructor(data?: PartialMessage<CUserMessageCommandQueueState_command_queue_info_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageCommandQueueState.command_queue_info_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "commands_queued", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "command_queue_desired_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "starved_command_ticks", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "time_dilation_percent", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageCommandQueueState_command_queue_info_t {
    return new CUserMessageCommandQueueState_command_queue_info_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageCommandQueueState_command_queue_info_t {
    return new CUserMessageCommandQueueState_command_queue_info_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageCommandQueueState_command_queue_info_t {
    return new CUserMessageCommandQueueState_command_queue_info_t().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageCommandQueueState_command_queue_info_t | PlainMessage<CUserMessageCommandQueueState_command_queue_info_t> | undefined, b: CUserMessageCommandQueueState_command_queue_info_t | PlainMessage<CUserMessageCommandQueueState_command_queue_info_t> | undefined): boolean {
    return proto2.util.equals(CUserMessageCommandQueueState_command_queue_info_t, a, b);
  }
}

/**
 * @generated from message CUserMessageUpdateCssClasses
 */
export class CUserMessageUpdateCssClasses extends Message<CUserMessageUpdateCssClasses> {
  /**
   * @generated from field: optional int32 target_world_panel = 1;
   */
  targetWorldPanel?: number;

  /**
   * @generated from field: optional string css_classes = 2;
   */
  cssClasses?: string;

  /**
   * @generated from field: optional bool is_add = 3;
   */
  isAdd?: boolean;

  constructor(data?: PartialMessage<CUserMessageUpdateCssClasses>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageUpdateCssClasses";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "target_world_panel", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "css_classes", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "is_add", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageUpdateCssClasses {
    return new CUserMessageUpdateCssClasses().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageUpdateCssClasses {
    return new CUserMessageUpdateCssClasses().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageUpdateCssClasses {
    return new CUserMessageUpdateCssClasses().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageUpdateCssClasses | PlainMessage<CUserMessageUpdateCssClasses> | undefined, b: CUserMessageUpdateCssClasses | PlainMessage<CUserMessageUpdateCssClasses> | undefined): boolean {
    return proto2.util.equals(CUserMessageUpdateCssClasses, a, b);
  }
}

/**
 * @generated from message CUserMessageServerFrameTime
 */
export class CUserMessageServerFrameTime extends Message<CUserMessageServerFrameTime> {
  /**
   * @generated from field: optional float frame_time = 1;
   */
  frameTime?: number;

  constructor(data?: PartialMessage<CUserMessageServerFrameTime>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageServerFrameTime";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "frame_time", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageServerFrameTime {
    return new CUserMessageServerFrameTime().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageServerFrameTime {
    return new CUserMessageServerFrameTime().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageServerFrameTime {
    return new CUserMessageServerFrameTime().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageServerFrameTime | PlainMessage<CUserMessageServerFrameTime> | undefined, b: CUserMessageServerFrameTime | PlainMessage<CUserMessageServerFrameTime> | undefined): boolean {
    return proto2.util.equals(CUserMessageServerFrameTime, a, b);
  }
}

/**
 * @generated from message CUserMessageLagCompensationError
 */
export class CUserMessageLagCompensationError extends Message<CUserMessageLagCompensationError> {
  /**
   * @generated from field: optional float distance = 1;
   */
  distance?: number;

  constructor(data?: PartialMessage<CUserMessageLagCompensationError>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageLagCompensationError";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "distance", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageLagCompensationError {
    return new CUserMessageLagCompensationError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageLagCompensationError {
    return new CUserMessageLagCompensationError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageLagCompensationError {
    return new CUserMessageLagCompensationError().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageLagCompensationError | PlainMessage<CUserMessageLagCompensationError> | undefined, b: CUserMessageLagCompensationError | PlainMessage<CUserMessageLagCompensationError> | undefined): boolean {
    return proto2.util.equals(CUserMessageLagCompensationError, a, b);
  }
}

/**
 * @generated from message CUserMessageRequestDllStatus
 */
export class CUserMessageRequestDllStatus extends Message<CUserMessageRequestDllStatus> {
  /**
   * @generated from field: optional string dll_action = 1;
   */
  dllAction?: string;

  /**
   * @generated from field: optional bool full_report = 2;
   */
  fullReport?: boolean;

  constructor(data?: PartialMessage<CUserMessageRequestDllStatus>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageRequestDllStatus";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "dll_action", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "full_report", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageRequestDllStatus {
    return new CUserMessageRequestDllStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageRequestDllStatus {
    return new CUserMessageRequestDllStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageRequestDllStatus {
    return new CUserMessageRequestDllStatus().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageRequestDllStatus | PlainMessage<CUserMessageRequestDllStatus> | undefined, b: CUserMessageRequestDllStatus | PlainMessage<CUserMessageRequestDllStatus> | undefined): boolean {
    return proto2.util.equals(CUserMessageRequestDllStatus, a, b);
  }
}

/**
 * @generated from message CUserMessageRequestUtilAction
 */
export class CUserMessageRequestUtilAction extends Message<CUserMessageRequestUtilAction> {
  /**
   * @generated from field: optional int32 util1 = 2;
   */
  util1?: number;

  /**
   * @generated from field: optional int32 util2 = 3;
   */
  util2?: number;

  /**
   * @generated from field: optional int32 util3 = 4;
   */
  util3?: number;

  /**
   * @generated from field: optional int32 util4 = 5;
   */
  util4?: number;

  /**
   * @generated from field: optional int32 util5 = 6;
   */
  util5?: number;

  constructor(data?: PartialMessage<CUserMessageRequestUtilAction>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageRequestUtilAction";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 2, name: "util1", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "util2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "util3", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "util4", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "util5", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageRequestUtilAction {
    return new CUserMessageRequestUtilAction().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageRequestUtilAction {
    return new CUserMessageRequestUtilAction().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageRequestUtilAction {
    return new CUserMessageRequestUtilAction().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageRequestUtilAction | PlainMessage<CUserMessageRequestUtilAction> | undefined, b: CUserMessageRequestUtilAction | PlainMessage<CUserMessageRequestUtilAction> | undefined): boolean {
    return proto2.util.equals(CUserMessageRequestUtilAction, a, b);
  }
}

/**
 * @generated from message CUserMessage_UtilMsg_Response
 */
export class CUserMessage_UtilMsg_Response extends Message<CUserMessage_UtilMsg_Response> {
  /**
   * @generated from field: optional fixed32 crc = 1;
   */
  crc?: number;

  /**
   * @generated from field: optional int32 item_count = 2;
   */
  itemCount?: number;

  /**
   * @generated from field: optional fixed32 crc2 = 3;
   */
  crc2?: number;

  /**
   * @generated from field: optional int32 item_count2 = 4;
   */
  itemCount2?: number;

  /**
   * @generated from field: repeated int32 crc_part = 5;
   */
  crcPart: number[] = [];

  /**
   * @generated from field: repeated int32 crc_part2 = 6;
   */
  crcPart2: number[] = [];

  /**
   * @generated from field: optional int32 client_timestamp = 7;
   */
  clientTimestamp?: number;

  /**
   * @generated from field: optional int32 platform = 8;
   */
  platform?: number;

  /**
   * @generated from field: repeated CUserMessage_UtilMsg_Response.ItemDetail itemdetails = 9;
   */
  itemdetails: CUserMessage_UtilMsg_Response_ItemDetail[] = [];

  /**
   * @generated from field: optional int32 itemgroup = 10;
   */
  itemgroup?: number;

  /**
   * @generated from field: optional int32 total_count = 11;
   */
  totalCount?: number;

  /**
   * @generated from field: optional int32 total_count2 = 12;
   */
  totalCount2?: number;

  constructor(data?: PartialMessage<CUserMessage_UtilMsg_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessage_UtilMsg_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "crc", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "item_count", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "crc2", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 4, name: "item_count2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "crc_part", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 6, name: "crc_part2", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 7, name: "client_timestamp", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "platform", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "itemdetails", kind: "message", T: CUserMessage_UtilMsg_Response_ItemDetail, repeated: true },
    { no: 10, name: "itemgroup", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 11, name: "total_count", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 12, name: "total_count2", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessage_UtilMsg_Response {
    return new CUserMessage_UtilMsg_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessage_UtilMsg_Response {
    return new CUserMessage_UtilMsg_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessage_UtilMsg_Response {
    return new CUserMessage_UtilMsg_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessage_UtilMsg_Response | PlainMessage<CUserMessage_UtilMsg_Response> | undefined, b: CUserMessage_UtilMsg_Response | PlainMessage<CUserMessage_UtilMsg_Response> | undefined): boolean {
    return proto2.util.equals(CUserMessage_UtilMsg_Response, a, b);
  }
}

/**
 * @generated from message CUserMessage_UtilMsg_Response.ItemDetail
 */
export class CUserMessage_UtilMsg_Response_ItemDetail extends Message<CUserMessage_UtilMsg_Response_ItemDetail> {
  /**
   * @generated from field: optional int32 index = 1;
   */
  index?: number;

  /**
   * @generated from field: optional int32 hash = 2;
   */
  hash?: number;

  /**
   * @generated from field: optional int32 crc = 3;
   */
  crc?: number;

  /**
   * @generated from field: optional string name = 4;
   */
  name?: string;

  constructor(data?: PartialMessage<CUserMessage_UtilMsg_Response_ItemDetail>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessage_UtilMsg_Response.ItemDetail";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "hash", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "crc", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessage_UtilMsg_Response_ItemDetail {
    return new CUserMessage_UtilMsg_Response_ItemDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessage_UtilMsg_Response_ItemDetail {
    return new CUserMessage_UtilMsg_Response_ItemDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessage_UtilMsg_Response_ItemDetail {
    return new CUserMessage_UtilMsg_Response_ItemDetail().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessage_UtilMsg_Response_ItemDetail | PlainMessage<CUserMessage_UtilMsg_Response_ItemDetail> | undefined, b: CUserMessage_UtilMsg_Response_ItemDetail | PlainMessage<CUserMessage_UtilMsg_Response_ItemDetail> | undefined): boolean {
    return proto2.util.equals(CUserMessage_UtilMsg_Response_ItemDetail, a, b);
  }
}

/**
 * @generated from message CUserMessage_DllStatus
 */
export class CUserMessage_DllStatus extends Message<CUserMessage_DllStatus> {
  /**
   * @generated from field: optional string file_report = 1;
   */
  fileReport?: string;

  /**
   * @generated from field: optional string command_line = 2;
   */
  commandLine?: string;

  /**
   * @generated from field: optional uint32 total_files = 3;
   */
  totalFiles?: number;

  /**
   * @generated from field: optional uint32 process_id = 4;
   */
  processId?: number;

  /**
   * @generated from field: optional int32 osversion = 5;
   */
  osversion?: number;

  /**
   * @generated from field: optional uint64 client_time = 6;
   */
  clientTime?: bigint;

  /**
   * @generated from field: repeated CUserMessage_DllStatus.CVDiagnostic diagnostics = 7;
   */
  diagnostics: CUserMessage_DllStatus_CVDiagnostic[] = [];

  constructor(data?: PartialMessage<CUserMessage_DllStatus>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessage_DllStatus";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "file_report", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "command_line", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "total_files", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "process_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "osversion", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "client_time", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 7, name: "diagnostics", kind: "message", T: CUserMessage_DllStatus_CVDiagnostic, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessage_DllStatus {
    return new CUserMessage_DllStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessage_DllStatus {
    return new CUserMessage_DllStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessage_DllStatus {
    return new CUserMessage_DllStatus().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessage_DllStatus | PlainMessage<CUserMessage_DllStatus> | undefined, b: CUserMessage_DllStatus | PlainMessage<CUserMessage_DllStatus> | undefined): boolean {
    return proto2.util.equals(CUserMessage_DllStatus, a, b);
  }
}

/**
 * @generated from message CUserMessage_DllStatus.CVDiagnostic
 */
export class CUserMessage_DllStatus_CVDiagnostic extends Message<CUserMessage_DllStatus_CVDiagnostic> {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id?: number;

  /**
   * @generated from field: optional uint32 extended = 2;
   */
  extended?: number;

  /**
   * @generated from field: optional uint64 value = 3;
   */
  value?: bigint;

  /**
   * @generated from field: optional string string_value = 4;
   */
  stringValue?: string;

  constructor(data?: PartialMessage<CUserMessage_DllStatus_CVDiagnostic>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessage_DllStatus.CVDiagnostic";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "extended", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "value", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "string_value", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessage_DllStatus_CVDiagnostic {
    return new CUserMessage_DllStatus_CVDiagnostic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessage_DllStatus_CVDiagnostic {
    return new CUserMessage_DllStatus_CVDiagnostic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessage_DllStatus_CVDiagnostic {
    return new CUserMessage_DllStatus_CVDiagnostic().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessage_DllStatus_CVDiagnostic | PlainMessage<CUserMessage_DllStatus_CVDiagnostic> | undefined, b: CUserMessage_DllStatus_CVDiagnostic | PlainMessage<CUserMessage_DllStatus_CVDiagnostic> | undefined): boolean {
    return proto2.util.equals(CUserMessage_DllStatus_CVDiagnostic, a, b);
  }
}

/**
 * @generated from message CUserMessageRequestInventory
 */
export class CUserMessageRequestInventory extends Message<CUserMessageRequestInventory> {
  /**
   * @generated from field: optional int32 inventory = 1;
   */
  inventory?: number;

  /**
   * @generated from field: optional int32 offset = 2;
   */
  offset?: number;

  /**
   * @generated from field: optional int32 options = 3;
   */
  options?: number;

  constructor(data?: PartialMessage<CUserMessageRequestInventory>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessageRequestInventory";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "inventory", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "options", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessageRequestInventory {
    return new CUserMessageRequestInventory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessageRequestInventory {
    return new CUserMessageRequestInventory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessageRequestInventory {
    return new CUserMessageRequestInventory().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessageRequestInventory | PlainMessage<CUserMessageRequestInventory> | undefined, b: CUserMessageRequestInventory | PlainMessage<CUserMessageRequestInventory> | undefined): boolean {
    return proto2.util.equals(CUserMessageRequestInventory, a, b);
  }
}

/**
 * @generated from message CUserMessage_Inventory_Response
 */
export class CUserMessage_Inventory_Response extends Message<CUserMessage_Inventory_Response> {
  /**
   * @generated from field: optional fixed32 crc = 1;
   */
  crc?: number;

  /**
   * @generated from field: optional int32 item_count = 2;
   */
  itemCount?: number;

  /**
   * @generated from field: optional int32 osversion = 5;
   */
  osversion?: number;

  /**
   * @generated from field: optional int32 perf_time = 6;
   */
  perfTime?: number;

  /**
   * @generated from field: optional int32 client_timestamp = 7;
   */
  clientTimestamp?: number;

  /**
   * @generated from field: optional int32 platform = 8;
   */
  platform?: number;

  /**
   * @generated from field: repeated CUserMessage_Inventory_Response.InventoryDetail inventories = 9;
   */
  inventories: CUserMessage_Inventory_Response_InventoryDetail[] = [];

  /**
   * @generated from field: repeated CUserMessage_Inventory_Response.InventoryDetail inventories2 = 10;
   */
  inventories2: CUserMessage_Inventory_Response_InventoryDetail[] = [];

  /**
   * @generated from field: optional int32 inv_type = 11;
   */
  invType?: number;

  /**
   * @generated from field: optional int32 build_version = 12;
   */
  buildVersion?: number;

  /**
   * @generated from field: optional int32 instance = 13;
   */
  instance?: number;

  constructor(data?: PartialMessage<CUserMessage_Inventory_Response>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessage_Inventory_Response";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "crc", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "item_count", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "osversion", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "perf_time", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "client_timestamp", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 8, name: "platform", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "inventories", kind: "message", T: CUserMessage_Inventory_Response_InventoryDetail, repeated: true },
    { no: 10, name: "inventories2", kind: "message", T: CUserMessage_Inventory_Response_InventoryDetail, repeated: true },
    { no: 11, name: "inv_type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 12, name: "build_version", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 13, name: "instance", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessage_Inventory_Response {
    return new CUserMessage_Inventory_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessage_Inventory_Response {
    return new CUserMessage_Inventory_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessage_Inventory_Response {
    return new CUserMessage_Inventory_Response().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessage_Inventory_Response | PlainMessage<CUserMessage_Inventory_Response> | undefined, b: CUserMessage_Inventory_Response | PlainMessage<CUserMessage_Inventory_Response> | undefined): boolean {
    return proto2.util.equals(CUserMessage_Inventory_Response, a, b);
  }
}

/**
 * @generated from message CUserMessage_Inventory_Response.InventoryDetail
 */
export class CUserMessage_Inventory_Response_InventoryDetail extends Message<CUserMessage_Inventory_Response_InventoryDetail> {
  /**
   * @generated from field: optional int32 index = 1;
   */
  index?: number;

  /**
   * @generated from field: optional int64 primary = 2;
   */
  primary?: bigint;

  /**
   * @generated from field: optional int64 offset = 3;
   */
  offset?: bigint;

  /**
   * @generated from field: optional int64 first = 4;
   */
  first?: bigint;

  /**
   * @generated from field: optional int64 base = 5;
   */
  base?: bigint;

  /**
   * @generated from field: optional string name = 6;
   */
  name?: string;

  /**
   * @generated from field: optional string base_name = 7;
   */
  baseName?: string;

  /**
   * @generated from field: optional int32 base_detail = 8;
   */
  baseDetail?: number;

  /**
   * @generated from field: optional int32 base_time = 9;
   */
  baseTime?: number;

  /**
   * @generated from field: optional int32 base_hash = 10;
   */
  baseHash?: number;

  constructor(data?: PartialMessage<CUserMessage_Inventory_Response_InventoryDetail>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CUserMessage_Inventory_Response.InventoryDetail";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "index", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "primary", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 4, name: "first", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 5, name: "base", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 6, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "base_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "base_detail", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 9, name: "base_time", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "base_hash", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CUserMessage_Inventory_Response_InventoryDetail {
    return new CUserMessage_Inventory_Response_InventoryDetail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CUserMessage_Inventory_Response_InventoryDetail {
    return new CUserMessage_Inventory_Response_InventoryDetail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CUserMessage_Inventory_Response_InventoryDetail {
    return new CUserMessage_Inventory_Response_InventoryDetail().fromJsonString(jsonString, options);
  }

  static equals(a: CUserMessage_Inventory_Response_InventoryDetail | PlainMessage<CUserMessage_Inventory_Response_InventoryDetail> | undefined, b: CUserMessage_Inventory_Response_InventoryDetail | PlainMessage<CUserMessage_Inventory_Response_InventoryDetail> | undefined): boolean {
    return proto2.util.equals(CUserMessage_Inventory_Response_InventoryDetail, a, b);
  }
}


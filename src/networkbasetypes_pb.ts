// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file networkbasetypes.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_network_connection } from "./network_connection_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file networkbasetypes.proto.
 */
export const file_networkbasetypes: GenFile = /*@__PURE__*/
  fileDesc("ChZuZXR3b3JrYmFzZXR5cGVzLnByb3RvIjgKCkNNc2dWZWN0b3ISCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAISCQoBdxgEIAEoAiIkCgxDTXNnVmVjdG9yMkQSCQoBeBgBIAEoAhIJCgF5GAIgASgCIi0KCkNNc2dRQW5nbGUSCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAIiPAoOQ01zZ1F1YXRlcm5pb24SCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAISCQoBdxgEIAEoAiJjCg1DTXNnVHJhbnNmb3JtEh0KCHBvc2l0aW9uGAEgASgLMgsuQ01zZ1ZlY3RvchINCgVzY2FsZRgCIAEoAhIkCgtvcmllbnRhdGlvbhgDIAEoCzIPLkNNc2dRdWF0ZXJuaW9uIjYKCENNc2dSR0JBEgkKAXIYASABKAUSCQoBZxgCIAEoBRIJCgFiGAMgASgFEgkKAWEYBCABKAUicQoOQ01zZ1BsYXllckluZm8SDAoEbmFtZRgBIAEoCRIMCgR4dWlkGAIgASgGEg4KBnVzZXJpZBgDIAEoBRIPCgdzdGVhbWlkGAQgASgGEhIKCmZha2VwbGF5ZXIYBSABKAgSDgoGaXNobHR2GAYgASgIIi0KCkNFbnRpdHlNc2cSHwoNdGFyZ2V0X2VudGl0eRgBIAEoDToIMTY3NzcyMTUiUgoKQ01zZ19DVmFycxIfCgVjdmFycxgBIAMoCzIQLkNNc2dfQ1ZhcnMuQ1ZhchojCgRDVmFyEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAkiDQoLQ05FVE1zZ19OT1AiJwoXQ05FVE1zZ19TcGxpdFNjcmVlblVzZXISDAoEc2xvdBgBIAEoBSLPAgoMQ05FVE1zZ19UaWNrEgwKBHRpY2sYASABKA0SHAoUaG9zdF9jb21wdXRhdGlvbnRpbWUYBCABKA0SKgoiaG9zdF9jb21wdXRhdGlvbnRpbWVfc3RkX2RldmlhdGlvbhgFIAEoDRIYChBsZWdhY3lfaG9zdF9sb3NzGAcgASgNEiEKGWhvc3RfdW5maWx0ZXJlZF9mcmFtZXRpbWUYCCABKA0SGQoRaGx0dl9yZXBsYXlfZmxhZ3MYCSABKA0SGgoSZXhwZWN0ZWRfbG9uZ190aWNrGAogASgNEiEKGWV4cGVjdGVkX2xvbmdfdGlja19yZWFzb24YCyABKAkSIgoaaG9zdF9mcmFtZV9kcm9wcGVkX3BjdF94MTAYDCABKA0SLAokaG9zdF9mcmFtZV9pcnJlZ3VsYXJfYXJyaXZhbF9wY3RfeDEwGA0gASgNIj0KEUNORVRNc2dfU3RyaW5nQ21kEg8KB2NvbW1hbmQYASABKAkSFwoPcHJlZGljdGlvbl9zeW5jGAIgASgNIjEKEUNORVRNc2dfU2V0Q29uVmFyEhwKB2NvbnZhcnMYASABKAsyCy5DTXNnX0NWYXJzIrwBChNDTkVUTXNnX1NpZ25vblN0YXRlEjYKDHNpZ25vbl9zdGF0ZRgBIAEoDjIOLlNpZ25vblN0YXRlX3Q6EFNJR05PTlNUQVRFX05PTkUSEwoLc3Bhd25fY291bnQYAiABKA0SGgoSbnVtX3NlcnZlcl9wbGF5ZXJzGAMgASgNEhoKEnBsYXllcnNfbmV0d29ya2lkcxgEIAMoCRIQCghtYXBfbmFtZRgFIAEoCRIOCgZhZGRvbnMYBiABKAki/AEKEUNTVkNNc2dfR2FtZUV2ZW50EhIKCmV2ZW50X25hbWUYASABKAkSDwoHZXZlbnRpZBgCIAEoBRImCgRrZXlzGAMgAygLMhguQ1NWQ01zZ19HYW1lRXZlbnQua2V5X3QamQEKBWtleV90EgwKBHR5cGUYASABKAUSEgoKdmFsX3N0cmluZxgCIAEoCRIRCgl2YWxfZmxvYXQYAyABKAISEAoIdmFsX2xvbmcYBCABKAUSEQoJdmFsX3Nob3J0GAUgASgFEhAKCHZhbF9ieXRlGAYgASgFEhAKCHZhbF9ib29sGAcgASgIEhIKCnZhbF91aW50NjQYCCABKAQihQEKFkNTVkNNc2dMaXN0X0dhbWVFdmVudHMSLwoGZXZlbnRzGAEgAygLMh8uQ1NWQ01zZ0xpc3RfR2FtZUV2ZW50cy5ldmVudF90GjoKB2V2ZW50X3QSDAoEdGljaxgBIAEoBRIhCgVldmVudBgCIAEoCzISLkNTVkNNc2dfR2FtZUV2ZW50IqsEChdDTkVUTXNnX1NwYXduR3JvdXBfTG9hZBIRCgl3b3JsZG5hbWUYASABKAkSFgoOZW50aXR5bHVtcG5hbWUYAiABKAkSGAoQZW50aXR5ZmlsdGVybmFtZRgDIAEoCRIYChBzcGF3bmdyb3VwaGFuZGxlGAQgASgNEh0KFXNwYXduZ3JvdXBvd25lcmhhbmRsZRgFIAEoDRIlChB3b3JsZF9vZmZzZXRfcG9zGAYgASgLMgsuQ01zZ1ZlY3RvchInChJ3b3JsZF9vZmZzZXRfYW5nbGUYByABKAsyCy5DTXNnUUFuZ2xlEhoKEnNwYXduZ3JvdXBtYW5pZmVzdBgIIAEoDBINCgVmbGFncxgJIAEoDRIRCgl0aWNrY291bnQYCiABKAUSGgoSbWFuaWZlc3RpbmNvbXBsZXRlGAsgASgIEhYKDmxvY2FsbmFtZWZpeHVwGAwgASgJEhcKD3BhcmVudG5hbWVmaXh1cBgNIAEoCRIcChRtYW5pZmVzdGxvYWRwcmlvcml0eRgOIAEoBRIUCgx3b3JsZGdyb3VwaWQYDyABKA0SGAoQY3JlYXRpb25zZXF1ZW5jZRgQIAEoDRIYChBzYXZlZ2FtZWZpbGVuYW1lGBEgASgJEh4KFnNwYXduZ3JvdXBwYXJlbnRoYW5kbGUYEiABKA0SFwoPbGV2ZWx0cmFuc2l0aW9uGBMgASgIEhYKDndvcmxkZ3JvdXBuYW1lGBQgASgJInUKIUNORVRNc2dfU3Bhd25Hcm91cF9NYW5pZmVzdFVwZGF0ZRIYChBzcGF3bmdyb3VwaGFuZGxlGAEgASgNEhoKEnNwYXduZ3JvdXBtYW5pZmVzdBgCIAEoDBIaChJtYW5pZmVzdGluY29tcGxldGUYAyABKAgiawoiQ05FVE1zZ19TcGF3bkdyb3VwX1NldENyZWF0aW9uVGljaxIYChBzcGF3bmdyb3VwaGFuZGxlGAEgASgNEhEKCXRpY2tjb3VudBgCIAEoBRIYChBjcmVhdGlvbnNlcXVlbmNlGAMgASgNIlcKGUNORVRNc2dfU3Bhd25Hcm91cF9VbmxvYWQSGAoQc3Bhd25ncm91cGhhbmRsZRgBIAEoDRINCgVmbGFncxgCIAEoDRIRCgl0aWNrY291bnQYAyABKAUiPAogQ05FVE1zZ19TcGF3bkdyb3VwX0xvYWRDb21wbGV0ZWQSGAoQc3Bhd25ncm91cGhhbmRsZRgBIAEoDSLNAwogQ1NWQ01zZ19HYW1lU2Vzc2lvbkNvbmZpZ3VyYXRpb24SFgoOaXNfbXVsdGlwbGF5ZXIYASABKAgSFwoPaXNfbG9hZHNhdmVnYW1lGAIgASgIEhkKEWlzX2JhY2tncm91bmRfbWFwGAMgASgIEhMKC2lzX2hlYWRsZXNzGAQgASgIEhgKEG1pbl9jbGllbnRfbGltaXQYBSABKA0SGAoQbWF4X2NsaWVudF9saW1pdBgGIAEoDRITCgttYXhfY2xpZW50cxgHIAEoDRIVCg10aWNrX2ludGVydmFsGAggASgHEhAKCGhvc3RuYW1lGAkgASgJEhQKDHNhdmVnYW1lbmFtZRgKIAEoCRISCgpzMV9tYXBuYW1lGAsgASgJEhAKCGdhbWVtb2RlGAwgASgJEhkKEXNlcnZlcl9pcF9hZGRyZXNzGA0gASgJEgwKBGRhdGEYDiABKAwSFAoMaXNfbG9jYWxvbmx5GA8gASgIEhcKD25vX3N0ZWFtX3NlcnZlchgTIAEoCBIVCg1pc190cmFuc2l0aW9uGBAgASgIEhUKDXByZXZpb3VzbGV2ZWwYESABKAkSFAoMbGFuZG1hcmtuYW1lGBIgASgJIrIBChRDTkVUTXNnX0RlYnVnT3ZlcmxheRINCgVldHlwZRgBIAEoBRIcCgd2ZWN0b3JzGAIgAygLMgsuQ01zZ1ZlY3RvchIZCgZjb2xvcnMYAyADKAsyCS5DTXNnUkdCQRISCgpkaW1lbnNpb25zGAQgAygCEg0KBXRpbWVzGAUgAygCEg0KBWJvb2xzGAYgAygIEg8KB3VpbnQ2NHMYByADKAQSDwoHc3RyaW5ncxgIIAMoCSrUAQoNU2lnbm9uU3RhdGVfdBIUChBTSUdOT05TVEFURV9OT05FEAASGQoVU0lHTk9OU1RBVEVfQ0hBTExFTkdFEAESGQoVU0lHTk9OU1RBVEVfQ09OTkVDVEVEEAISEwoPU0lHTk9OU1RBVEVfTkVXEAMSGAoUU0lHTk9OU1RBVEVfUFJFU1BBV04QBBIVChFTSUdOT05TVEFURV9TUEFXThAFEhQKEFNJR05PTlNUQVRFX0ZVTEwQBhIbChdTSUdOT05TVEFURV9DSEFOR0VMRVZFTBAHKssCCgxORVRfTWVzc2FnZXMSCwoHbmV0X05PUBAAEhkKFW5ldF9EaXNjb25uZWN0X0xlZ2FjeRABEhcKE25ldF9TcGxpdFNjcmVlblVzZXIQAxIMCghuZXRfVGljaxAEEhEKDW5ldF9TdHJpbmdDbWQQBRIRCg1uZXRfU2V0Q29uVmFyEAYSEwoPbmV0X1NpZ25vblN0YXRlEAcSFwoTbmV0X1NwYXduR3JvdXBfTG9hZBAIEiEKHW5ldF9TcGF3bkdyb3VwX01hbmlmZXN0VXBkYXRlEAkSIgoebmV0X1NwYXduR3JvdXBfU2V0Q3JlYXRpb25UaWNrEAsSGQoVbmV0X1NwYXduR3JvdXBfVW5sb2FkEAwSIAocbmV0X1NwYXduR3JvdXBfTG9hZENvbXBsZXRlZBANEhQKEG5ldF9EZWJ1Z092ZXJsYXkQDyrMAgoRU3Bhd25Hcm91cEZsYWdzX3QSJwojU1BBV05fR1JPVVBfTE9BRF9FTlRJVElFU19GUk9NX1NBVkUQARIjCh9TUEFXTl9HUk9VUF9ET05UX1NQQVdOX0VOVElUSUVTEAISIQodU1BBV05fR1JPVVBfU1lOQ0hST05PVVNfU1BBV04QBBImCiJTUEFXTl9HUk9VUF9JU19JTklUSUFMX1NQQVdOX0dST1VQEAgSKwonU1BBV05fR1JPVVBfQ1JFQVRFX0NMSUVOVF9PTkxZX0VOVElUSUVTEBASIgoeU1BBV05fR1JPVVBfQkxPQ0tfVU5USUxfTE9BREVEEEASJAofU1BBV05fR1JPVVBfTE9BRF9TVFJFQU1JTkdfREFUQRCAARInCiJTUEFXTl9HUk9VUF9DUkVBVEVfTkVXX1NDRU5FX1dPUkxEEIAC", [file_network_connection]);

/**
 * @generated from message CMsgVector
 */
export type CMsgVector = Message<"CMsgVector"> & {
  /**
   * @generated from field: optional float x = 1;
   */
  x: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y: number;

  /**
   * @generated from field: optional float z = 3;
   */
  z: number;

  /**
   * @generated from field: optional float w = 4;
   */
  w: number;
};

/**
 * Describes the message CMsgVector.
 * Use `create(CMsgVectorSchema)` to create a new message.
 */
export const CMsgVectorSchema: GenMessage<CMsgVector> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 0);

/**
 * @generated from message CMsgVector2D
 */
export type CMsgVector2D = Message<"CMsgVector2D"> & {
  /**
   * @generated from field: optional float x = 1;
   */
  x: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y: number;
};

/**
 * Describes the message CMsgVector2D.
 * Use `create(CMsgVector2DSchema)` to create a new message.
 */
export const CMsgVector2DSchema: GenMessage<CMsgVector2D> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 1);

/**
 * @generated from message CMsgQAngle
 */
export type CMsgQAngle = Message<"CMsgQAngle"> & {
  /**
   * @generated from field: optional float x = 1;
   */
  x: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y: number;

  /**
   * @generated from field: optional float z = 3;
   */
  z: number;
};

/**
 * Describes the message CMsgQAngle.
 * Use `create(CMsgQAngleSchema)` to create a new message.
 */
export const CMsgQAngleSchema: GenMessage<CMsgQAngle> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 2);

/**
 * @generated from message CMsgQuaternion
 */
export type CMsgQuaternion = Message<"CMsgQuaternion"> & {
  /**
   * @generated from field: optional float x = 1;
   */
  x: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y: number;

  /**
   * @generated from field: optional float z = 3;
   */
  z: number;

  /**
   * @generated from field: optional float w = 4;
   */
  w: number;
};

/**
 * Describes the message CMsgQuaternion.
 * Use `create(CMsgQuaternionSchema)` to create a new message.
 */
export const CMsgQuaternionSchema: GenMessage<CMsgQuaternion> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 3);

/**
 * @generated from message CMsgTransform
 */
export type CMsgTransform = Message<"CMsgTransform"> & {
  /**
   * @generated from field: optional CMsgVector position = 1;
   */
  position?: CMsgVector;

  /**
   * @generated from field: optional float scale = 2;
   */
  scale: number;

  /**
   * @generated from field: optional CMsgQuaternion orientation = 3;
   */
  orientation?: CMsgQuaternion;
};

/**
 * Describes the message CMsgTransform.
 * Use `create(CMsgTransformSchema)` to create a new message.
 */
export const CMsgTransformSchema: GenMessage<CMsgTransform> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 4);

/**
 * @generated from message CMsgRGBA
 */
export type CMsgRGBA = Message<"CMsgRGBA"> & {
  /**
   * @generated from field: optional int32 r = 1;
   */
  r: number;

  /**
   * @generated from field: optional int32 g = 2;
   */
  g: number;

  /**
   * @generated from field: optional int32 b = 3;
   */
  b: number;

  /**
   * @generated from field: optional int32 a = 4;
   */
  a: number;
};

/**
 * Describes the message CMsgRGBA.
 * Use `create(CMsgRGBASchema)` to create a new message.
 */
export const CMsgRGBASchema: GenMessage<CMsgRGBA> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 5);

/**
 * @generated from message CMsgPlayerInfo
 */
export type CMsgPlayerInfo = Message<"CMsgPlayerInfo"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional fixed64 xuid = 2;
   */
  xuid: bigint;

  /**
   * @generated from field: optional int32 userid = 3;
   */
  userid: number;

  /**
   * @generated from field: optional fixed64 steamid = 4;
   */
  steamid: bigint;

  /**
   * @generated from field: optional bool fakeplayer = 5;
   */
  fakeplayer: boolean;

  /**
   * @generated from field: optional bool ishltv = 6;
   */
  ishltv: boolean;
};

/**
 * Describes the message CMsgPlayerInfo.
 * Use `create(CMsgPlayerInfoSchema)` to create a new message.
 */
export const CMsgPlayerInfoSchema: GenMessage<CMsgPlayerInfo> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 6);

/**
 * @generated from message CEntityMsg
 */
export type CEntityMsg = Message<"CEntityMsg"> & {
  /**
   * @generated from field: optional uint32 target_entity = 1 [default = 16777215];
   */
  targetEntity: number;
};

/**
 * Describes the message CEntityMsg.
 * Use `create(CEntityMsgSchema)` to create a new message.
 */
export const CEntityMsgSchema: GenMessage<CEntityMsg> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 7);

/**
 * @generated from message CMsg_CVars
 */
export type CMsg_CVars = Message<"CMsg_CVars"> & {
  /**
   * @generated from field: repeated CMsg_CVars.CVar cvars = 1;
   */
  cvars: CMsg_CVars_CVar[];
};

/**
 * Describes the message CMsg_CVars.
 * Use `create(CMsg_CVarsSchema)` to create a new message.
 */
export const CMsg_CVarsSchema: GenMessage<CMsg_CVars> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 8);

/**
 * @generated from message CMsg_CVars.CVar
 */
export type CMsg_CVars_CVar = Message<"CMsg_CVars.CVar"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CMsg_CVars.CVar.
 * Use `create(CMsg_CVars_CVarSchema)` to create a new message.
 */
export const CMsg_CVars_CVarSchema: GenMessage<CMsg_CVars_CVar> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 8, 0);

/**
 * @generated from message CNETMsg_NOP
 */
export type CNETMsg_NOP = Message<"CNETMsg_NOP"> & {
};

/**
 * Describes the message CNETMsg_NOP.
 * Use `create(CNETMsg_NOPSchema)` to create a new message.
 */
export const CNETMsg_NOPSchema: GenMessage<CNETMsg_NOP> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 9);

/**
 * @generated from message CNETMsg_SplitScreenUser
 */
export type CNETMsg_SplitScreenUser = Message<"CNETMsg_SplitScreenUser"> & {
  /**
   * @generated from field: optional int32 slot = 1;
   */
  slot: number;
};

/**
 * Describes the message CNETMsg_SplitScreenUser.
 * Use `create(CNETMsg_SplitScreenUserSchema)` to create a new message.
 */
export const CNETMsg_SplitScreenUserSchema: GenMessage<CNETMsg_SplitScreenUser> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 10);

/**
 * @generated from message CNETMsg_Tick
 */
export type CNETMsg_Tick = Message<"CNETMsg_Tick"> & {
  /**
   * @generated from field: optional uint32 tick = 1;
   */
  tick: number;

  /**
   * @generated from field: optional uint32 host_computationtime = 4;
   */
  hostComputationtime: number;

  /**
   * @generated from field: optional uint32 host_computationtime_std_deviation = 5;
   */
  hostComputationtimeStdDeviation: number;

  /**
   * @generated from field: optional uint32 legacy_host_loss = 7;
   */
  legacyHostLoss: number;

  /**
   * @generated from field: optional uint32 host_unfiltered_frametime = 8;
   */
  hostUnfilteredFrametime: number;

  /**
   * @generated from field: optional uint32 hltv_replay_flags = 9;
   */
  hltvReplayFlags: number;

  /**
   * @generated from field: optional uint32 expected_long_tick = 10;
   */
  expectedLongTick: number;

  /**
   * @generated from field: optional string expected_long_tick_reason = 11;
   */
  expectedLongTickReason: string;

  /**
   * @generated from field: optional uint32 host_frame_dropped_pct_x10 = 12;
   */
  hostFrameDroppedPctX10: number;

  /**
   * @generated from field: optional uint32 host_frame_irregular_arrival_pct_x10 = 13;
   */
  hostFrameIrregularArrivalPctX10: number;
};

/**
 * Describes the message CNETMsg_Tick.
 * Use `create(CNETMsg_TickSchema)` to create a new message.
 */
export const CNETMsg_TickSchema: GenMessage<CNETMsg_Tick> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 11);

/**
 * @generated from message CNETMsg_StringCmd
 */
export type CNETMsg_StringCmd = Message<"CNETMsg_StringCmd"> & {
  /**
   * @generated from field: optional string command = 1;
   */
  command: string;

  /**
   * @generated from field: optional uint32 prediction_sync = 2;
   */
  predictionSync: number;
};

/**
 * Describes the message CNETMsg_StringCmd.
 * Use `create(CNETMsg_StringCmdSchema)` to create a new message.
 */
export const CNETMsg_StringCmdSchema: GenMessage<CNETMsg_StringCmd> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 12);

/**
 * @generated from message CNETMsg_SetConVar
 */
export type CNETMsg_SetConVar = Message<"CNETMsg_SetConVar"> & {
  /**
   * @generated from field: optional CMsg_CVars convars = 1;
   */
  convars?: CMsg_CVars;
};

/**
 * Describes the message CNETMsg_SetConVar.
 * Use `create(CNETMsg_SetConVarSchema)` to create a new message.
 */
export const CNETMsg_SetConVarSchema: GenMessage<CNETMsg_SetConVar> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 13);

/**
 * @generated from message CNETMsg_SignonState
 */
export type CNETMsg_SignonState = Message<"CNETMsg_SignonState"> & {
  /**
   * @generated from field: optional SignonState_t signon_state = 1 [default = SIGNONSTATE_NONE];
   */
  signonState: SignonState_t;

  /**
   * @generated from field: optional uint32 spawn_count = 2;
   */
  spawnCount: number;

  /**
   * @generated from field: optional uint32 num_server_players = 3;
   */
  numServerPlayers: number;

  /**
   * @generated from field: repeated string players_networkids = 4;
   */
  playersNetworkids: string[];

  /**
   * @generated from field: optional string map_name = 5;
   */
  mapName: string;

  /**
   * @generated from field: optional string addons = 6;
   */
  addons: string;
};

/**
 * Describes the message CNETMsg_SignonState.
 * Use `create(CNETMsg_SignonStateSchema)` to create a new message.
 */
export const CNETMsg_SignonStateSchema: GenMessage<CNETMsg_SignonState> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 14);

/**
 * @generated from message CSVCMsg_GameEvent
 */
export type CSVCMsg_GameEvent = Message<"CSVCMsg_GameEvent"> & {
  /**
   * @generated from field: optional string event_name = 1;
   */
  eventName: string;

  /**
   * @generated from field: optional int32 eventid = 2;
   */
  eventid: number;

  /**
   * @generated from field: repeated CSVCMsg_GameEvent.key_t keys = 3;
   */
  keys: CSVCMsg_GameEvent_key_t[];
};

/**
 * Describes the message CSVCMsg_GameEvent.
 * Use `create(CSVCMsg_GameEventSchema)` to create a new message.
 */
export const CSVCMsg_GameEventSchema: GenMessage<CSVCMsg_GameEvent> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 15);

/**
 * @generated from message CSVCMsg_GameEvent.key_t
 */
export type CSVCMsg_GameEvent_key_t = Message<"CSVCMsg_GameEvent.key_t"> & {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type: number;

  /**
   * @generated from field: optional string val_string = 2;
   */
  valString: string;

  /**
   * @generated from field: optional float val_float = 3;
   */
  valFloat: number;

  /**
   * @generated from field: optional int32 val_long = 4;
   */
  valLong: number;

  /**
   * @generated from field: optional int32 val_short = 5;
   */
  valShort: number;

  /**
   * @generated from field: optional int32 val_byte = 6;
   */
  valByte: number;

  /**
   * @generated from field: optional bool val_bool = 7;
   */
  valBool: boolean;

  /**
   * @generated from field: optional uint64 val_uint64 = 8;
   */
  valUint64: bigint;
};

/**
 * Describes the message CSVCMsg_GameEvent.key_t.
 * Use `create(CSVCMsg_GameEvent_key_tSchema)` to create a new message.
 */
export const CSVCMsg_GameEvent_key_tSchema: GenMessage<CSVCMsg_GameEvent_key_t> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 15, 0);

/**
 * @generated from message CSVCMsgList_GameEvents
 */
export type CSVCMsgList_GameEvents = Message<"CSVCMsgList_GameEvents"> & {
  /**
   * @generated from field: repeated CSVCMsgList_GameEvents.event_t events = 1;
   */
  events: CSVCMsgList_GameEvents_event_t[];
};

/**
 * Describes the message CSVCMsgList_GameEvents.
 * Use `create(CSVCMsgList_GameEventsSchema)` to create a new message.
 */
export const CSVCMsgList_GameEventsSchema: GenMessage<CSVCMsgList_GameEvents> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 16);

/**
 * @generated from message CSVCMsgList_GameEvents.event_t
 */
export type CSVCMsgList_GameEvents_event_t = Message<"CSVCMsgList_GameEvents.event_t"> & {
  /**
   * @generated from field: optional int32 tick = 1;
   */
  tick: number;

  /**
   * @generated from field: optional CSVCMsg_GameEvent event = 2;
   */
  event?: CSVCMsg_GameEvent;
};

/**
 * Describes the message CSVCMsgList_GameEvents.event_t.
 * Use `create(CSVCMsgList_GameEvents_event_tSchema)` to create a new message.
 */
export const CSVCMsgList_GameEvents_event_tSchema: GenMessage<CSVCMsgList_GameEvents_event_t> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 16, 0);

/**
 * @generated from message CNETMsg_SpawnGroup_Load
 */
export type CNETMsg_SpawnGroup_Load = Message<"CNETMsg_SpawnGroup_Load"> & {
  /**
   * @generated from field: optional string worldname = 1;
   */
  worldname: string;

  /**
   * @generated from field: optional string entitylumpname = 2;
   */
  entitylumpname: string;

  /**
   * @generated from field: optional string entityfiltername = 3;
   */
  entityfiltername: string;

  /**
   * @generated from field: optional uint32 spawngrouphandle = 4;
   */
  spawngrouphandle: number;

  /**
   * @generated from field: optional uint32 spawngroupownerhandle = 5;
   */
  spawngroupownerhandle: number;

  /**
   * @generated from field: optional CMsgVector world_offset_pos = 6;
   */
  worldOffsetPos?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle world_offset_angle = 7;
   */
  worldOffsetAngle?: CMsgQAngle;

  /**
   * @generated from field: optional bytes spawngroupmanifest = 8;
   */
  spawngroupmanifest: Uint8Array;

  /**
   * @generated from field: optional uint32 flags = 9;
   */
  flags: number;

  /**
   * @generated from field: optional int32 tickcount = 10;
   */
  tickcount: number;

  /**
   * @generated from field: optional bool manifestincomplete = 11;
   */
  manifestincomplete: boolean;

  /**
   * @generated from field: optional string localnamefixup = 12;
   */
  localnamefixup: string;

  /**
   * @generated from field: optional string parentnamefixup = 13;
   */
  parentnamefixup: string;

  /**
   * @generated from field: optional int32 manifestloadpriority = 14;
   */
  manifestloadpriority: number;

  /**
   * @generated from field: optional uint32 worldgroupid = 15;
   */
  worldgroupid: number;

  /**
   * @generated from field: optional uint32 creationsequence = 16;
   */
  creationsequence: number;

  /**
   * @generated from field: optional string savegamefilename = 17;
   */
  savegamefilename: string;

  /**
   * @generated from field: optional uint32 spawngroupparenthandle = 18;
   */
  spawngroupparenthandle: number;

  /**
   * @generated from field: optional bool leveltransition = 19;
   */
  leveltransition: boolean;

  /**
   * @generated from field: optional string worldgroupname = 20;
   */
  worldgroupname: string;
};

/**
 * Describes the message CNETMsg_SpawnGroup_Load.
 * Use `create(CNETMsg_SpawnGroup_LoadSchema)` to create a new message.
 */
export const CNETMsg_SpawnGroup_LoadSchema: GenMessage<CNETMsg_SpawnGroup_Load> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 17);

/**
 * @generated from message CNETMsg_SpawnGroup_ManifestUpdate
 */
export type CNETMsg_SpawnGroup_ManifestUpdate = Message<"CNETMsg_SpawnGroup_ManifestUpdate"> & {
  /**
   * @generated from field: optional uint32 spawngrouphandle = 1;
   */
  spawngrouphandle: number;

  /**
   * @generated from field: optional bytes spawngroupmanifest = 2;
   */
  spawngroupmanifest: Uint8Array;

  /**
   * @generated from field: optional bool manifestincomplete = 3;
   */
  manifestincomplete: boolean;
};

/**
 * Describes the message CNETMsg_SpawnGroup_ManifestUpdate.
 * Use `create(CNETMsg_SpawnGroup_ManifestUpdateSchema)` to create a new message.
 */
export const CNETMsg_SpawnGroup_ManifestUpdateSchema: GenMessage<CNETMsg_SpawnGroup_ManifestUpdate> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 18);

/**
 * @generated from message CNETMsg_SpawnGroup_SetCreationTick
 */
export type CNETMsg_SpawnGroup_SetCreationTick = Message<"CNETMsg_SpawnGroup_SetCreationTick"> & {
  /**
   * @generated from field: optional uint32 spawngrouphandle = 1;
   */
  spawngrouphandle: number;

  /**
   * @generated from field: optional int32 tickcount = 2;
   */
  tickcount: number;

  /**
   * @generated from field: optional uint32 creationsequence = 3;
   */
  creationsequence: number;
};

/**
 * Describes the message CNETMsg_SpawnGroup_SetCreationTick.
 * Use `create(CNETMsg_SpawnGroup_SetCreationTickSchema)` to create a new message.
 */
export const CNETMsg_SpawnGroup_SetCreationTickSchema: GenMessage<CNETMsg_SpawnGroup_SetCreationTick> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 19);

/**
 * @generated from message CNETMsg_SpawnGroup_Unload
 */
export type CNETMsg_SpawnGroup_Unload = Message<"CNETMsg_SpawnGroup_Unload"> & {
  /**
   * @generated from field: optional uint32 spawngrouphandle = 1;
   */
  spawngrouphandle: number;

  /**
   * @generated from field: optional uint32 flags = 2;
   */
  flags: number;

  /**
   * @generated from field: optional int32 tickcount = 3;
   */
  tickcount: number;
};

/**
 * Describes the message CNETMsg_SpawnGroup_Unload.
 * Use `create(CNETMsg_SpawnGroup_UnloadSchema)` to create a new message.
 */
export const CNETMsg_SpawnGroup_UnloadSchema: GenMessage<CNETMsg_SpawnGroup_Unload> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 20);

/**
 * @generated from message CNETMsg_SpawnGroup_LoadCompleted
 */
export type CNETMsg_SpawnGroup_LoadCompleted = Message<"CNETMsg_SpawnGroup_LoadCompleted"> & {
  /**
   * @generated from field: optional uint32 spawngrouphandle = 1;
   */
  spawngrouphandle: number;
};

/**
 * Describes the message CNETMsg_SpawnGroup_LoadCompleted.
 * Use `create(CNETMsg_SpawnGroup_LoadCompletedSchema)` to create a new message.
 */
export const CNETMsg_SpawnGroup_LoadCompletedSchema: GenMessage<CNETMsg_SpawnGroup_LoadCompleted> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 21);

/**
 * @generated from message CSVCMsg_GameSessionConfiguration
 */
export type CSVCMsg_GameSessionConfiguration = Message<"CSVCMsg_GameSessionConfiguration"> & {
  /**
   * @generated from field: optional bool is_multiplayer = 1;
   */
  isMultiplayer: boolean;

  /**
   * @generated from field: optional bool is_loadsavegame = 2;
   */
  isLoadsavegame: boolean;

  /**
   * @generated from field: optional bool is_background_map = 3;
   */
  isBackgroundMap: boolean;

  /**
   * @generated from field: optional bool is_headless = 4;
   */
  isHeadless: boolean;

  /**
   * @generated from field: optional uint32 min_client_limit = 5;
   */
  minClientLimit: number;

  /**
   * @generated from field: optional uint32 max_client_limit = 6;
   */
  maxClientLimit: number;

  /**
   * @generated from field: optional uint32 max_clients = 7;
   */
  maxClients: number;

  /**
   * @generated from field: optional fixed32 tick_interval = 8;
   */
  tickInterval: number;

  /**
   * @generated from field: optional string hostname = 9;
   */
  hostname: string;

  /**
   * @generated from field: optional string savegamename = 10;
   */
  savegamename: string;

  /**
   * @generated from field: optional string s1_mapname = 11;
   */
  s1Mapname: string;

  /**
   * @generated from field: optional string gamemode = 12;
   */
  gamemode: string;

  /**
   * @generated from field: optional string server_ip_address = 13;
   */
  serverIpAddress: string;

  /**
   * @generated from field: optional bytes data = 14;
   */
  data: Uint8Array;

  /**
   * @generated from field: optional bool is_localonly = 15;
   */
  isLocalonly: boolean;

  /**
   * @generated from field: optional bool no_steam_server = 19;
   */
  noSteamServer: boolean;

  /**
   * @generated from field: optional bool is_transition = 16;
   */
  isTransition: boolean;

  /**
   * @generated from field: optional string previouslevel = 17;
   */
  previouslevel: string;

  /**
   * @generated from field: optional string landmarkname = 18;
   */
  landmarkname: string;
};

/**
 * Describes the message CSVCMsg_GameSessionConfiguration.
 * Use `create(CSVCMsg_GameSessionConfigurationSchema)` to create a new message.
 */
export const CSVCMsg_GameSessionConfigurationSchema: GenMessage<CSVCMsg_GameSessionConfiguration> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 22);

/**
 * @generated from message CNETMsg_DebugOverlay
 */
export type CNETMsg_DebugOverlay = Message<"CNETMsg_DebugOverlay"> & {
  /**
   * @generated from field: optional int32 etype = 1;
   */
  etype: number;

  /**
   * @generated from field: repeated CMsgVector vectors = 2;
   */
  vectors: CMsgVector[];

  /**
   * @generated from field: repeated CMsgRGBA colors = 3;
   */
  colors: CMsgRGBA[];

  /**
   * @generated from field: repeated float dimensions = 4;
   */
  dimensions: number[];

  /**
   * @generated from field: repeated float times = 5;
   */
  times: number[];

  /**
   * @generated from field: repeated bool bools = 6;
   */
  bools: boolean[];

  /**
   * @generated from field: repeated uint64 uint64s = 7;
   */
  uint64s: bigint[];

  /**
   * @generated from field: repeated string strings = 8;
   */
  strings: string[];
};

/**
 * Describes the message CNETMsg_DebugOverlay.
 * Use `create(CNETMsg_DebugOverlaySchema)` to create a new message.
 */
export const CNETMsg_DebugOverlaySchema: GenMessage<CNETMsg_DebugOverlay> = /*@__PURE__*/
  messageDesc(file_networkbasetypes, 23);

/**
 * @generated from enum SignonState_t
 */
export enum SignonState_t {
  /**
   * @generated from enum value: SIGNONSTATE_NONE = 0;
   */
  SIGNONSTATE_NONE = 0,

  /**
   * @generated from enum value: SIGNONSTATE_CHALLENGE = 1;
   */
  SIGNONSTATE_CHALLENGE = 1,

  /**
   * @generated from enum value: SIGNONSTATE_CONNECTED = 2;
   */
  SIGNONSTATE_CONNECTED = 2,

  /**
   * @generated from enum value: SIGNONSTATE_NEW = 3;
   */
  SIGNONSTATE_NEW = 3,

  /**
   * @generated from enum value: SIGNONSTATE_PRESPAWN = 4;
   */
  SIGNONSTATE_PRESPAWN = 4,

  /**
   * @generated from enum value: SIGNONSTATE_SPAWN = 5;
   */
  SIGNONSTATE_SPAWN = 5,

  /**
   * @generated from enum value: SIGNONSTATE_FULL = 6;
   */
  SIGNONSTATE_FULL = 6,

  /**
   * @generated from enum value: SIGNONSTATE_CHANGELEVEL = 7;
   */
  SIGNONSTATE_CHANGELEVEL = 7,
}

/**
 * Describes the enum SignonState_t.
 */
export const SignonState_tSchema: GenEnum<SignonState_t> = /*@__PURE__*/
  enumDesc(file_networkbasetypes, 0);

/**
 * @generated from enum NET_Messages
 */
export enum NET_Messages {
  /**
   * @generated from enum value: net_NOP = 0;
   */
  net_NOP = 0,

  /**
   * @generated from enum value: net_Disconnect_Legacy = 1;
   */
  net_Disconnect_Legacy = 1,

  /**
   * @generated from enum value: net_SplitScreenUser = 3;
   */
  net_SplitScreenUser = 3,

  /**
   * @generated from enum value: net_Tick = 4;
   */
  net_Tick = 4,

  /**
   * @generated from enum value: net_StringCmd = 5;
   */
  net_StringCmd = 5,

  /**
   * @generated from enum value: net_SetConVar = 6;
   */
  net_SetConVar = 6,

  /**
   * @generated from enum value: net_SignonState = 7;
   */
  net_SignonState = 7,

  /**
   * @generated from enum value: net_SpawnGroup_Load = 8;
   */
  net_SpawnGroup_Load = 8,

  /**
   * @generated from enum value: net_SpawnGroup_ManifestUpdate = 9;
   */
  net_SpawnGroup_ManifestUpdate = 9,

  /**
   * @generated from enum value: net_SpawnGroup_SetCreationTick = 11;
   */
  net_SpawnGroup_SetCreationTick = 11,

  /**
   * @generated from enum value: net_SpawnGroup_Unload = 12;
   */
  net_SpawnGroup_Unload = 12,

  /**
   * @generated from enum value: net_SpawnGroup_LoadCompleted = 13;
   */
  net_SpawnGroup_LoadCompleted = 13,

  /**
   * @generated from enum value: net_DebugOverlay = 15;
   */
  net_DebugOverlay = 15,
}

/**
 * Describes the enum NET_Messages.
 */
export const NET_MessagesSchema: GenEnum<NET_Messages> = /*@__PURE__*/
  enumDesc(file_networkbasetypes, 1);

/**
 * @generated from enum SpawnGroupFlags_t
 */
export enum SpawnGroupFlags_t {
  /**
   * @generated from enum value: SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE = 1;
   */
  SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE = 1,

  /**
   * @generated from enum value: SPAWN_GROUP_DONT_SPAWN_ENTITIES = 2;
   */
  SPAWN_GROUP_DONT_SPAWN_ENTITIES = 2,

  /**
   * @generated from enum value: SPAWN_GROUP_SYNCHRONOUS_SPAWN = 4;
   */
  SPAWN_GROUP_SYNCHRONOUS_SPAWN = 4,

  /**
   * @generated from enum value: SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP = 8;
   */
  SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP = 8,

  /**
   * @generated from enum value: SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES = 16;
   */
  SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES = 16,

  /**
   * @generated from enum value: SPAWN_GROUP_BLOCK_UNTIL_LOADED = 64;
   */
  SPAWN_GROUP_BLOCK_UNTIL_LOADED = 64,

  /**
   * @generated from enum value: SPAWN_GROUP_LOAD_STREAMING_DATA = 128;
   */
  SPAWN_GROUP_LOAD_STREAMING_DATA = 128,

  /**
   * @generated from enum value: SPAWN_GROUP_CREATE_NEW_SCENE_WORLD = 256;
   */
  SPAWN_GROUP_CREATE_NEW_SCENE_WORLD = 256,
}

/**
 * Describes the enum SpawnGroupFlags_t.
 */
export const SpawnGroupFlags_tSchema: GenEnum<SpawnGroupFlags_t> = /*@__PURE__*/
  enumDesc(file_networkbasetypes, 2);


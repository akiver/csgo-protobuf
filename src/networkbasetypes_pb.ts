// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file networkbasetypes.proto (syntax proto2)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";
import { ENetworkDisconnectionReason } from "./network_connection_pb.js";

/**
 * @generated from enum SignonState_t
 */
export enum SignonState_t {
  /**
   * @generated from enum value: SIGNONSTATE_NONE = 0;
   */
  SIGNONSTATE_NONE = 0,

  /**
   * @generated from enum value: SIGNONSTATE_CHALLENGE = 1;
   */
  SIGNONSTATE_CHALLENGE = 1,

  /**
   * @generated from enum value: SIGNONSTATE_CONNECTED = 2;
   */
  SIGNONSTATE_CONNECTED = 2,

  /**
   * @generated from enum value: SIGNONSTATE_NEW = 3;
   */
  SIGNONSTATE_NEW = 3,

  /**
   * @generated from enum value: SIGNONSTATE_PRESPAWN = 4;
   */
  SIGNONSTATE_PRESPAWN = 4,

  /**
   * @generated from enum value: SIGNONSTATE_SPAWN = 5;
   */
  SIGNONSTATE_SPAWN = 5,

  /**
   * @generated from enum value: SIGNONSTATE_FULL = 6;
   */
  SIGNONSTATE_FULL = 6,

  /**
   * @generated from enum value: SIGNONSTATE_CHANGELEVEL = 7;
   */
  SIGNONSTATE_CHANGELEVEL = 7,
}
// Retrieve enum metadata with: proto2.getEnumType(SignonState_t)
proto2.util.setEnumType(SignonState_t, "SignonState_t", [
  { no: 0, name: "SIGNONSTATE_NONE" },
  { no: 1, name: "SIGNONSTATE_CHALLENGE" },
  { no: 2, name: "SIGNONSTATE_CONNECTED" },
  { no: 3, name: "SIGNONSTATE_NEW" },
  { no: 4, name: "SIGNONSTATE_PRESPAWN" },
  { no: 5, name: "SIGNONSTATE_SPAWN" },
  { no: 6, name: "SIGNONSTATE_FULL" },
  { no: 7, name: "SIGNONSTATE_CHANGELEVEL" },
]);

/**
 * @generated from enum NET_Messages
 */
export enum NET_Messages {
  /**
   * @generated from enum value: net_NOP = 0;
   */
  net_NOP = 0,

  /**
   * @generated from enum value: net_Disconnect = 1;
   */
  net_Disconnect = 1,

  /**
   * @generated from enum value: net_SplitScreenUser = 3;
   */
  net_SplitScreenUser = 3,

  /**
   * @generated from enum value: net_Tick = 4;
   */
  net_Tick = 4,

  /**
   * @generated from enum value: net_StringCmd = 5;
   */
  net_StringCmd = 5,

  /**
   * @generated from enum value: net_SetConVar = 6;
   */
  net_SetConVar = 6,

  /**
   * @generated from enum value: net_SignonState = 7;
   */
  net_SignonState = 7,

  /**
   * @generated from enum value: net_SpawnGroup_Load = 8;
   */
  net_SpawnGroup_Load = 8,

  /**
   * @generated from enum value: net_SpawnGroup_ManifestUpdate = 9;
   */
  net_SpawnGroup_ManifestUpdate = 9,

  /**
   * @generated from enum value: net_SpawnGroup_SetCreationTick = 11;
   */
  net_SpawnGroup_SetCreationTick = 11,

  /**
   * @generated from enum value: net_SpawnGroup_Unload = 12;
   */
  net_SpawnGroup_Unload = 12,

  /**
   * @generated from enum value: net_SpawnGroup_LoadCompleted = 13;
   */
  net_SpawnGroup_LoadCompleted = 13,

  /**
   * @generated from enum value: net_DebugOverlay = 15;
   */
  net_DebugOverlay = 15,
}
// Retrieve enum metadata with: proto2.getEnumType(NET_Messages)
proto2.util.setEnumType(NET_Messages, "NET_Messages", [
  { no: 0, name: "net_NOP" },
  { no: 1, name: "net_Disconnect" },
  { no: 3, name: "net_SplitScreenUser" },
  { no: 4, name: "net_Tick" },
  { no: 5, name: "net_StringCmd" },
  { no: 6, name: "net_SetConVar" },
  { no: 7, name: "net_SignonState" },
  { no: 8, name: "net_SpawnGroup_Load" },
  { no: 9, name: "net_SpawnGroup_ManifestUpdate" },
  { no: 11, name: "net_SpawnGroup_SetCreationTick" },
  { no: 12, name: "net_SpawnGroup_Unload" },
  { no: 13, name: "net_SpawnGroup_LoadCompleted" },
  { no: 15, name: "net_DebugOverlay" },
]);

/**
 * @generated from enum SpawnGroupFlags_t
 */
export enum SpawnGroupFlags_t {
  /**
   * @generated from enum value: SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE = 1;
   */
  SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE = 1,

  /**
   * @generated from enum value: SPAWN_GROUP_DONT_SPAWN_ENTITIES = 2;
   */
  SPAWN_GROUP_DONT_SPAWN_ENTITIES = 2,

  /**
   * @generated from enum value: SPAWN_GROUP_SYNCHRONOUS_SPAWN = 4;
   */
  SPAWN_GROUP_SYNCHRONOUS_SPAWN = 4,

  /**
   * @generated from enum value: SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP = 8;
   */
  SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP = 8,

  /**
   * @generated from enum value: SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES = 16;
   */
  SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES = 16,

  /**
   * @generated from enum value: SPAWN_GROUP_BLOCK_UNTIL_LOADED = 64;
   */
  SPAWN_GROUP_BLOCK_UNTIL_LOADED = 64,

  /**
   * @generated from enum value: SPAWN_GROUP_LOAD_STREAMING_DATA = 128;
   */
  SPAWN_GROUP_LOAD_STREAMING_DATA = 128,

  /**
   * @generated from enum value: SPAWN_GROUP_CREATE_NEW_SCENE_WORLD = 256;
   */
  SPAWN_GROUP_CREATE_NEW_SCENE_WORLD = 256,
}
// Retrieve enum metadata with: proto2.getEnumType(SpawnGroupFlags_t)
proto2.util.setEnumType(SpawnGroupFlags_t, "SpawnGroupFlags_t", [
  { no: 1, name: "SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE" },
  { no: 2, name: "SPAWN_GROUP_DONT_SPAWN_ENTITIES" },
  { no: 4, name: "SPAWN_GROUP_SYNCHRONOUS_SPAWN" },
  { no: 8, name: "SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP" },
  { no: 16, name: "SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES" },
  { no: 64, name: "SPAWN_GROUP_BLOCK_UNTIL_LOADED" },
  { no: 128, name: "SPAWN_GROUP_LOAD_STREAMING_DATA" },
  { no: 256, name: "SPAWN_GROUP_CREATE_NEW_SCENE_WORLD" },
]);

/**
 * @generated from message CMsgVector
 */
export class CMsgVector extends Message<CMsgVector> {
  /**
   * @generated from field: optional float x = 1;
   */
  x?: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y?: number;

  /**
   * @generated from field: optional float z = 3;
   */
  z?: number;

  /**
   * @generated from field: optional float w = 4;
   */
  w?: number;

  constructor(data?: PartialMessage<CMsgVector>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgVector";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "x", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 2, name: "y", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "z", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "w", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgVector {
    return new CMsgVector().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgVector {
    return new CMsgVector().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgVector {
    return new CMsgVector().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgVector | PlainMessage<CMsgVector> | undefined, b: CMsgVector | PlainMessage<CMsgVector> | undefined): boolean {
    return proto2.util.equals(CMsgVector, a, b);
  }
}

/**
 * @generated from message CMsgVector2D
 */
export class CMsgVector2D extends Message<CMsgVector2D> {
  /**
   * @generated from field: optional float x = 1;
   */
  x?: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y?: number;

  constructor(data?: PartialMessage<CMsgVector2D>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgVector2D";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "x", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 2, name: "y", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgVector2D {
    return new CMsgVector2D().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgVector2D {
    return new CMsgVector2D().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgVector2D {
    return new CMsgVector2D().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgVector2D | PlainMessage<CMsgVector2D> | undefined, b: CMsgVector2D | PlainMessage<CMsgVector2D> | undefined): boolean {
    return proto2.util.equals(CMsgVector2D, a, b);
  }
}

/**
 * @generated from message CMsgQAngle
 */
export class CMsgQAngle extends Message<CMsgQAngle> {
  /**
   * @generated from field: optional float x = 1;
   */
  x?: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y?: number;

  /**
   * @generated from field: optional float z = 3;
   */
  z?: number;

  constructor(data?: PartialMessage<CMsgQAngle>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgQAngle";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "x", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 2, name: "y", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "z", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgQAngle {
    return new CMsgQAngle().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgQAngle {
    return new CMsgQAngle().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgQAngle {
    return new CMsgQAngle().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgQAngle | PlainMessage<CMsgQAngle> | undefined, b: CMsgQAngle | PlainMessage<CMsgQAngle> | undefined): boolean {
    return proto2.util.equals(CMsgQAngle, a, b);
  }
}

/**
 * @generated from message CMsgQuaternion
 */
export class CMsgQuaternion extends Message<CMsgQuaternion> {
  /**
   * @generated from field: optional float x = 1;
   */
  x?: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y?: number;

  /**
   * @generated from field: optional float z = 3;
   */
  z?: number;

  /**
   * @generated from field: optional float w = 4;
   */
  w?: number;

  constructor(data?: PartialMessage<CMsgQuaternion>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgQuaternion";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "x", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 2, name: "y", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "z", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "w", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgQuaternion {
    return new CMsgQuaternion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgQuaternion {
    return new CMsgQuaternion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgQuaternion {
    return new CMsgQuaternion().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgQuaternion | PlainMessage<CMsgQuaternion> | undefined, b: CMsgQuaternion | PlainMessage<CMsgQuaternion> | undefined): boolean {
    return proto2.util.equals(CMsgQuaternion, a, b);
  }
}

/**
 * @generated from message CMsgTransform
 */
export class CMsgTransform extends Message<CMsgTransform> {
  /**
   * @generated from field: optional CMsgVector position = 1;
   */
  position?: CMsgVector;

  /**
   * @generated from field: optional float scale = 2;
   */
  scale?: number;

  /**
   * @generated from field: optional CMsgQuaternion orientation = 3;
   */
  orientation?: CMsgQuaternion;

  constructor(data?: PartialMessage<CMsgTransform>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgTransform";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "position", kind: "message", T: CMsgVector, opt: true },
    { no: 2, name: "scale", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 3, name: "orientation", kind: "message", T: CMsgQuaternion, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgTransform {
    return new CMsgTransform().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgTransform {
    return new CMsgTransform().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgTransform {
    return new CMsgTransform().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgTransform | PlainMessage<CMsgTransform> | undefined, b: CMsgTransform | PlainMessage<CMsgTransform> | undefined): boolean {
    return proto2.util.equals(CMsgTransform, a, b);
  }
}

/**
 * @generated from message CMsgRGBA
 */
export class CMsgRGBA extends Message<CMsgRGBA> {
  /**
   * @generated from field: optional int32 r = 1;
   */
  r?: number;

  /**
   * @generated from field: optional int32 g = 2;
   */
  g?: number;

  /**
   * @generated from field: optional int32 b = 3;
   */
  b?: number;

  /**
   * @generated from field: optional int32 a = 4;
   */
  a?: number;

  constructor(data?: PartialMessage<CMsgRGBA>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgRGBA";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "r", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "g", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "b", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "a", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgRGBA {
    return new CMsgRGBA().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgRGBA {
    return new CMsgRGBA().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgRGBA {
    return new CMsgRGBA().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgRGBA | PlainMessage<CMsgRGBA> | undefined, b: CMsgRGBA | PlainMessage<CMsgRGBA> | undefined): boolean {
    return proto2.util.equals(CMsgRGBA, a, b);
  }
}

/**
 * @generated from message CMsgPlayerInfo
 */
export class CMsgPlayerInfo extends Message<CMsgPlayerInfo> {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional fixed64 xuid = 2;
   */
  xuid?: bigint;

  /**
   * @generated from field: optional int32 userid = 3;
   */
  userid?: number;

  /**
   * @generated from field: optional fixed64 steamid = 4;
   */
  steamid?: bigint;

  /**
   * @generated from field: optional bool fakeplayer = 5;
   */
  fakeplayer?: boolean;

  /**
   * @generated from field: optional bool ishltv = 6;
   */
  ishltv?: boolean;

  constructor(data?: PartialMessage<CMsgPlayerInfo>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsgPlayerInfo";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "xuid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 3, name: "userid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 4, name: "steamid", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 5, name: "fakeplayer", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "ishltv", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsgPlayerInfo {
    return new CMsgPlayerInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsgPlayerInfo {
    return new CMsgPlayerInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsgPlayerInfo {
    return new CMsgPlayerInfo().fromJsonString(jsonString, options);
  }

  static equals(a: CMsgPlayerInfo | PlainMessage<CMsgPlayerInfo> | undefined, b: CMsgPlayerInfo | PlainMessage<CMsgPlayerInfo> | undefined): boolean {
    return proto2.util.equals(CMsgPlayerInfo, a, b);
  }
}

/**
 * @generated from message CEntityMsg
 */
export class CEntityMsg extends Message<CEntityMsg> {
  /**
   * @generated from field: optional uint32 target_entity = 1 [default = 16777215];
   */
  targetEntity?: number;

  constructor(data?: PartialMessage<CEntityMsg>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CEntityMsg";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "target_entity", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true, default: 16777215 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CEntityMsg {
    return new CEntityMsg().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CEntityMsg {
    return new CEntityMsg().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CEntityMsg {
    return new CEntityMsg().fromJsonString(jsonString, options);
  }

  static equals(a: CEntityMsg | PlainMessage<CEntityMsg> | undefined, b: CEntityMsg | PlainMessage<CEntityMsg> | undefined): boolean {
    return proto2.util.equals(CEntityMsg, a, b);
  }
}

/**
 * @generated from message CMsg_CVars
 */
export class CMsg_CVars extends Message<CMsg_CVars> {
  /**
   * @generated from field: repeated CMsg_CVars.CVar cvars = 1;
   */
  cvars: CMsg_CVars_CVar[] = [];

  constructor(data?: PartialMessage<CMsg_CVars>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsg_CVars";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "cvars", kind: "message", T: CMsg_CVars_CVar, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsg_CVars {
    return new CMsg_CVars().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsg_CVars {
    return new CMsg_CVars().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsg_CVars {
    return new CMsg_CVars().fromJsonString(jsonString, options);
  }

  static equals(a: CMsg_CVars | PlainMessage<CMsg_CVars> | undefined, b: CMsg_CVars | PlainMessage<CMsg_CVars> | undefined): boolean {
    return proto2.util.equals(CMsg_CVars, a, b);
  }
}

/**
 * @generated from message CMsg_CVars.CVar
 */
export class CMsg_CVars_CVar extends Message<CMsg_CVars_CVar> {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value?: string;

  constructor(data?: PartialMessage<CMsg_CVars_CVar>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CMsg_CVars.CVar";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CMsg_CVars_CVar {
    return new CMsg_CVars_CVar().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CMsg_CVars_CVar {
    return new CMsg_CVars_CVar().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CMsg_CVars_CVar {
    return new CMsg_CVars_CVar().fromJsonString(jsonString, options);
  }

  static equals(a: CMsg_CVars_CVar | PlainMessage<CMsg_CVars_CVar> | undefined, b: CMsg_CVars_CVar | PlainMessage<CMsg_CVars_CVar> | undefined): boolean {
    return proto2.util.equals(CMsg_CVars_CVar, a, b);
  }
}

/**
 * @generated from message CNETMsg_NOP
 */
export class CNETMsg_NOP extends Message<CNETMsg_NOP> {
  constructor(data?: PartialMessage<CNETMsg_NOP>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_NOP";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_NOP {
    return new CNETMsg_NOP().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_NOP {
    return new CNETMsg_NOP().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_NOP {
    return new CNETMsg_NOP().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_NOP | PlainMessage<CNETMsg_NOP> | undefined, b: CNETMsg_NOP | PlainMessage<CNETMsg_NOP> | undefined): boolean {
    return proto2.util.equals(CNETMsg_NOP, a, b);
  }
}

/**
 * @generated from message CNETMsg_SplitScreenUser
 */
export class CNETMsg_SplitScreenUser extends Message<CNETMsg_SplitScreenUser> {
  /**
   * @generated from field: optional int32 slot = 1;
   */
  slot?: number;

  constructor(data?: PartialMessage<CNETMsg_SplitScreenUser>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_SplitScreenUser";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "slot", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SplitScreenUser {
    return new CNETMsg_SplitScreenUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SplitScreenUser {
    return new CNETMsg_SplitScreenUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SplitScreenUser {
    return new CNETMsg_SplitScreenUser().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SplitScreenUser | PlainMessage<CNETMsg_SplitScreenUser> | undefined, b: CNETMsg_SplitScreenUser | PlainMessage<CNETMsg_SplitScreenUser> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SplitScreenUser, a, b);
  }
}

/**
 * @generated from message CNETMsg_Disconnect
 */
export class CNETMsg_Disconnect extends Message<CNETMsg_Disconnect> {
  /**
   * @generated from field: optional ENetworkDisconnectionReason reason = 2 [default = NETWORK_DISCONNECT_INVALID];
   */
  reason?: ENetworkDisconnectionReason;

  constructor(data?: PartialMessage<CNETMsg_Disconnect>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_Disconnect";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 2, name: "reason", kind: "enum", T: proto2.getEnumType(ENetworkDisconnectionReason), opt: true, default: ENetworkDisconnectionReason.NETWORK_DISCONNECT_INVALID },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_Disconnect {
    return new CNETMsg_Disconnect().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_Disconnect {
    return new CNETMsg_Disconnect().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_Disconnect {
    return new CNETMsg_Disconnect().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_Disconnect | PlainMessage<CNETMsg_Disconnect> | undefined, b: CNETMsg_Disconnect | PlainMessage<CNETMsg_Disconnect> | undefined): boolean {
    return proto2.util.equals(CNETMsg_Disconnect, a, b);
  }
}

/**
 * @generated from message CNETMsg_Tick
 */
export class CNETMsg_Tick extends Message<CNETMsg_Tick> {
  /**
   * @generated from field: optional uint32 tick = 1;
   */
  tick?: number;

  /**
   * @generated from field: optional uint32 host_frametime = 2;
   */
  hostFrametime?: number;

  /**
   * @generated from field: optional uint32 host_frametime_std_deviation = 3;
   */
  hostFrametimeStdDeviation?: number;

  /**
   * @generated from field: optional uint32 host_computationtime = 4;
   */
  hostComputationtime?: number;

  /**
   * @generated from field: optional uint32 host_computationtime_std_deviation = 5;
   */
  hostComputationtimeStdDeviation?: number;

  /**
   * @generated from field: optional uint32 host_framestarttime_std_deviation = 6;
   */
  hostFramestarttimeStdDeviation?: number;

  /**
   * @generated from field: optional uint32 host_loss = 7;
   */
  hostLoss?: number;

  /**
   * @generated from field: optional uint32 host_unfiltered_frametime = 8;
   */
  hostUnfilteredFrametime?: number;

  /**
   * @generated from field: optional uint32 hltv_replay_flags = 9;
   */
  hltvReplayFlags?: number;

  constructor(data?: PartialMessage<CNETMsg_Tick>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_Tick";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "tick", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "host_frametime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "host_frametime_std_deviation", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "host_computationtime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "host_computationtime_std_deviation", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "host_framestarttime_std_deviation", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "host_loss", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "host_unfiltered_frametime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "hltv_replay_flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_Tick {
    return new CNETMsg_Tick().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_Tick {
    return new CNETMsg_Tick().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_Tick {
    return new CNETMsg_Tick().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_Tick | PlainMessage<CNETMsg_Tick> | undefined, b: CNETMsg_Tick | PlainMessage<CNETMsg_Tick> | undefined): boolean {
    return proto2.util.equals(CNETMsg_Tick, a, b);
  }
}

/**
 * @generated from message CNETMsg_StringCmd
 */
export class CNETMsg_StringCmd extends Message<CNETMsg_StringCmd> {
  /**
   * @generated from field: optional string command = 1;
   */
  command?: string;

  /**
   * @generated from field: optional uint32 prediction_sync = 2;
   */
  predictionSync?: number;

  constructor(data?: PartialMessage<CNETMsg_StringCmd>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_StringCmd";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "command", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "prediction_sync", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_StringCmd {
    return new CNETMsg_StringCmd().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_StringCmd {
    return new CNETMsg_StringCmd().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_StringCmd {
    return new CNETMsg_StringCmd().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_StringCmd | PlainMessage<CNETMsg_StringCmd> | undefined, b: CNETMsg_StringCmd | PlainMessage<CNETMsg_StringCmd> | undefined): boolean {
    return proto2.util.equals(CNETMsg_StringCmd, a, b);
  }
}

/**
 * @generated from message CNETMsg_SetConVar
 */
export class CNETMsg_SetConVar extends Message<CNETMsg_SetConVar> {
  /**
   * @generated from field: optional CMsg_CVars convars = 1;
   */
  convars?: CMsg_CVars;

  constructor(data?: PartialMessage<CNETMsg_SetConVar>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_SetConVar";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "convars", kind: "message", T: CMsg_CVars, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SetConVar {
    return new CNETMsg_SetConVar().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SetConVar {
    return new CNETMsg_SetConVar().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SetConVar {
    return new CNETMsg_SetConVar().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SetConVar | PlainMessage<CNETMsg_SetConVar> | undefined, b: CNETMsg_SetConVar | PlainMessage<CNETMsg_SetConVar> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SetConVar, a, b);
  }
}

/**
 * @generated from message CNETMsg_SignonState
 */
export class CNETMsg_SignonState extends Message<CNETMsg_SignonState> {
  /**
   * @generated from field: optional SignonState_t signon_state = 1 [default = SIGNONSTATE_NONE];
   */
  signonState?: SignonState_t;

  /**
   * @generated from field: optional uint32 spawn_count = 2;
   */
  spawnCount?: number;

  /**
   * @generated from field: optional uint32 num_server_players = 3;
   */
  numServerPlayers?: number;

  /**
   * @generated from field: repeated string players_networkids = 4;
   */
  playersNetworkids: string[] = [];

  /**
   * @generated from field: optional string map_name = 5;
   */
  mapName?: string;

  /**
   * @generated from field: optional string addons = 6;
   */
  addons?: string;

  constructor(data?: PartialMessage<CNETMsg_SignonState>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_SignonState";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "signon_state", kind: "enum", T: proto2.getEnumType(SignonState_t), opt: true, default: SignonState_t.SIGNONSTATE_NONE },
    { no: 2, name: "spawn_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "num_server_players", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "players_networkids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "map_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "addons", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SignonState {
    return new CNETMsg_SignonState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SignonState {
    return new CNETMsg_SignonState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SignonState {
    return new CNETMsg_SignonState().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SignonState | PlainMessage<CNETMsg_SignonState> | undefined, b: CNETMsg_SignonState | PlainMessage<CNETMsg_SignonState> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SignonState, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameEvent
 */
export class CSVCMsg_GameEvent extends Message<CSVCMsg_GameEvent> {
  /**
   * @generated from field: optional string event_name = 1;
   */
  eventName?: string;

  /**
   * @generated from field: optional int32 eventid = 2;
   */
  eventid?: number;

  /**
   * @generated from field: repeated CSVCMsg_GameEvent.key_t keys = 3;
   */
  keys: CSVCMsg_GameEvent_key_t[] = [];

  constructor(data?: PartialMessage<CSVCMsg_GameEvent>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_GameEvent";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "event_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "eventid", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "keys", kind: "message", T: CSVCMsg_GameEvent_key_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameEvent {
    return new CSVCMsg_GameEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameEvent {
    return new CSVCMsg_GameEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameEvent {
    return new CSVCMsg_GameEvent().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameEvent | PlainMessage<CSVCMsg_GameEvent> | undefined, b: CSVCMsg_GameEvent | PlainMessage<CSVCMsg_GameEvent> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameEvent, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameEvent.key_t
 */
export class CSVCMsg_GameEvent_key_t extends Message<CSVCMsg_GameEvent_key_t> {
  /**
   * @generated from field: optional int32 type = 1;
   */
  type?: number;

  /**
   * @generated from field: optional string val_string = 2;
   */
  valString?: string;

  /**
   * @generated from field: optional float val_float = 3;
   */
  valFloat?: number;

  /**
   * @generated from field: optional int32 val_long = 4;
   */
  valLong?: number;

  /**
   * @generated from field: optional int32 val_short = 5;
   */
  valShort?: number;

  /**
   * @generated from field: optional int32 val_byte = 6;
   */
  valByte?: number;

  /**
   * @generated from field: optional bool val_bool = 7;
   */
  valBool?: boolean;

  /**
   * @generated from field: optional uint64 val_uint64 = 8;
   */
  valUint64?: bigint;

  constructor(data?: PartialMessage<CSVCMsg_GameEvent_key_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_GameEvent.key_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "val_string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "val_float", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "val_long", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 5, name: "val_short", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "val_byte", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 7, name: "val_bool", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 8, name: "val_uint64", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameEvent_key_t {
    return new CSVCMsg_GameEvent_key_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameEvent_key_t {
    return new CSVCMsg_GameEvent_key_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameEvent_key_t {
    return new CSVCMsg_GameEvent_key_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameEvent_key_t | PlainMessage<CSVCMsg_GameEvent_key_t> | undefined, b: CSVCMsg_GameEvent_key_t | PlainMessage<CSVCMsg_GameEvent_key_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameEvent_key_t, a, b);
  }
}

/**
 * @generated from message CSVCMsgList_GameEvents
 */
export class CSVCMsgList_GameEvents extends Message<CSVCMsgList_GameEvents> {
  /**
   * @generated from field: repeated CSVCMsgList_GameEvents.event_t events = 1;
   */
  events: CSVCMsgList_GameEvents_event_t[] = [];

  constructor(data?: PartialMessage<CSVCMsgList_GameEvents>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsgList_GameEvents";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "events", kind: "message", T: CSVCMsgList_GameEvents_event_t, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsgList_GameEvents {
    return new CSVCMsgList_GameEvents().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsgList_GameEvents {
    return new CSVCMsgList_GameEvents().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsgList_GameEvents {
    return new CSVCMsgList_GameEvents().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsgList_GameEvents | PlainMessage<CSVCMsgList_GameEvents> | undefined, b: CSVCMsgList_GameEvents | PlainMessage<CSVCMsgList_GameEvents> | undefined): boolean {
    return proto2.util.equals(CSVCMsgList_GameEvents, a, b);
  }
}

/**
 * @generated from message CSVCMsgList_GameEvents.event_t
 */
export class CSVCMsgList_GameEvents_event_t extends Message<CSVCMsgList_GameEvents_event_t> {
  /**
   * @generated from field: optional int32 tick = 1;
   */
  tick?: number;

  /**
   * @generated from field: optional CSVCMsg_GameEvent event = 2;
   */
  event?: CSVCMsg_GameEvent;

  constructor(data?: PartialMessage<CSVCMsgList_GameEvents_event_t>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsgList_GameEvents.event_t";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "tick", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "event", kind: "message", T: CSVCMsg_GameEvent, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsgList_GameEvents_event_t {
    return new CSVCMsgList_GameEvents_event_t().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsgList_GameEvents_event_t {
    return new CSVCMsgList_GameEvents_event_t().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsgList_GameEvents_event_t {
    return new CSVCMsgList_GameEvents_event_t().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsgList_GameEvents_event_t | PlainMessage<CSVCMsgList_GameEvents_event_t> | undefined, b: CSVCMsgList_GameEvents_event_t | PlainMessage<CSVCMsgList_GameEvents_event_t> | undefined): boolean {
    return proto2.util.equals(CSVCMsgList_GameEvents_event_t, a, b);
  }
}

/**
 * @generated from message CNETMsg_SpawnGroup_Load
 */
export class CNETMsg_SpawnGroup_Load extends Message<CNETMsg_SpawnGroup_Load> {
  /**
   * @generated from field: optional string worldname = 1;
   */
  worldname?: string;

  /**
   * @generated from field: optional string entitylumpname = 2;
   */
  entitylumpname?: string;

  /**
   * @generated from field: optional string entityfiltername = 3;
   */
  entityfiltername?: string;

  /**
   * @generated from field: optional uint32 spawngrouphandle = 4;
   */
  spawngrouphandle?: number;

  /**
   * @generated from field: optional uint32 spawngroupownerhandle = 5;
   */
  spawngroupownerhandle?: number;

  /**
   * @generated from field: optional CMsgVector world_offset_pos = 6;
   */
  worldOffsetPos?: CMsgVector;

  /**
   * @generated from field: optional CMsgQAngle world_offset_angle = 7;
   */
  worldOffsetAngle?: CMsgQAngle;

  /**
   * @generated from field: optional bytes spawngroupmanifest = 8;
   */
  spawngroupmanifest?: Uint8Array;

  /**
   * @generated from field: optional uint32 flags = 9;
   */
  flags?: number;

  /**
   * @generated from field: optional int32 tickcount = 10;
   */
  tickcount?: number;

  /**
   * @generated from field: optional bool manifestincomplete = 11;
   */
  manifestincomplete?: boolean;

  /**
   * @generated from field: optional string localnamefixup = 12;
   */
  localnamefixup?: string;

  /**
   * @generated from field: optional string parentnamefixup = 13;
   */
  parentnamefixup?: string;

  /**
   * @generated from field: optional int32 manifestloadpriority = 14;
   */
  manifestloadpriority?: number;

  /**
   * @generated from field: optional uint32 worldgroupid = 15;
   */
  worldgroupid?: number;

  /**
   * @generated from field: optional uint32 creationsequence = 16;
   */
  creationsequence?: number;

  /**
   * @generated from field: optional string savegamefilename = 17;
   */
  savegamefilename?: string;

  /**
   * @generated from field: optional uint32 spawngroupparenthandle = 18;
   */
  spawngroupparenthandle?: number;

  /**
   * @generated from field: optional bool leveltransition = 19;
   */
  leveltransition?: boolean;

  /**
   * @generated from field: optional string worldgroupname = 20;
   */
  worldgroupname?: string;

  constructor(data?: PartialMessage<CNETMsg_SpawnGroup_Load>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_SpawnGroup_Load";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "worldname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "entitylumpname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "entityfiltername", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "spawngrouphandle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "spawngroupownerhandle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "world_offset_pos", kind: "message", T: CMsgVector, opt: true },
    { no: 7, name: "world_offset_angle", kind: "message", T: CMsgQAngle, opt: true },
    { no: 8, name: "spawngroupmanifest", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 9, name: "flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 10, name: "tickcount", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 11, name: "manifestincomplete", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 12, name: "localnamefixup", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "parentnamefixup", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 14, name: "manifestloadpriority", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 15, name: "worldgroupid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 16, name: "creationsequence", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 17, name: "savegamefilename", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 18, name: "spawngroupparenthandle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 19, name: "leveltransition", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 20, name: "worldgroupname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SpawnGroup_Load {
    return new CNETMsg_SpawnGroup_Load().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SpawnGroup_Load {
    return new CNETMsg_SpawnGroup_Load().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SpawnGroup_Load {
    return new CNETMsg_SpawnGroup_Load().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SpawnGroup_Load | PlainMessage<CNETMsg_SpawnGroup_Load> | undefined, b: CNETMsg_SpawnGroup_Load | PlainMessage<CNETMsg_SpawnGroup_Load> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SpawnGroup_Load, a, b);
  }
}

/**
 * @generated from message CNETMsg_SpawnGroup_ManifestUpdate
 */
export class CNETMsg_SpawnGroup_ManifestUpdate extends Message<CNETMsg_SpawnGroup_ManifestUpdate> {
  /**
   * @generated from field: optional uint32 spawngrouphandle = 1;
   */
  spawngrouphandle?: number;

  /**
   * @generated from field: optional bytes spawngroupmanifest = 2;
   */
  spawngroupmanifest?: Uint8Array;

  /**
   * @generated from field: optional bool manifestincomplete = 3;
   */
  manifestincomplete?: boolean;

  constructor(data?: PartialMessage<CNETMsg_SpawnGroup_ManifestUpdate>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_SpawnGroup_ManifestUpdate";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "spawngrouphandle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "spawngroupmanifest", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "manifestincomplete", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SpawnGroup_ManifestUpdate {
    return new CNETMsg_SpawnGroup_ManifestUpdate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SpawnGroup_ManifestUpdate {
    return new CNETMsg_SpawnGroup_ManifestUpdate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SpawnGroup_ManifestUpdate {
    return new CNETMsg_SpawnGroup_ManifestUpdate().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SpawnGroup_ManifestUpdate | PlainMessage<CNETMsg_SpawnGroup_ManifestUpdate> | undefined, b: CNETMsg_SpawnGroup_ManifestUpdate | PlainMessage<CNETMsg_SpawnGroup_ManifestUpdate> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SpawnGroup_ManifestUpdate, a, b);
  }
}

/**
 * @generated from message CNETMsg_SpawnGroup_SetCreationTick
 */
export class CNETMsg_SpawnGroup_SetCreationTick extends Message<CNETMsg_SpawnGroup_SetCreationTick> {
  /**
   * @generated from field: optional uint32 spawngrouphandle = 1;
   */
  spawngrouphandle?: number;

  /**
   * @generated from field: optional int32 tickcount = 2;
   */
  tickcount?: number;

  /**
   * @generated from field: optional uint32 creationsequence = 3;
   */
  creationsequence?: number;

  constructor(data?: PartialMessage<CNETMsg_SpawnGroup_SetCreationTick>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_SpawnGroup_SetCreationTick";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "spawngrouphandle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "tickcount", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 3, name: "creationsequence", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SpawnGroup_SetCreationTick {
    return new CNETMsg_SpawnGroup_SetCreationTick().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SpawnGroup_SetCreationTick {
    return new CNETMsg_SpawnGroup_SetCreationTick().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SpawnGroup_SetCreationTick {
    return new CNETMsg_SpawnGroup_SetCreationTick().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SpawnGroup_SetCreationTick | PlainMessage<CNETMsg_SpawnGroup_SetCreationTick> | undefined, b: CNETMsg_SpawnGroup_SetCreationTick | PlainMessage<CNETMsg_SpawnGroup_SetCreationTick> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SpawnGroup_SetCreationTick, a, b);
  }
}

/**
 * @generated from message CNETMsg_SpawnGroup_Unload
 */
export class CNETMsg_SpawnGroup_Unload extends Message<CNETMsg_SpawnGroup_Unload> {
  /**
   * @generated from field: optional uint32 spawngrouphandle = 1;
   */
  spawngrouphandle?: number;

  /**
   * @generated from field: optional uint32 flags = 2;
   */
  flags?: number;

  /**
   * @generated from field: optional int32 tickcount = 3;
   */
  tickcount?: number;

  constructor(data?: PartialMessage<CNETMsg_SpawnGroup_Unload>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_SpawnGroup_Unload";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "spawngrouphandle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "tickcount", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SpawnGroup_Unload {
    return new CNETMsg_SpawnGroup_Unload().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SpawnGroup_Unload {
    return new CNETMsg_SpawnGroup_Unload().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SpawnGroup_Unload {
    return new CNETMsg_SpawnGroup_Unload().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SpawnGroup_Unload | PlainMessage<CNETMsg_SpawnGroup_Unload> | undefined, b: CNETMsg_SpawnGroup_Unload | PlainMessage<CNETMsg_SpawnGroup_Unload> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SpawnGroup_Unload, a, b);
  }
}

/**
 * @generated from message CNETMsg_SpawnGroup_LoadCompleted
 */
export class CNETMsg_SpawnGroup_LoadCompleted extends Message<CNETMsg_SpawnGroup_LoadCompleted> {
  /**
   * @generated from field: optional uint32 spawngrouphandle = 1;
   */
  spawngrouphandle?: number;

  constructor(data?: PartialMessage<CNETMsg_SpawnGroup_LoadCompleted>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_SpawnGroup_LoadCompleted";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "spawngrouphandle", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_SpawnGroup_LoadCompleted {
    return new CNETMsg_SpawnGroup_LoadCompleted().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_SpawnGroup_LoadCompleted {
    return new CNETMsg_SpawnGroup_LoadCompleted().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_SpawnGroup_LoadCompleted {
    return new CNETMsg_SpawnGroup_LoadCompleted().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_SpawnGroup_LoadCompleted | PlainMessage<CNETMsg_SpawnGroup_LoadCompleted> | undefined, b: CNETMsg_SpawnGroup_LoadCompleted | PlainMessage<CNETMsg_SpawnGroup_LoadCompleted> | undefined): boolean {
    return proto2.util.equals(CNETMsg_SpawnGroup_LoadCompleted, a, b);
  }
}

/**
 * @generated from message CSVCMsg_GameSessionConfiguration
 */
export class CSVCMsg_GameSessionConfiguration extends Message<CSVCMsg_GameSessionConfiguration> {
  /**
   * @generated from field: optional bool is_multiplayer = 1;
   */
  isMultiplayer?: boolean;

  /**
   * @generated from field: optional bool is_loadsavegame = 2;
   */
  isLoadsavegame?: boolean;

  /**
   * @generated from field: optional bool is_background_map = 3;
   */
  isBackgroundMap?: boolean;

  /**
   * @generated from field: optional bool is_headless = 4;
   */
  isHeadless?: boolean;

  /**
   * @generated from field: optional uint32 min_client_limit = 5;
   */
  minClientLimit?: number;

  /**
   * @generated from field: optional uint32 max_client_limit = 6;
   */
  maxClientLimit?: number;

  /**
   * @generated from field: optional uint32 max_clients = 7;
   */
  maxClients?: number;

  /**
   * @generated from field: optional fixed32 tick_interval = 8;
   */
  tickInterval?: number;

  /**
   * @generated from field: optional string hostname = 9;
   */
  hostname?: string;

  /**
   * @generated from field: optional string savegamename = 10;
   */
  savegamename?: string;

  /**
   * @generated from field: optional string s1_mapname = 11;
   */
  s1Mapname?: string;

  /**
   * @generated from field: optional string gamemode = 12;
   */
  gamemode?: string;

  /**
   * @generated from field: optional string server_ip_address = 13;
   */
  serverIpAddress?: string;

  /**
   * @generated from field: optional bytes data = 14;
   */
  data?: Uint8Array;

  /**
   * @generated from field: optional bool is_localonly = 15;
   */
  isLocalonly?: boolean;

  /**
   * @generated from field: optional bool no_steam_server = 19;
   */
  noSteamServer?: boolean;

  /**
   * @generated from field: optional bool is_transition = 16;
   */
  isTransition?: boolean;

  /**
   * @generated from field: optional string previouslevel = 17;
   */
  previouslevel?: string;

  /**
   * @generated from field: optional string landmarkname = 18;
   */
  landmarkname?: string;

  constructor(data?: PartialMessage<CSVCMsg_GameSessionConfiguration>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CSVCMsg_GameSessionConfiguration";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "is_multiplayer", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "is_loadsavegame", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "is_background_map", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "is_headless", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 5, name: "min_client_limit", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "max_client_limit", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "max_clients", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "tick_interval", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 9, name: "hostname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "savegamename", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "s1_mapname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "gamemode", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "server_ip_address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 14, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 15, name: "is_localonly", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 19, name: "no_steam_server", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 16, name: "is_transition", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 17, name: "previouslevel", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 18, name: "landmarkname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CSVCMsg_GameSessionConfiguration {
    return new CSVCMsg_GameSessionConfiguration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CSVCMsg_GameSessionConfiguration {
    return new CSVCMsg_GameSessionConfiguration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CSVCMsg_GameSessionConfiguration {
    return new CSVCMsg_GameSessionConfiguration().fromJsonString(jsonString, options);
  }

  static equals(a: CSVCMsg_GameSessionConfiguration | PlainMessage<CSVCMsg_GameSessionConfiguration> | undefined, b: CSVCMsg_GameSessionConfiguration | PlainMessage<CSVCMsg_GameSessionConfiguration> | undefined): boolean {
    return proto2.util.equals(CSVCMsg_GameSessionConfiguration, a, b);
  }
}

/**
 * @generated from message CNETMsg_DebugOverlay
 */
export class CNETMsg_DebugOverlay extends Message<CNETMsg_DebugOverlay> {
  /**
   * @generated from field: optional int32 etype = 1;
   */
  etype?: number;

  /**
   * @generated from field: repeated CMsgVector vectors = 2;
   */
  vectors: CMsgVector[] = [];

  /**
   * @generated from field: repeated CMsgRGBA colors = 3;
   */
  colors: CMsgRGBA[] = [];

  /**
   * @generated from field: repeated float dimensions = 4;
   */
  dimensions: number[] = [];

  /**
   * @generated from field: repeated float times = 5;
   */
  times: number[] = [];

  /**
   * @generated from field: repeated bool bools = 6;
   */
  bools: boolean[] = [];

  /**
   * @generated from field: repeated uint64 uint64s = 7;
   */
  uint64s: bigint[] = [];

  /**
   * @generated from field: repeated string strings = 8;
   */
  strings: string[] = [];

  constructor(data?: PartialMessage<CNETMsg_DebugOverlay>) {
    super();
    proto2.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto2 = proto2;
  static readonly typeName = "CNETMsg_DebugOverlay";
  static readonly fields: FieldList = proto2.util.newFieldList(() => [
    { no: 1, name: "etype", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "vectors", kind: "message", T: CMsgVector, repeated: true },
    { no: 3, name: "colors", kind: "message", T: CMsgRGBA, repeated: true },
    { no: 4, name: "dimensions", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
    { no: 5, name: "times", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
    { no: 6, name: "bools", kind: "scalar", T: 8 /* ScalarType.BOOL */, repeated: true },
    { no: 7, name: "uint64s", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 8, name: "strings", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CNETMsg_DebugOverlay {
    return new CNETMsg_DebugOverlay().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CNETMsg_DebugOverlay {
    return new CNETMsg_DebugOverlay().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CNETMsg_DebugOverlay {
    return new CNETMsg_DebugOverlay().fromJsonString(jsonString, options);
  }

  static equals(a: CNETMsg_DebugOverlay | PlainMessage<CNETMsg_DebugOverlay> | undefined, b: CNETMsg_DebugOverlay | PlainMessage<CNETMsg_DebugOverlay> | undefined): boolean {
    return proto2.util.equals(CNETMsg_DebugOverlay, a, b);
  }
}


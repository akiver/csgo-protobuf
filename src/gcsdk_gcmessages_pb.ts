// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file gcsdk_gcmessages.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_steammessages } from "./steammessages_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file gcsdk_gcmessages.proto.
 */
export const file_gcsdk_gcmessages: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages]);

/**
 * @generated from message CMsgSOIDOwner
 */
export type CMsgSOIDOwner = Message<"CMsgSOIDOwner"> & {
  /**
   * @generated from field: optional uint32 type = 1;
   */
  type: number;

  /**
   * @generated from field: optional uint64 id = 2;
   */
  id: bigint;
};

/**
 * Describes the message CMsgSOIDOwner.
 * Use `create(CMsgSOIDOwnerSchema)` to create a new message.
 */
export const CMsgSOIDOwnerSchema: GenMessage<CMsgSOIDOwner> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 0);

/**
 * @generated from message CMsgSOSingleObject
 */
export type CMsgSOSingleObject = Message<"CMsgSOSingleObject"> & {
  /**
   * @generated from field: optional int32 type_id = 2;
   */
  typeId: number;

  /**
   * @generated from field: optional bytes object_data = 3;
   */
  objectData: Uint8Array;

  /**
   * @generated from field: optional fixed64 version = 4;
   */
  version: bigint;

  /**
   * @generated from field: optional CMsgSOIDOwner owner_soid = 5;
   */
  ownerSoid?: CMsgSOIDOwner;
};

/**
 * Describes the message CMsgSOSingleObject.
 * Use `create(CMsgSOSingleObjectSchema)` to create a new message.
 */
export const CMsgSOSingleObjectSchema: GenMessage<CMsgSOSingleObject> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 1);

/**
 * @generated from message CMsgSOMultipleObjects
 */
export type CMsgSOMultipleObjects = Message<"CMsgSOMultipleObjects"> & {
  /**
   * @generated from field: repeated CMsgSOMultipleObjects.SingleObject objects_modified = 2;
   */
  objectsModified: CMsgSOMultipleObjects_SingleObject[];

  /**
   * @generated from field: optional fixed64 version = 3;
   */
  version: bigint;

  /**
   * @generated from field: optional CMsgSOIDOwner owner_soid = 6;
   */
  ownerSoid?: CMsgSOIDOwner;
};

/**
 * Describes the message CMsgSOMultipleObjects.
 * Use `create(CMsgSOMultipleObjectsSchema)` to create a new message.
 */
export const CMsgSOMultipleObjectsSchema: GenMessage<CMsgSOMultipleObjects> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 2);

/**
 * @generated from message CMsgSOMultipleObjects.SingleObject
 */
export type CMsgSOMultipleObjects_SingleObject = Message<"CMsgSOMultipleObjects.SingleObject"> & {
  /**
   * @generated from field: optional int32 type_id = 1;
   */
  typeId: number;

  /**
   * @generated from field: optional bytes object_data = 2;
   */
  objectData: Uint8Array;
};

/**
 * Describes the message CMsgSOMultipleObjects.SingleObject.
 * Use `create(CMsgSOMultipleObjects_SingleObjectSchema)` to create a new message.
 */
export const CMsgSOMultipleObjects_SingleObjectSchema: GenMessage<CMsgSOMultipleObjects_SingleObject> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 2, 0);

/**
 * @generated from message CMsgSOCacheSubscribed
 */
export type CMsgSOCacheSubscribed = Message<"CMsgSOCacheSubscribed"> & {
  /**
   * @generated from field: repeated CMsgSOCacheSubscribed.SubscribedType objects = 2;
   */
  objects: CMsgSOCacheSubscribed_SubscribedType[];

  /**
   * @generated from field: optional fixed64 version = 3;
   */
  version: bigint;

  /**
   * @generated from field: optional CMsgSOIDOwner owner_soid = 4;
   */
  ownerSoid?: CMsgSOIDOwner;
};

/**
 * Describes the message CMsgSOCacheSubscribed.
 * Use `create(CMsgSOCacheSubscribedSchema)` to create a new message.
 */
export const CMsgSOCacheSubscribedSchema: GenMessage<CMsgSOCacheSubscribed> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 3);

/**
 * @generated from message CMsgSOCacheSubscribed.SubscribedType
 */
export type CMsgSOCacheSubscribed_SubscribedType = Message<"CMsgSOCacheSubscribed.SubscribedType"> & {
  /**
   * @generated from field: optional int32 type_id = 1;
   */
  typeId: number;

  /**
   * @generated from field: repeated bytes object_data = 2;
   */
  objectData: Uint8Array[];
};

/**
 * Describes the message CMsgSOCacheSubscribed.SubscribedType.
 * Use `create(CMsgSOCacheSubscribed_SubscribedTypeSchema)` to create a new message.
 */
export const CMsgSOCacheSubscribed_SubscribedTypeSchema: GenMessage<CMsgSOCacheSubscribed_SubscribedType> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 3, 0);

/**
 * @generated from message CMsgSOCacheUnsubscribed
 */
export type CMsgSOCacheUnsubscribed = Message<"CMsgSOCacheUnsubscribed"> & {
  /**
   * @generated from field: optional CMsgSOIDOwner owner_soid = 2;
   */
  ownerSoid?: CMsgSOIDOwner;
};

/**
 * Describes the message CMsgSOCacheUnsubscribed.
 * Use `create(CMsgSOCacheUnsubscribedSchema)` to create a new message.
 */
export const CMsgSOCacheUnsubscribedSchema: GenMessage<CMsgSOCacheUnsubscribed> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 4);

/**
 * @generated from message CMsgSOCacheSubscriptionCheck
 */
export type CMsgSOCacheSubscriptionCheck = Message<"CMsgSOCacheSubscriptionCheck"> & {
  /**
   * @generated from field: optional fixed64 version = 2;
   */
  version: bigint;

  /**
   * @generated from field: optional CMsgSOIDOwner owner_soid = 3;
   */
  ownerSoid?: CMsgSOIDOwner;
};

/**
 * Describes the message CMsgSOCacheSubscriptionCheck.
 * Use `create(CMsgSOCacheSubscriptionCheckSchema)` to create a new message.
 */
export const CMsgSOCacheSubscriptionCheckSchema: GenMessage<CMsgSOCacheSubscriptionCheck> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 5);

/**
 * @generated from message CMsgSOCacheSubscriptionRefresh
 */
export type CMsgSOCacheSubscriptionRefresh = Message<"CMsgSOCacheSubscriptionRefresh"> & {
  /**
   * @generated from field: optional CMsgSOIDOwner owner_soid = 2;
   */
  ownerSoid?: CMsgSOIDOwner;
};

/**
 * Describes the message CMsgSOCacheSubscriptionRefresh.
 * Use `create(CMsgSOCacheSubscriptionRefreshSchema)` to create a new message.
 */
export const CMsgSOCacheSubscriptionRefreshSchema: GenMessage<CMsgSOCacheSubscriptionRefresh> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 6);

/**
 * @generated from message CMsgSOCacheVersion
 */
export type CMsgSOCacheVersion = Message<"CMsgSOCacheVersion"> & {
  /**
   * @generated from field: optional fixed64 version = 1;
   */
  version: bigint;
};

/**
 * Describes the message CMsgSOCacheVersion.
 * Use `create(CMsgSOCacheVersionSchema)` to create a new message.
 */
export const CMsgSOCacheVersionSchema: GenMessage<CMsgSOCacheVersion> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 7);

/**
 * @generated from message CMsgAccountDetails
 */
export type CMsgAccountDetails = Message<"CMsgAccountDetails"> & {
  /**
   * @generated from field: optional bool valid = 1;
   */
  valid: boolean;

  /**
   * @generated from field: optional string account_name = 2;
   */
  accountName: string;

  /**
   * @generated from field: optional bool public_profile = 4;
   */
  publicProfile: boolean;

  /**
   * @generated from field: optional bool public_inventory = 5;
   */
  publicInventory: boolean;

  /**
   * @generated from field: optional bool vac_banned = 6;
   */
  vacBanned: boolean;

  /**
   * @generated from field: optional bool cyber_cafe = 7;
   */
  cyberCafe: boolean;

  /**
   * @generated from field: optional bool school_account = 8;
   */
  schoolAccount: boolean;

  /**
   * @generated from field: optional bool free_trial_account = 9;
   */
  freeTrialAccount: boolean;

  /**
   * @generated from field: optional bool subscribed = 10;
   */
  subscribed: boolean;

  /**
   * @generated from field: optional bool low_violence = 11;
   */
  lowViolence: boolean;

  /**
   * @generated from field: optional bool limited = 12;
   */
  limited: boolean;

  /**
   * @generated from field: optional bool trusted = 13;
   */
  trusted: boolean;

  /**
   * @generated from field: optional uint32 package = 14;
   */
  package: number;

  /**
   * @generated from field: optional fixed32 time_cached = 15;
   */
  timeCached: number;

  /**
   * @generated from field: optional bool account_locked = 16;
   */
  accountLocked: boolean;

  /**
   * @generated from field: optional bool community_banned = 17;
   */
  communityBanned: boolean;

  /**
   * @generated from field: optional bool trade_banned = 18;
   */
  tradeBanned: boolean;

  /**
   * @generated from field: optional bool eligible_for_community_market = 19;
   */
  eligibleForCommunityMarket: boolean;
};

/**
 * Describes the message CMsgAccountDetails.
 * Use `create(CMsgAccountDetailsSchema)` to create a new message.
 */
export const CMsgAccountDetailsSchema: GenMessage<CMsgAccountDetails> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 8);

/**
 * @generated from message CMsgGCMultiplexMessage
 */
export type CMsgGCMultiplexMessage = Message<"CMsgGCMultiplexMessage"> & {
  /**
   * @generated from field: optional uint32 msgtype = 1;
   */
  msgtype: number;

  /**
   * @generated from field: optional bytes payload = 2;
   */
  payload: Uint8Array;

  /**
   * @generated from field: repeated fixed64 steamids = 3;
   */
  steamids: bigint[];

  /**
   * @generated from field: optional bool replytogc = 4;
   */
  replytogc: boolean;
};

/**
 * Describes the message CMsgGCMultiplexMessage.
 * Use `create(CMsgGCMultiplexMessageSchema)` to create a new message.
 */
export const CMsgGCMultiplexMessageSchema: GenMessage<CMsgGCMultiplexMessage> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 9);

/**
 * @generated from message CMsgGCMultiplexMessage_Response
 */
export type CMsgGCMultiplexMessage_Response = Message<"CMsgGCMultiplexMessage_Response"> & {
  /**
   * @generated from field: optional uint32 msgtype = 1;
   */
  msgtype: number;
};

/**
 * Describes the message CMsgGCMultiplexMessage_Response.
 * Use `create(CMsgGCMultiplexMessage_ResponseSchema)` to create a new message.
 */
export const CMsgGCMultiplexMessage_ResponseSchema: GenMessage<CMsgGCMultiplexMessage_Response> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 10);

/**
 * @generated from message CGCToGCMsgMasterAck
 */
export type CGCToGCMsgMasterAck = Message<"CGCToGCMsgMasterAck"> & {
  /**
   * @generated from field: optional uint32 dir_index = 1;
   */
  dirIndex: number;

  /**
   * @generated from field: optional uint32 gc_type = 2;
   */
  gcType: number;
};

/**
 * Describes the message CGCToGCMsgMasterAck.
 * Use `create(CGCToGCMsgMasterAckSchema)` to create a new message.
 */
export const CGCToGCMsgMasterAckSchema: GenMessage<CGCToGCMsgMasterAck> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 11);

/**
 * @generated from message CGCToGCMsgMasterAck_Response
 */
export type CGCToGCMsgMasterAck_Response = Message<"CGCToGCMsgMasterAck_Response"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;
};

/**
 * Describes the message CGCToGCMsgMasterAck_Response.
 * Use `create(CGCToGCMsgMasterAck_ResponseSchema)` to create a new message.
 */
export const CGCToGCMsgMasterAck_ResponseSchema: GenMessage<CGCToGCMsgMasterAck_Response> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 12);

/**
 * @generated from message CGCToGCMsgMasterStartupComplete
 */
export type CGCToGCMsgMasterStartupComplete = Message<"CGCToGCMsgMasterStartupComplete"> & {
};

/**
 * Describes the message CGCToGCMsgMasterStartupComplete.
 * Use `create(CGCToGCMsgMasterStartupCompleteSchema)` to create a new message.
 */
export const CGCToGCMsgMasterStartupCompleteSchema: GenMessage<CGCToGCMsgMasterStartupComplete> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 13);

/**
 * @generated from message CGCToGCMsgRouted
 */
export type CGCToGCMsgRouted = Message<"CGCToGCMsgRouted"> & {
  /**
   * @generated from field: optional uint32 msg_type = 1;
   */
  msgType: number;

  /**
   * @generated from field: optional fixed64 sender_id = 2;
   */
  senderId: bigint;

  /**
   * @generated from field: optional bytes net_message = 3;
   */
  netMessage: Uint8Array;

  /**
   * @generated from field: optional uint32 ip = 4;
   */
  ip: number;
};

/**
 * Describes the message CGCToGCMsgRouted.
 * Use `create(CGCToGCMsgRoutedSchema)` to create a new message.
 */
export const CGCToGCMsgRoutedSchema: GenMessage<CGCToGCMsgRouted> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 14);

/**
 * @generated from message CGCToGCMsgRoutedReply
 */
export type CGCToGCMsgRoutedReply = Message<"CGCToGCMsgRoutedReply"> & {
  /**
   * @generated from field: optional uint32 msg_type = 1;
   */
  msgType: number;

  /**
   * @generated from field: optional bytes net_message = 2;
   */
  netMessage: Uint8Array;
};

/**
 * Describes the message CGCToGCMsgRoutedReply.
 * Use `create(CGCToGCMsgRoutedReplySchema)` to create a new message.
 */
export const CGCToGCMsgRoutedReplySchema: GenMessage<CGCToGCMsgRoutedReply> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 15);

/**
 * @generated from message CMsgGCUpdateSessionIP
 */
export type CMsgGCUpdateSessionIP = Message<"CMsgGCUpdateSessionIP"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed32 ip = 2;
   */
  ip: number;
};

/**
 * Describes the message CMsgGCUpdateSessionIP.
 * Use `create(CMsgGCUpdateSessionIPSchema)` to create a new message.
 */
export const CMsgGCUpdateSessionIPSchema: GenMessage<CMsgGCUpdateSessionIP> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 16);

/**
 * @generated from message CMsgGCRequestSessionIP
 */
export type CMsgGCRequestSessionIP = Message<"CMsgGCRequestSessionIP"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CMsgGCRequestSessionIP.
 * Use `create(CMsgGCRequestSessionIPSchema)` to create a new message.
 */
export const CMsgGCRequestSessionIPSchema: GenMessage<CMsgGCRequestSessionIP> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 17);

/**
 * @generated from message CMsgGCRequestSessionIPResponse
 */
export type CMsgGCRequestSessionIPResponse = Message<"CMsgGCRequestSessionIPResponse"> & {
  /**
   * @generated from field: optional fixed32 ip = 1;
   */
  ip: number;
};

/**
 * Describes the message CMsgGCRequestSessionIPResponse.
 * Use `create(CMsgGCRequestSessionIPResponseSchema)` to create a new message.
 */
export const CMsgGCRequestSessionIPResponseSchema: GenMessage<CMsgGCRequestSessionIPResponse> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 18);

/**
 * @generated from message CMsgSOCacheHaveVersion
 */
export type CMsgSOCacheHaveVersion = Message<"CMsgSOCacheHaveVersion"> & {
  /**
   * @generated from field: optional CMsgSOIDOwner soid = 1;
   */
  soid?: CMsgSOIDOwner;

  /**
   * @generated from field: optional fixed64 version = 2;
   */
  version: bigint;
};

/**
 * Describes the message CMsgSOCacheHaveVersion.
 * Use `create(CMsgSOCacheHaveVersionSchema)` to create a new message.
 */
export const CMsgSOCacheHaveVersionSchema: GenMessage<CMsgSOCacheHaveVersion> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 19);

/**
 * @generated from message CMsgClientHello
 */
export type CMsgClientHello = Message<"CMsgClientHello"> & {
  /**
   * @generated from field: optional uint32 version = 1;
   */
  version: number;

  /**
   * @generated from field: repeated CMsgSOCacheHaveVersion socache_have_versions = 2;
   */
  socacheHaveVersions: CMsgSOCacheHaveVersion[];

  /**
   * @generated from field: optional uint32 client_session_need = 3;
   */
  clientSessionNeed: number;

  /**
   * @generated from field: optional uint32 client_launcher = 4;
   */
  clientLauncher: number;

  /**
   * @generated from field: optional uint32 partner_srcid = 5;
   */
  partnerSrcid: number;

  /**
   * @generated from field: optional uint32 partner_accountid = 6;
   */
  partnerAccountid: number;

  /**
   * @generated from field: optional uint32 partner_accountflags = 7;
   */
  partnerAccountflags: number;

  /**
   * @generated from field: optional uint32 partner_accountbalance = 8;
   */
  partnerAccountbalance: number;

  /**
   * @generated from field: optional uint32 steam_launcher = 9;
   */
  steamLauncher: number;
};

/**
 * Describes the message CMsgClientHello.
 * Use `create(CMsgClientHelloSchema)` to create a new message.
 */
export const CMsgClientHelloSchema: GenMessage<CMsgClientHello> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 20);

/**
 * @generated from message CMsgServerHello
 */
export type CMsgServerHello = Message<"CMsgServerHello"> & {
  /**
   * @generated from field: optional uint32 version = 1;
   */
  version: number;

  /**
   * @generated from field: repeated CMsgSOCacheHaveVersion socache_have_versions = 2;
   */
  socacheHaveVersions: CMsgSOCacheHaveVersion[];

  /**
   * @generated from field: optional uint32 legacy_client_session_need = 3;
   */
  legacyClientSessionNeed: number;

  /**
   * @generated from field: optional uint32 client_launcher = 4;
   */
  clientLauncher: number;

  /**
   * @generated from field: optional bytes legacy_steamdatagram_routing = 6;
   */
  legacySteamdatagramRouting: Uint8Array;

  /**
   * @generated from field: optional uint32 required_internal_addr = 7;
   */
  requiredInternalAddr: number;

  /**
   * @generated from field: optional bytes steamdatagram_login = 8;
   */
  steamdatagramLogin: Uint8Array;

  /**
   * @generated from field: optional uint32 socache_control = 9;
   */
  socacheControl: number;
};

/**
 * Describes the message CMsgServerHello.
 * Use `create(CMsgServerHelloSchema)` to create a new message.
 */
export const CMsgServerHelloSchema: GenMessage<CMsgServerHello> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 21);

/**
 * @generated from message CMsgClientWelcome
 */
export type CMsgClientWelcome = Message<"CMsgClientWelcome"> & {
  /**
   * @generated from field: optional uint32 version = 1;
   */
  version: number;

  /**
   * @generated from field: optional bytes game_data = 2;
   */
  gameData: Uint8Array;

  /**
   * @generated from field: repeated CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
   */
  outofdateSubscribedCaches: CMsgSOCacheSubscribed[];

  /**
   * @generated from field: repeated CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
   */
  uptodateSubscribedCaches: CMsgSOCacheSubscriptionCheck[];

  /**
   * @generated from field: optional CMsgClientWelcome.Location location = 5;
   */
  location?: CMsgClientWelcome_Location;

  /**
   * @generated from field: optional bytes game_data2 = 6;
   */
  gameData2: Uint8Array;

  /**
   * @generated from field: optional uint32 rtime32_gc_welcome_timestamp = 7;
   */
  rtime32GcWelcomeTimestamp: number;

  /**
   * @generated from field: optional uint32 currency = 8;
   */
  currency: number;

  /**
   * @generated from field: optional uint32 balance = 9;
   */
  balance: number;

  /**
   * @generated from field: optional string balance_url = 10;
   */
  balanceUrl: string;

  /**
   * @generated from field: optional string txn_country_code = 11;
   */
  txnCountryCode: string;
};

/**
 * Describes the message CMsgClientWelcome.
 * Use `create(CMsgClientWelcomeSchema)` to create a new message.
 */
export const CMsgClientWelcomeSchema: GenMessage<CMsgClientWelcome> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 22);

/**
 * @generated from message CMsgClientWelcome.Location
 */
export type CMsgClientWelcome_Location = Message<"CMsgClientWelcome.Location"> & {
  /**
   * @generated from field: optional float latitude = 1;
   */
  latitude: number;

  /**
   * @generated from field: optional float longitude = 2;
   */
  longitude: number;

  /**
   * @generated from field: optional string country = 3;
   */
  country: string;
};

/**
 * Describes the message CMsgClientWelcome.Location.
 * Use `create(CMsgClientWelcome_LocationSchema)` to create a new message.
 */
export const CMsgClientWelcome_LocationSchema: GenMessage<CMsgClientWelcome_Location> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 22, 0);

/**
 * @generated from message CMsgConnectionStatus
 */
export type CMsgConnectionStatus = Message<"CMsgConnectionStatus"> & {
  /**
   * @generated from field: optional GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
   */
  status: GCConnectionStatus;

  /**
   * @generated from field: optional uint32 client_session_need = 2;
   */
  clientSessionNeed: number;

  /**
   * @generated from field: optional int32 queue_position = 3;
   */
  queuePosition: number;

  /**
   * @generated from field: optional int32 queue_size = 4;
   */
  queueSize: number;

  /**
   * @generated from field: optional int32 wait_seconds = 5;
   */
  waitSeconds: number;

  /**
   * @generated from field: optional int32 estimated_wait_seconds_remaining = 6;
   */
  estimatedWaitSecondsRemaining: number;
};

/**
 * Describes the message CMsgConnectionStatus.
 * Use `create(CMsgConnectionStatusSchema)` to create a new message.
 */
export const CMsgConnectionStatusSchema: GenMessage<CMsgConnectionStatus> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 23);

/**
 * @generated from message CWorkshop_PopulateItemDescriptions_Request
 */
export type CWorkshop_PopulateItemDescriptions_Request = Message<"CWorkshop_PopulateItemDescriptions_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: repeated CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
   */
  languages: CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock[];
};

/**
 * Describes the message CWorkshop_PopulateItemDescriptions_Request.
 * Use `create(CWorkshop_PopulateItemDescriptions_RequestSchema)` to create a new message.
 */
export const CWorkshop_PopulateItemDescriptions_RequestSchema: GenMessage<CWorkshop_PopulateItemDescriptions_Request> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 24);

/**
 * @generated from message CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription
 */
export type CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription = Message<"CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription"> & {
  /**
   * @generated from field: optional uint32 gameitemid = 1;
   */
  gameitemid: number;

  /**
   * @generated from field: optional string item_description = 2;
   */
  itemDescription: string;

  /**
   * @generated from field: optional bool one_per_account = 3;
   */
  onePerAccount: boolean;
};

/**
 * Describes the message CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.
 * Use `create(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionSchema)` to create a new message.
 */
export const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionSchema: GenMessage<CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 24, 0);

/**
 * @generated from message CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock
 */
export type CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock = Message<"CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock"> & {
  /**
   * @generated from field: optional string language = 1;
   */
  language: string;

  /**
   * @generated from field: repeated CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
   */
  descriptions: CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription[];
};

/**
 * Describes the message CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.
 * Use `create(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockSchema)` to create a new message.
 */
export const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockSchema: GenMessage<CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 24, 1);

/**
 * @generated from message CWorkshop_GetContributors_Request
 */
export type CWorkshop_GetContributors_Request = Message<"CWorkshop_GetContributors_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 gameitemid = 2;
   */
  gameitemid: number;
};

/**
 * Describes the message CWorkshop_GetContributors_Request.
 * Use `create(CWorkshop_GetContributors_RequestSchema)` to create a new message.
 */
export const CWorkshop_GetContributors_RequestSchema: GenMessage<CWorkshop_GetContributors_Request> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 25);

/**
 * @generated from message CWorkshop_GetContributors_Response
 */
export type CWorkshop_GetContributors_Response = Message<"CWorkshop_GetContributors_Response"> & {
  /**
   * @generated from field: repeated fixed64 contributors = 1;
   */
  contributors: bigint[];
};

/**
 * Describes the message CWorkshop_GetContributors_Response.
 * Use `create(CWorkshop_GetContributors_ResponseSchema)` to create a new message.
 */
export const CWorkshop_GetContributors_ResponseSchema: GenMessage<CWorkshop_GetContributors_Response> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 26);

/**
 * @generated from message CWorkshop_SetItemPaymentRules_Request
 */
export type CWorkshop_SetItemPaymentRules_Request = Message<"CWorkshop_SetItemPaymentRules_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 gameitemid = 2;
   */
  gameitemid: number;

  /**
   * @generated from field: repeated CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
   */
  associatedWorkshopFiles: CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule[];

  /**
   * @generated from field: repeated CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
   */
  partnerAccounts: CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule[];

  /**
   * @generated from field: optional bool validate_only = 5;
   */
  validateOnly: boolean;

  /**
   * @generated from field: optional bool make_workshop_files_subscribable = 6;
   */
  makeWorkshopFilesSubscribable: boolean;

  /**
   * @generated from field: optional CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule associated_workshop_file_for_direct_payments = 7;
   */
  associatedWorkshopFileForDirectPayments?: CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule;
};

/**
 * Describes the message CWorkshop_SetItemPaymentRules_Request.
 * Use `create(CWorkshop_SetItemPaymentRules_RequestSchema)` to create a new message.
 */
export const CWorkshop_SetItemPaymentRules_RequestSchema: GenMessage<CWorkshop_SetItemPaymentRules_Request> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 27);

/**
 * @generated from message CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule
 */
export type CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule = Message<"CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule"> & {
  /**
   * @generated from field: optional uint64 workshop_file_id = 1;
   */
  workshopFileId: bigint;

  /**
   * @generated from field: optional float revenue_percentage = 2;
   */
  revenuePercentage: number;

  /**
   * @generated from field: optional string rule_description = 3;
   */
  ruleDescription: string;

  /**
   * @generated from field: optional uint32 rule_type = 4 [default = 1];
   */
  ruleType: number;
};

/**
 * Describes the message CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.
 * Use `create(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleSchema)` to create a new message.
 */
export const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleSchema: GenMessage<CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 27, 0);

/**
 * @generated from message CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule
 */
export type CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule = Message<"CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule"> & {
  /**
   * @generated from field: optional uint64 workshop_file_id = 1;
   */
  workshopFileId: bigint;

  /**
   * @generated from field: optional string rule_description = 2;
   */
  ruleDescription: string;
};

/**
 * Describes the message CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.
 * Use `create(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRuleSchema)` to create a new message.
 */
export const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRuleSchema: GenMessage<CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 27, 1);

/**
 * @generated from message CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule
 */
export type CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule = Message<"CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional float revenue_percentage = 2;
   */
  revenuePercentage: number;

  /**
   * @generated from field: optional string rule_description = 3;
   */
  ruleDescription: string;
};

/**
 * Describes the message CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.
 * Use `create(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleSchema)` to create a new message.
 */
export const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleSchema: GenMessage<CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 27, 2);

/**
 * @generated from message CWorkshop_SetItemPaymentRules_Response
 */
export type CWorkshop_SetItemPaymentRules_Response = Message<"CWorkshop_SetItemPaymentRules_Response"> & {
};

/**
 * Describes the message CWorkshop_SetItemPaymentRules_Response.
 * Use `create(CWorkshop_SetItemPaymentRules_ResponseSchema)` to create a new message.
 */
export const CWorkshop_SetItemPaymentRules_ResponseSchema: GenMessage<CWorkshop_SetItemPaymentRules_Response> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 28);

/**
 * @generated from message CGameServers_AggregationQuery_Request
 */
export type CGameServers_AggregationQuery_Request = Message<"CGameServers_AggregationQuery_Request"> & {
  /**
   * @generated from field: optional string filter = 1;
   */
  filter: string;

  /**
   * @generated from field: repeated string group_fields = 3;
   */
  groupFields: string[];
};

/**
 * Describes the message CGameServers_AggregationQuery_Request.
 * Use `create(CGameServers_AggregationQuery_RequestSchema)` to create a new message.
 */
export const CGameServers_AggregationQuery_RequestSchema: GenMessage<CGameServers_AggregationQuery_Request> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 29);

/**
 * @generated from message CGameServers_AggregationQuery_Response
 */
export type CGameServers_AggregationQuery_Response = Message<"CGameServers_AggregationQuery_Response"> & {
  /**
   * @generated from field: repeated CGameServers_AggregationQuery_Response.Group groups = 1;
   */
  groups: CGameServers_AggregationQuery_Response_Group[];
};

/**
 * Describes the message CGameServers_AggregationQuery_Response.
 * Use `create(CGameServers_AggregationQuery_ResponseSchema)` to create a new message.
 */
export const CGameServers_AggregationQuery_ResponseSchema: GenMessage<CGameServers_AggregationQuery_Response> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 30);

/**
 * @generated from message CGameServers_AggregationQuery_Response.Group
 */
export type CGameServers_AggregationQuery_Response_Group = Message<"CGameServers_AggregationQuery_Response.Group"> & {
  /**
   * @generated from field: repeated string group_values = 1;
   */
  groupValues: string[];

  /**
   * @generated from field: optional uint32 servers_empty = 2;
   */
  serversEmpty: number;

  /**
   * @generated from field: optional uint32 servers_full = 3;
   */
  serversFull: number;

  /**
   * @generated from field: optional uint32 servers_total = 4;
   */
  serversTotal: number;

  /**
   * @generated from field: optional uint32 players_humans = 5;
   */
  playersHumans: number;

  /**
   * @generated from field: optional uint32 players_bots = 6;
   */
  playersBots: number;

  /**
   * @generated from field: optional uint32 player_capacity = 7;
   */
  playerCapacity: number;
};

/**
 * Describes the message CGameServers_AggregationQuery_Response.Group.
 * Use `create(CGameServers_AggregationQuery_Response_GroupSchema)` to create a new message.
 */
export const CGameServers_AggregationQuery_Response_GroupSchema: GenMessage<CGameServers_AggregationQuery_Response_Group> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 30, 0);

/**
 * @generated from message CWorkshop_AddSpecialPayment_Request
 */
export type CWorkshop_AddSpecialPayment_Request = Message<"CWorkshop_AddSpecialPayment_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 gameitemid = 2;
   */
  gameitemid: number;

  /**
   * @generated from field: optional string date = 3;
   */
  date: string;

  /**
   * @generated from field: optional uint64 payment_us_usd = 4;
   */
  paymentUsUsd: bigint;

  /**
   * @generated from field: optional uint64 payment_row_usd = 5;
   */
  paymentRowUsd: bigint;
};

/**
 * Describes the message CWorkshop_AddSpecialPayment_Request.
 * Use `create(CWorkshop_AddSpecialPayment_RequestSchema)` to create a new message.
 */
export const CWorkshop_AddSpecialPayment_RequestSchema: GenMessage<CWorkshop_AddSpecialPayment_Request> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 31);

/**
 * @generated from message CWorkshop_AddSpecialPayment_Response
 */
export type CWorkshop_AddSpecialPayment_Response = Message<"CWorkshop_AddSpecialPayment_Response"> & {
};

/**
 * Describes the message CWorkshop_AddSpecialPayment_Response.
 * Use `create(CWorkshop_AddSpecialPayment_ResponseSchema)` to create a new message.
 */
export const CWorkshop_AddSpecialPayment_ResponseSchema: GenMessage<CWorkshop_AddSpecialPayment_Response> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 32);

/**
 * @generated from message CProductInfo_SetRichPresenceLocalization_Request
 */
export type CProductInfo_SetRichPresenceLocalization_Request = Message<"CProductInfo_SetRichPresenceLocalization_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: repeated CProductInfo_SetRichPresenceLocalization_Request.LanguageSection languages = 2;
   */
  languages: CProductInfo_SetRichPresenceLocalization_Request_LanguageSection[];

  /**
   * @generated from field: optional uint64 steamid = 3;
   */
  steamid: bigint;
};

/**
 * Describes the message CProductInfo_SetRichPresenceLocalization_Request.
 * Use `create(CProductInfo_SetRichPresenceLocalization_RequestSchema)` to create a new message.
 */
export const CProductInfo_SetRichPresenceLocalization_RequestSchema: GenMessage<CProductInfo_SetRichPresenceLocalization_Request> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 33);

/**
 * @generated from message CProductInfo_SetRichPresenceLocalization_Request.Token
 */
export type CProductInfo_SetRichPresenceLocalization_Request_Token = Message<"CProductInfo_SetRichPresenceLocalization_Request.Token"> & {
  /**
   * @generated from field: optional string token = 1;
   */
  token: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CProductInfo_SetRichPresenceLocalization_Request.Token.
 * Use `create(CProductInfo_SetRichPresenceLocalization_Request_TokenSchema)` to create a new message.
 */
export const CProductInfo_SetRichPresenceLocalization_Request_TokenSchema: GenMessage<CProductInfo_SetRichPresenceLocalization_Request_Token> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 33, 0);

/**
 * @generated from message CProductInfo_SetRichPresenceLocalization_Request.LanguageSection
 */
export type CProductInfo_SetRichPresenceLocalization_Request_LanguageSection = Message<"CProductInfo_SetRichPresenceLocalization_Request.LanguageSection"> & {
  /**
   * @generated from field: optional string language = 1;
   */
  language: string;

  /**
   * @generated from field: repeated CProductInfo_SetRichPresenceLocalization_Request.Token tokens = 2;
   */
  tokens: CProductInfo_SetRichPresenceLocalization_Request_Token[];
};

/**
 * Describes the message CProductInfo_SetRichPresenceLocalization_Request.LanguageSection.
 * Use `create(CProductInfo_SetRichPresenceLocalization_Request_LanguageSectionSchema)` to create a new message.
 */
export const CProductInfo_SetRichPresenceLocalization_Request_LanguageSectionSchema: GenMessage<CProductInfo_SetRichPresenceLocalization_Request_LanguageSection> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 33, 1);

/**
 * @generated from message CProductInfo_SetRichPresenceLocalization_Response
 */
export type CProductInfo_SetRichPresenceLocalization_Response = Message<"CProductInfo_SetRichPresenceLocalization_Response"> & {
};

/**
 * Describes the message CProductInfo_SetRichPresenceLocalization_Response.
 * Use `create(CProductInfo_SetRichPresenceLocalization_ResponseSchema)` to create a new message.
 */
export const CProductInfo_SetRichPresenceLocalization_ResponseSchema: GenMessage<CProductInfo_SetRichPresenceLocalization_Response> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 34);

/**
 * @generated from message CMsgSerializedSOCache
 */
export type CMsgSerializedSOCache = Message<"CMsgSerializedSOCache"> & {
  /**
   * @generated from field: optional uint32 file_version = 1;
   */
  fileVersion: number;

  /**
   * @generated from field: repeated CMsgSerializedSOCache.Cache caches = 2;
   */
  caches: CMsgSerializedSOCache_Cache[];

  /**
   * @generated from field: optional uint32 gc_socache_file_version = 3;
   */
  gcSocacheFileVersion: number;
};

/**
 * Describes the message CMsgSerializedSOCache.
 * Use `create(CMsgSerializedSOCacheSchema)` to create a new message.
 */
export const CMsgSerializedSOCacheSchema: GenMessage<CMsgSerializedSOCache> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 35);

/**
 * @generated from message CMsgSerializedSOCache.TypeCache
 */
export type CMsgSerializedSOCache_TypeCache = Message<"CMsgSerializedSOCache.TypeCache"> & {
  /**
   * @generated from field: optional uint32 type = 1;
   */
  type: number;

  /**
   * @generated from field: repeated bytes objects = 2;
   */
  objects: Uint8Array[];

  /**
   * @generated from field: optional uint32 service_id = 3;
   */
  serviceId: number;
};

/**
 * Describes the message CMsgSerializedSOCache.TypeCache.
 * Use `create(CMsgSerializedSOCache_TypeCacheSchema)` to create a new message.
 */
export const CMsgSerializedSOCache_TypeCacheSchema: GenMessage<CMsgSerializedSOCache_TypeCache> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 35, 0);

/**
 * @generated from message CMsgSerializedSOCache.Cache
 */
export type CMsgSerializedSOCache_Cache = Message<"CMsgSerializedSOCache.Cache"> & {
  /**
   * @generated from field: optional uint32 type = 1;
   */
  type: number;

  /**
   * @generated from field: optional uint64 id = 2;
   */
  id: bigint;

  /**
   * @generated from field: repeated CMsgSerializedSOCache.Cache.Version versions = 3;
   */
  versions: CMsgSerializedSOCache_Cache_Version[];

  /**
   * @generated from field: repeated CMsgSerializedSOCache.TypeCache type_caches = 4;
   */
  typeCaches: CMsgSerializedSOCache_TypeCache[];
};

/**
 * Describes the message CMsgSerializedSOCache.Cache.
 * Use `create(CMsgSerializedSOCache_CacheSchema)` to create a new message.
 */
export const CMsgSerializedSOCache_CacheSchema: GenMessage<CMsgSerializedSOCache_Cache> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 35, 1);

/**
 * @generated from message CMsgSerializedSOCache.Cache.Version
 */
export type CMsgSerializedSOCache_Cache_Version = Message<"CMsgSerializedSOCache.Cache.Version"> & {
  /**
   * @generated from field: optional uint32 service = 1;
   */
  service: number;

  /**
   * @generated from field: optional uint64 version = 2;
   */
  version: bigint;
};

/**
 * Describes the message CMsgSerializedSOCache.Cache.Version.
 * Use `create(CMsgSerializedSOCache_Cache_VersionSchema)` to create a new message.
 */
export const CMsgSerializedSOCache_Cache_VersionSchema: GenMessage<CMsgSerializedSOCache_Cache_Version> = /*@__PURE__*/
  messageDesc(file_gcsdk_gcmessages, 35, 1, 0);

/**
 * @generated from enum GCClientLauncherType
 */
export enum GCClientLauncherType {
  /**
   * @generated from enum value: GCClientLauncherType_DEFAULT = 0;
   */
  GCClientLauncherType_DEFAULT = 0,

  /**
   * @generated from enum value: GCClientLauncherType_PERFECTWORLD = 1;
   */
  GCClientLauncherType_PERFECTWORLD = 1,

  /**
   * @generated from enum value: GCClientLauncherType_STEAMCHINA = 2;
   */
  GCClientLauncherType_STEAMCHINA = 2,

  /**
   * @generated from enum value: GCClientLauncherType_SOURCE2 = 3;
   */
  GCClientLauncherType_SOURCE2 = 3,
}

/**
 * Describes the enum GCClientLauncherType.
 */
export const GCClientLauncherTypeSchema: GenEnum<GCClientLauncherType> = /*@__PURE__*/
  enumDesc(file_gcsdk_gcmessages, 0);

/**
 * @generated from enum GCConnectionStatus
 */
export enum GCConnectionStatus {
  /**
   * @generated from enum value: GCConnectionStatus_HAVE_SESSION = 0;
   */
  GCConnectionStatus_HAVE_SESSION = 0,

  /**
   * @generated from enum value: GCConnectionStatus_GC_GOING_DOWN = 1;
   */
  GCConnectionStatus_GC_GOING_DOWN = 1,

  /**
   * @generated from enum value: GCConnectionStatus_NO_SESSION = 2;
   */
  GCConnectionStatus_NO_SESSION = 2,

  /**
   * @generated from enum value: GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE = 3;
   */
  GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE = 3,

  /**
   * @generated from enum value: GCConnectionStatus_NO_STEAM = 4;
   */
  GCConnectionStatus_NO_STEAM = 4,
}

/**
 * Describes the enum GCConnectionStatus.
 */
export const GCConnectionStatusSchema: GenEnum<GCConnectionStatus> = /*@__PURE__*/
  enumDesc(file_gcsdk_gcmessages, 1);

